{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Appointments.tsx\";\nimport React from 'react';\nimport '../App.css';\nimport { Text, Button, Layout, Breadcrumb, InputGroup, Accordion, InputSelect, Modal, RadioButton } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nimport Booking from \"../models/booking\";\nimport { Container, Label, ModalContent, OptionContainer } from \"../models/doc-elements\";\nconst StyledContainer = styled(Layout.GridContainer)`\n    grid-template-rows: 1fr;\n    grid-template-columns: 12fr;\n    grid-template-areas:\n        \"title\"\n        \"button \"\n        \"queue\";\n    grid-gap: 0.25rem;\n    grid-row-gap: 16px;\n`;\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\nconst Main = styled.main`\n  color: white;\n  grid-area: queue;\n  padding: 0.25rem;\n`;\nvar queueNumberArray = [];\n\nclass Appointment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookings: [],\n      inputValue: '',\n      clicked: 'none',\n      showModal: false,\n      showNRIC: 'none',\n      showGeneralPractioner: 'block',\n      showDivider: 'block',\n      showSpecialist: 'block',\n      showGeneralTypeDropDown: 'none',\n      selected: 'A'\n    };\n    this.loadData = this.loadData.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n    setInterval(this.loadData, 10000);\n  }\n\n  async loadData() {\n    try {\n      var apiURL;\n      apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines'; // if (searchMethod == \"location\") {\n      //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n      //     document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n      // }\n      // else {\n      //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/citizen/' + this.state.inputValue;\n      //     console.log(apiURL)\n      //     if (this.state.inputValue == '') {\n      //         apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n      //     }\n      //     // document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n      // }\n\n      fetch(apiURL).then(function (response) {\n        return response.json();\n      }).then(myJson => {\n        this.setState({\n          bookings: []\n        });\n        myJson.data.forEach(element => {\n          var eachBooking = new Booking(element[\"_id\"], element[\"nric\"], element[\"citizenName\"], element[\"citizenSalutation\"], element[\"citizenEmail\"], element[\"citizenNumber\"], element[\"generalType\"], element[\"serviceName\"], element[\"serviceProviderName\"], element[\"serviceProviderEmail\"], element[\"serviceProviderPhone\"], element[\"serviceStartDate\"], element[\"serviceStartTime\"], element[\"serviceProviderLocation\"], element[\"bookingStatus\"], element[\"queueNumber\"]); // const bookings = this.state.bookings.slice(0);\n\n          this.state.bookings.push(eachBooking); // console.log(bookings)\n\n          this.setState({\n            bookings: this.state.bookings,\n            clicked: 'block'\n          });\n        });\n      }); //   console.log(blocks.data)\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async searchByLocation(val) {\n    console.log(val);\n\n    if (val == \"General Practioner\") {\n      this.setState({\n        showSpecialist: 'none',\n        showDivider: 'none',\n        showGeneralPractioner: 'block',\n        showNRIC: 'none',\n        showGeneralTypeDropDown: 'block'\n      });\n    }\n\n    if (val == \"Specialist\") {\n      this.setState({\n        showSpecialist: 'block',\n        showDivider: 'none',\n        showGeneralPractioner: 'none',\n        showNRIC: 'none',\n        showGeneralTypeDropDown: 'block'\n      });\n    } // var apiURL: string\n    // if (searchMethod == \"location\") {\n    //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n    //     document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n    // }\n    // else {\n    //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/citizen/' + this.state.inputValue;\n    //     console.log(apiURL)\n    //     if (this.state.inputValue == '') {\n    //         apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n    //     }\n    //     // document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n    // }\n    // fetch(apiURL)\n    //     .then(function (response) {\n    //         return response.json();\n    //     })\n    //     .then((myJson) => {\n    //         this.state.bookings.length = 0;\n    //         myJson.data.forEach(element => {\n    //             var eachBooking = new Booking(\n    //                 element[\"_id\"],\n    //                 element[\"nric\"],\n    //                 element[\"citizenName\"],\n    //                 element[\"citizenSalutation\"],\n    //                 element[\"citizenEmail\"],\n    //                 element[\"citizenNumber\"],\n    //                 element[\"generalType\"],\n    //                 element[\"serviceName\"],\n    //                 element[\"serviceProviderName\"],\n    //                 element[\"serviceProviderEmail\"],\n    //                 element[\"serviceProviderPhone\"],\n    //                 element[\"serviceStartDate\"],\n    //                 element[\"serviceStartTime\"],\n    //                 element[\"serviceProviderLocation\"],\n    //                 element[\"bookingStatus\"],\n    //                 element[\"queueNumber\"]\n    //             );\n    //             // const bookings = this.state.bookings.slice(0);\n    //             this.state.bookings.push(eachBooking)\n    //             // console.log(bookings)\n    //             this.setState({\n    //                 bookings: this.state.bookings,\n    //                 clicked: 'block'\n    //             });\n    //         });\n    //     });\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StyledSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Base, {\n      show: this.state.showModal,\n      animationFrom: \"bottom\",\n      enableOverlayClick: true // onOverlayClick={closeModal()}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Box, {\n      onClose: () => {\n        this.setState({\n          showModal: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ModalContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 33\n      }\n    }, \"Send to queue succesfully\")))), /*#__PURE__*/React.createElement(Layout.Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      links: [{\n        title: 'Home',\n        url: '/Home'\n      }, {\n        title: 'Appointments'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(OptionContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(RadioButton, {\n      value: \"A\",\n      id: \"multiple-options-a\",\n      name: \"multiple-options\",\n      onChange: () => {\n        this.setState({\n          selected: 'A',\n          showSpecialist: 'block',\n          showDivider: 'block',\n          showGeneralPractioner: 'block',\n          showNRIC: 'none',\n          showGeneralTypeDropDown: 'none'\n        });\n      },\n      checked: this.state.selected === \"A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"multiple-options-a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 33\n      }\n    }, \"View All Appointments\")), /*#__PURE__*/React.createElement(OptionContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(RadioButton, {\n      value: \"B\",\n      id: \"multiple-options-b\",\n      name: \"multiple-options\",\n      onChange: () => {\n        this.setState({\n          selected: 'B',\n          showSpecialist: 'none',\n          showDivider: 'none',\n          showGeneralPractioner: 'none',\n          showNRIC: 'block',\n          showGeneralTypeDropDown: 'none'\n        });\n      },\n      checked: this.state.selected === \"B\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"multiple-options-b\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }, \"View appointments by NRIC\")), /*#__PURE__*/React.createElement(OptionContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(RadioButton, {\n      value: \"C\",\n      id: \"multiple-options-c\",\n      name: \"multiple-options\",\n      onChange: () => {\n        this.setState({\n          selected: 'C',\n          showSpecialist: 'none',\n          showDivider: 'none',\n          showGeneralPractioner: 'none',\n          showNRIC: 'none',\n          showGeneralTypeDropDown: 'block'\n        });\n      },\n      checked: this.state.selected === \"C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"multiple-options-c\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 33\n      }\n    }, \"View Appointments by Service Type\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divNRIC\",\n      style: {\n        justifyItems: \"start\",\n        maxWidth: '400px',\n        display: this.state.showNRIC\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        'margin': '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 33\n      }\n    }, \"Search by NRIC: \")), /*#__PURE__*/React.createElement(InputGroup, {\n      addon: {\n        type: 'custom'\n      },\n      placeholder: \"Type NRIC here...\",\n      onChange: evt => this.updateInputValue(evt),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        'padding': '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button.Default, {\n      onClick: () => this.searchByLocation(\"NRIC\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 29\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divLocation\",\n      className: \"inlinecontent\",\n      style: {\n        justifyItems: \"start\",\n        maxWidth: '400px',\n        display: this.state.showGeneralTypeDropDown\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputSelect, {\n      options: [{\n        value: \"General Practioner\",\n        label: \"General Practioner\"\n      }, {\n        value: \"Specialist\",\n        label: \"Specialist\"\n      }],\n      valueExtractor: item => item.value,\n      listExtractor: item => item.label,\n      displayValueExtractor: item => item.label,\n      placeholder: \"Select a service type\",\n      onSelectItem: (item, selectedValue) => {\n        this.setState({\n          inputValue: selectedValue\n        }, () => {\n          this.searchByLocation(selectedValue);\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divAppointments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divGeneralPractioner\",\n      className: \"rcorner2\",\n      style: {\n        'display': this.state.showGeneralPractioner\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(StyledContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Text.H3, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 37\n      }\n    }, \"Appointments [General Practioner]\"), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 37\n      }\n    }, \"Government services appointments\"), /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Base, {\n      className: \"base\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 41\n      }\n    }, this.state.bookings.map((input, index) => {\n      var showButton = 'none';\n\n      if (input.BookingStatus == 'New') {\n        showButton = 'block';\n      }\n\n      console.log(this.state.bookings);\n      return /*#__PURE__*/React.createElement(Accordion.Item, {\n        title: input.CitizenName,\n        key: index,\n        expanded: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Text.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 69\n        }\n      }, \"Citizen Name :\"), \"  \", input.CitizenName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 69\n        }\n      }, \"Citizen Number: \"), \" \", input.CitizenNumber), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 69\n        }\n      }, \"Citizen Email: \"), \" \", input.CitizenEmail), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 69\n        }\n      }, \"Service start date:\"), \"  \", input.ServiceStartDate), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 69\n        }\n      }, \"Service start time:\"), \"  \", input.ServiceStartTime), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 69\n        }\n      }, \"Service Name:\"), \"  \", input.ServiceName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 69\n        }\n      }, \"Service Provider Location:\"), \"  \", input.ServiceProviderLocation), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 69\n        }\n      }, \"Service Status:\"), \"  \", input.BookingStatus)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          'display': showButton\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Button.Default, {\n        onClick: () => this.checkPage(this.handle200, input.Id, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 65\n        }\n      }, \"Send to Queue\"))));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divDivider\",\n      className: \"spacer5\",\n      style: {\n        'display': this.state.showDivider\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divSpecialist\",\n      className: \"rcorner\",\n      style: {\n        'display': this.state.showSpecialist\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(StyledContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Text.H3, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 37\n      }\n    }, \"Appointments [Specialist]\"), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 37\n      }\n    }, \"Government services appointments\"), /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Base, {\n      className: \"base\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 41\n      }\n    }, this.state.bookings.map((input, index) => {\n      var showButton = 'none';\n\n      if (input.BookingStatus == 'New') {\n        showButton = 'block';\n      }\n\n      console.log(this.state.bookings);\n      return /*#__PURE__*/React.createElement(Accordion.Item, {\n        title: input.CitizenName,\n        key: index,\n        expanded: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Text.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 69\n        }\n      }, \"Citizen Name :\"), \"  \", input.CitizenName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 69\n        }\n      }, \"Citizen Number: \"), \" \", input.CitizenNumber), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 69\n        }\n      }, \"Citizen Email: \"), \" \", input.CitizenEmail), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 69\n        }\n      }, \"Service start date:\"), \"  \", input.ServiceStartDate), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 69\n        }\n      }, \"Service start time:\"), \"  \", input.ServiceStartTime), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 69\n        }\n      }, \"Service Name:\"), \"  \", input.ServiceName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 69\n        }\n      }, \"Service Provider Location:\"), \"  \", input.ServiceProviderLocation), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 69\n        }\n      }, \"Service Status:\"), \"  \", input.BookingStatus)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          'display': showButton\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Button.Default, {\n        onClick: () => this.checkPage(this.handle200, input.Id, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 65\n        }\n      }, \"Send to Queue\"))));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 37\n      }\n    })))))));\n  }\n\n  handle200(response) {\n    console.log('handle200 has received:', response);\n  }\n\n  checkPage(callback, bookingId, nric, citizenName, citizenEmail, citizenNumber, booking) {\n    this.state.bookings.forEach(element => queueNumberArray.push(Number(element.QueueNumber.slice(1))));\n    console.log(\"test!!\" + queueNumberArray);\n    var num = Math.max.apply(null, queueNumberArray) + 1;\n    console.log(num);\n    var str = String(num);\n\n    while (str.length < 4) str = \"0\" + str;\n\n    str = \"H\" + str;\n    booking.QueueNumber = str;\n    console.log(str);\n    const queueObject = {\n      \"_id\": bookingId,\n      \"nric\": nric,\n      \"citizenName\": citizenName,\n      \"citizenEmail\": citizenEmail,\n      \"citizenNumber\": booking.CitizenNumber,\n      \"citizenSalutation\": booking.CitizenSalutation,\n      \"serviceName\": booking.ServiceName,\n      \"serviceProviderEmail\": booking.ServiceProviderEmail,\n      \"serviceProviderName\": booking.ServiceProviderName,\n      \"serviceStartDate\": booking.ServiceStartDate,\n      \"serviceProviderPhone\": booking.ServiceProviderPhone,\n      \"serviceStartTime\": booking.ServiceStartTime,\n      \"serviceProviderLocation\": booking.ServiceProviderLocation,\n      \"bookingStatus\": booking.BookingStatus,\n      \"queueNumber\": str\n    };\n    const myJSON = encodeURI(JSON.stringify(queueObject));\n    const xhr = new XMLHttpRequest(),\n          method = \"GET\",\n          url = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId + \"&exchangeID=hospital&bindingKey=doctor&bookingDetails=\" + myJSON; // initialize a new GET request\n\n    xhr.open(method, url, true); // respond to every readyState change\n\n    xhr.onreadystatechange = () => {\n      // ignore all readyStates other than \"DONE\"\n      if (xhr.readyState !== XMLHttpRequest.DONE) {\n        return;\n      } // call the callback with status\n\n\n      if (xhr.status === 200) {\n        this.setState({\n          showModal: true\n        });\n        return callback(xhr.status);\n      } // got something other than 200,\n      // re-initialize and send another GET request\n\n\n      xhr.open(method, url, true);\n      xhr.send();\n    }; // send the initial GET request\n\n\n    xhr.send();\n  }\n\n  updateInputValue(evt) {\n    const val = evt.target.value;\n    this.setState({\n      inputValue: val\n    });\n  }\n\n}\n\nexport default Appointment;\n\nvar pad = function (num) {\n  var str = String(num++);\n\n  while (str.length < 4) str = \"0\" + str;\n\n  return str;\n}; // function closeModalFn(): (() => void) | undefined { \n//     throw new Error('Function not implemented.');\n// }\n// const [show, setShow ] = useState(false)\n// function closeModal(): (() => void) | undefined {\n//     document.getElementById(\"divModal\")!!.style.display = \"none\";\n//     throw new Error('Function not implemented.');\n// }\n// call checkPage once","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Appointments.tsx"],"names":["React","Text","Button","Layout","Breadcrumb","InputGroup","Accordion","InputSelect","Modal","RadioButton","styled","Booking","Container","Label","ModalContent","OptionContainer","StyledContainer","GridContainer","StyledSection","Section","Main","main","queueNumberArray","Appointment","Component","constructor","props","state","bookings","inputValue","clicked","showModal","showNRIC","showGeneralPractioner","showDivider","showSpecialist","showGeneralTypeDropDown","selected","loadData","bind","componentDidMount","setInterval","apiURL","process","env","REACT_APP_MY_EC2_API_ADDRESS","fetch","then","response","json","myJson","setState","data","forEach","element","eachBooking","push","e","console","log","searchByLocation","val","render","title","url","justifyItems","maxWidth","display","type","evt","updateInputValue","value","label","item","selectedValue","map","input","index","showButton","BookingStatus","CitizenName","CitizenNumber","CitizenEmail","ServiceStartDate","ServiceStartTime","ServiceName","ServiceProviderLocation","checkPage","handle200","Id","Nric","callback","bookingId","nric","citizenName","citizenEmail","citizenNumber","booking","Number","QueueNumber","slice","num","Math","max","apply","str","String","length","queueObject","CitizenSalutation","ServiceProviderEmail","ServiceProviderName","ServiceProviderPhone","myJSON","encodeURI","JSON","stringify","xhr","XMLHttpRequest","method","open","onreadystatechange","readyState","DONE","status","send","target","pad"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../App.css';\nimport { Text, Button, Layout, BoxContainer, Breadcrumb, InputGroup, Accordion, InputSelect, Modal, RadioButton, LinkList, } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nimport Booking from \"../models/booking\";\n\nimport { Container, Label, ModalContent, OptionContainer } from \"../models/doc-elements\";\nimport BaseService from '../service/base.service';\n\n\nconst StyledContainer = styled(Layout.GridContainer)`\n    grid-template-rows: 1fr;\n    grid-template-columns: 12fr;\n    grid-template-areas:\n        \"title\"\n        \"button \"\n        \"queue\";\n    grid-gap: 0.25rem;\n    grid-row-gap: 16px;\n`;\n\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n\nconst Main = styled.main`\n  color: white;\n  grid-area: queue;\n  padding: 0.25rem;\n`;\n\ninterface MyState {\n    bookings: Booking[],\n    inputValue: string,\n    clicked: string,\n    showModal: boolean,\n    showNRIC: string,\n    showGeneralPractioner: string,\n    showDivider: string,\n    showSpecialist: string,\n    showGeneralTypeDropDown: string,\n    selected: string\n}\n\nvar queueNumberArray: number[] = [];\n\n\n\n\n\nclass Appointment extends React.Component<{}, MyState> {\n\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            inputValue: '',\n            clicked: 'none',\n            showModal: false,\n            showNRIC: 'none',\n            showGeneralPractioner: 'block',\n            showDivider: 'block',\n            showSpecialist: 'block',\n            showGeneralTypeDropDown: 'none',\n            selected: 'A'\n\n        };\n        this.loadData = this.loadData.bind(this)\n    }\n\n\n    componentDidMount() {\n        this.loadData();\n        setInterval(this.loadData, 10000);\n    }\n\n    async loadData() {\n        try {\n            var apiURL: string\n            apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n            // if (searchMethod == \"location\") {\n            //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n            //     document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n\n            // }\n            // else {\n            //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/citizen/' + this.state.inputValue;\n            //     console.log(apiURL)\n            //     if (this.state.inputValue == '') {\n            //         apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n            //     }\n            //     // document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n\n            // }\n\n            fetch(apiURL)\n                .then(function (response) {\n\n                    return response.json();\n                })\n                .then((myJson) => {\n                    this.setState({\n                        bookings: []\n                    })\n                    myJson.data.forEach(element => {\n                        var eachBooking = new Booking(\n                            element[\"_id\"],\n                            element[\"nric\"],\n                            element[\"citizenName\"],\n                            element[\"citizenSalutation\"],\n                            element[\"citizenEmail\"],\n                            element[\"citizenNumber\"],\n                            element[\"generalType\"],\n                            element[\"serviceName\"],\n                            element[\"serviceProviderName\"],\n                            element[\"serviceProviderEmail\"],\n                            element[\"serviceProviderPhone\"],\n                            element[\"serviceStartDate\"],\n                            element[\"serviceStartTime\"],\n                            element[\"serviceProviderLocation\"],\n                            element[\"bookingStatus\"],\n                            element[\"queueNumber\"]\n                        );\n\n\n                        // const bookings = this.state.bookings.slice(0);\n                        this.state.bookings.push(eachBooking)\n\n\n                        // console.log(bookings)\n\n                        this.setState({\n                            bookings: this.state.bookings,\n                            clicked: 'block'\n                        });\n\n                    });\n                });\n\n            //   console.log(blocks.data)\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    public async searchByLocation(val: string) {\n\n        console.log(val)\n\n        if (val == \"General Practioner\") {\n\n            this.setState({\n                showSpecialist: 'none',\n                showDivider: 'none',\n                showGeneralPractioner: 'block',\n                showNRIC: 'none',\n                showGeneralTypeDropDown: 'block'\n            });\n\n\n\n\n        }\n        if (val == \"Specialist\") {\n            this.setState({\n                showSpecialist: 'block',\n                showDivider: 'none',\n                showGeneralPractioner: 'none',\n                showNRIC: 'none',\n                showGeneralTypeDropDown: 'block'\n            });\n\n        }\n        // var apiURL: string\n        // if (searchMethod == \"location\") {\n        //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n        //     document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n\n        // }\n        // else {\n        //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/citizen/' + this.state.inputValue;\n        //     console.log(apiURL)\n        //     if (this.state.inputValue == '') {\n        //         apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n        //     }\n        //     // document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n\n        // }\n\n        // fetch(apiURL)\n        //     .then(function (response) {\n\n        //         return response.json();\n        //     })\n        //     .then((myJson) => {\n        //         this.state.bookings.length = 0;\n        //         myJson.data.forEach(element => {\n        //             var eachBooking = new Booking(\n        //                 element[\"_id\"],\n        //                 element[\"nric\"],\n        //                 element[\"citizenName\"],\n        //                 element[\"citizenSalutation\"],\n        //                 element[\"citizenEmail\"],\n        //                 element[\"citizenNumber\"],\n        //                 element[\"generalType\"],\n        //                 element[\"serviceName\"],\n        //                 element[\"serviceProviderName\"],\n        //                 element[\"serviceProviderEmail\"],\n        //                 element[\"serviceProviderPhone\"],\n        //                 element[\"serviceStartDate\"],\n        //                 element[\"serviceStartTime\"],\n        //                 element[\"serviceProviderLocation\"],\n        //                 element[\"bookingStatus\"],\n        //                 element[\"queueNumber\"]\n        //             );\n\n\n        //             // const bookings = this.state.bookings.slice(0);\n        //             this.state.bookings.push(eachBooking)\n\n\n        //             // console.log(bookings)\n\n        //             this.setState({\n        //                 bookings: this.state.bookings,\n        //                 clicked: 'block'\n        //             });\n\n        //         });\n        //     });\n    }\n\n    render() {\n\n\n        return (\n\n            <div>\n\n\n\n                <StyledSection>\n\n                    <Modal.Base\n                        show={this.state.showModal}\n                        animationFrom=\"bottom\"\n                        enableOverlayClick={true}\n                    // onOverlayClick={closeModal()}\n                    >\n                        <Modal.Box onClose={() => {\n\n                            this.setState({\n                                showModal: false\n                            });\n\n\n\n                        }}>\n                            <ModalContent>\n                                <span>Send to queue succesfully</span>\n                            </ModalContent>\n                        </Modal.Box>\n                    </Modal.Base>\n\n                    <Layout.Container>\n\n\n\n                        <Breadcrumb links={[{ title: 'Home', url: '/Home' }, { title: 'Appointments' }]} />\n\n                        <Container>\n                            <OptionContainer>\n                                <RadioButton value=\"A\" id=\"multiple-options-a\" name=\"multiple-options\" onChange={() => {\n                                    this.setState({\n                                        selected: 'A',\n                                        showSpecialist: 'block',\n                                        showDivider: 'block',\n                                        showGeneralPractioner: 'block',\n                                        showNRIC: 'none',\n                                        showGeneralTypeDropDown: 'none'\n                                    }\n\n                                    );\n                                }} checked={this.state.selected === \"A\"} />\n                                <Label htmlFor=\"multiple-options-a\">View All Appointments</Label>\n                            </OptionContainer>\n                            <OptionContainer>\n                                <RadioButton value=\"B\" id=\"multiple-options-b\" name=\"multiple-options\" onChange={() => {\n                                    this.setState({\n                                        selected: 'B',\n                                        showSpecialist: 'none',\n                                        showDivider: 'none',\n                                        showGeneralPractioner: 'none',\n                                        showNRIC: 'block',\n                                        showGeneralTypeDropDown: 'none'\n                                    }\n\n                                    );\n                                }} checked={this.state.selected === \"B\"} />\n                                <Label htmlFor=\"multiple-options-b\">View appointments by NRIC</Label>\n                            </OptionContainer>\n                            <OptionContainer>\n                                <RadioButton value=\"C\" id=\"multiple-options-c\" name=\"multiple-options\" onChange={() => {\n                                    this.setState({\n                                        selected: 'C',\n                                        showSpecialist: 'none',\n                                        showDivider: 'none',\n                                        showGeneralPractioner: 'none',\n                                        showNRIC: 'none',\n                                        showGeneralTypeDropDown: 'block'\n                                    });\n                                }} checked={this.state.selected === \"C\"} />\n                                <Label htmlFor=\"multiple-options-c\">View Appointments by Service Type</Label>\n                            </OptionContainer>\n                        </Container>\n\n                        <div className=\"spacer2\"></div>\n\n                        <div id='divNRIC' style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showNRIC }}>\n                            <div style={{ 'margin': '5px' }}>\n                                <Text.Body >Search by NRIC: </Text.Body>\n                            </div>\n                            <InputGroup addon={{\n                                type: 'custom'\n                            }} placeholder=\"Type NRIC here...\"\n\n                                onChange={evt => this.updateInputValue(evt)}\n                            />\n\n                            <div style={{ 'padding': '5px' }}></div>\n                            <Button.Default onClick={() => this.searchByLocation(\"NRIC\")} >Search</Button.Default>\n                        </div>\n\n                        <div id='divLocation' className=\"inlinecontent\" style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showGeneralTypeDropDown }}>\n                            <InputSelect\n                                options={[\n                                    { value: \"General Practioner\", label: \"General Practioner\" },\n                                    { value: \"Specialist\", label: \"Specialist\" },\n\n                                ]}\n\n                                valueExtractor={(item) => item.value}\n                                listExtractor={(item) => item.label}\n                                displayValueExtractor={(item) => item.label}\n                                placeholder=\"Select a service type\"\n                                onSelectItem={(item, selectedValue) => {\n                                    this.setState({ inputValue: selectedValue }, () => {\n                                        this.searchByLocation(selectedValue)\n                                    });\n                                }} />\n\n                        </div>\n                        {/* <div className=\"spacer2\"></div> \n                         <div id=\"outsideCitizenInfoDiv\" style={{ display: 'none' }}>\n                            <BoxContainer title=\"Citizen Information\" collapsible={false} className=\"textleft\" >\n                                <div style={{ padding: \"2rem\", minWidth: \"1080px\" }}>\n                                    <Layout.GridContainer className=\"column4\">\n                                        <Text.Body weight=\"semibold\">NRIC</Text.Body>\n                                        <Text.Body weight=\"semibold\">Name</Text.Body>\n                                        <Text.Body weight=\"semibold\">Phone Number</Text.Body>\n                                        <Text.Body weight=\"semibold\">Email</Text.Body>\n                                        <Text.Body>{this.state.bookings[0]?.Nric}</Text.Body>\n                                        <Text.Body>{this.state.bookings[0]?.CitizenName}</Text.Body>\n                                        <Text.Body>{this.state.bookings[0]?.CitizenNumber}</Text.Body>\n                                        <Text.Body>{this.state.bookings[0]?.CitizenEmail}</Text.Body>\n                                    </Layout.GridContainer>\n                                </div>\n                            </BoxContainer>\n                        </div> */}\n\n                        <div className=\"spacer5\"></div>\n\n                        <div id='divAppointments' >\n\n                            <div id='divGeneralPractioner' className='rcorner2' style={{'display': this.state.showGeneralPractioner}}>\n\n\n                                <StyledContainer>\n                                    <Text.H3>Appointments [General Practioner]</Text.H3>\n                                    <Text.Body>Government services appointments</Text.Body>\n                                    <Main>\n\n\n\n\n                                        <Accordion.Base className='base' >\n                                            {this.state.bookings.map((input, index) => {\n                                                var showButton = 'none';\n                                                if (input.BookingStatus == 'New') {\n                                                    showButton = 'block';\n                                                }\n                                                console.log(this.state.bookings)\n                                                return (\n                                                    <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                        <Text.Body>\n                                                            <ul>\n                                                                <li>\n                                                                    <b>Citizen Name :</b>  {input.CitizenName}\n                                                                </li>\n                                                                <li>\n                                                                    <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                </li>\n                                                                <li>\n                                                                    <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                </li>\n                                                                <li>\n                                                                    <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                </li>\n                                                                <li>\n                                                                    <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                </li>\n                                                                <li>\n                                                                    <b>Service Name:</b>  {input.ServiceName}\n                                                                </li>\n                                                                <li>\n                                                                    <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                </li>\n                                                                <li>\n                                                                    <b>Service Status:</b>  {input.BookingStatus}\n                                                                </li>\n                                                            </ul>\n                                                            <div style={{ 'display': showButton }}>\n                                                                <Button.Default\n                                                                    onClick={() => this.checkPage(this.handle200, input.Id!!, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input)}\n                                                                >Send to Queue</Button.Default>\n                                                            </div>\n\n                                                        </Text.Body>\n                                                    </Accordion.Item>\n                                                )\n                                            })}\n                                        </Accordion.Base>\n\n                                    </Main>\n\n\n                                    <div className=\"spacer3\"></div>\n                                </StyledContainer>\n\n\n                            </div>\n                            <div id='divDivider' className=\"spacer5\" style={{'display': this.state.showDivider}}></div>\n\n\n\n                            <div id='divSpecialist' className='rcorner' style={{'display': this.state.showSpecialist}}>\n\n\n                                <StyledContainer>\n                                    <Text.H3>Appointments [Specialist]</Text.H3>\n                                    <Text.Body>Government services appointments</Text.Body>\n                                    <Main>\n\n\n\n\n                                        <Accordion.Base className='base' >\n                                            {this.state.bookings.map((input, index) => {\n                                                var showButton = 'none';\n                                                if (input.BookingStatus == 'New') {\n                                                    showButton = 'block';\n                                                }\n                                                console.log(this.state.bookings)\n                                                return (\n                                                    <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                        <Text.Body>\n                                                            <ul>\n                                                                <li>\n                                                                    <b>Citizen Name :</b>  {input.CitizenName}\n                                                                </li>\n                                                                <li>\n                                                                    <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                </li>\n                                                                <li>\n                                                                    <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                </li>\n                                                                <li>\n                                                                    <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                </li>\n                                                                <li>\n                                                                    <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                </li>\n                                                                <li>\n                                                                    <b>Service Name:</b>  {input.ServiceName}\n                                                                </li>\n                                                                <li>\n                                                                    <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                </li>\n                                                                <li>\n                                                                    <b>Service Status:</b>  {input.BookingStatus}\n                                                                </li>\n                                                            </ul>\n                                                            <div style={{ 'display': showButton }}>\n                                                                <Button.Default\n                                                                    onClick={() => this.checkPage(this.handle200, input.Id!!, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input)}\n                                                                >Send to Queue</Button.Default>\n                                                            </div>\n\n                                                        </Text.Body>\n                                                    </Accordion.Item>\n                                                )\n                                            })}\n                                        </Accordion.Base>\n\n                                    </Main>\n\n\n                                    <div className=\"spacer3\"></div>\n                                </StyledContainer>\n                            </div>\n\n\n                        </div>\n                    </Layout.Container>\n                </StyledSection>\n            </div>\n        )\n    }\n\n    handle200(response) {\n        console.log('handle200 has received:', response);\n    }\n\n    checkPage(callback, bookingId: string, nric: string, citizenName: string, citizenEmail: string, citizenNumber: string, booking: Booking) {\n        this.state.bookings.forEach(element => queueNumberArray.push(Number(element.QueueNumber.slice(1))));\n\n        console.log(\"test!!\" + queueNumberArray)\n\n        var num = Math.max.apply(null, queueNumberArray) + 1;\n\n        console.log(num);\n\n        var str = String(num);\n\n        while (str.length < 4) str = \"0\" + str;\n\n        str = \"H\" + str;\n        booking.QueueNumber = str;\n\n        console.log(str)\n\n\n\n        const queueObject = {\n            \"_id\": bookingId,\n            \"nric\": nric,\n            \"citizenName\": citizenName,\n            \"citizenEmail\": citizenEmail,\n            \"citizenNumber\": booking.CitizenNumber,\n            \"citizenSalutation\": booking.CitizenSalutation,\n            \"serviceName\": booking.ServiceName,\n            \"serviceProviderEmail\": booking.ServiceProviderEmail,\n            \"serviceProviderName\": booking.ServiceProviderName,\n            \"serviceStartDate\": booking.ServiceStartDate,\n            \"serviceProviderPhone\": booking.ServiceProviderPhone,\n            \"serviceStartTime\": booking.ServiceStartTime,\n            \"serviceProviderLocation\": booking.ServiceProviderLocation,\n            \"bookingStatus\": booking.BookingStatus,\n            \"queueNumber\": str,\n        }\n\n        const myJSON = encodeURI(JSON.stringify(queueObject));\n\n\n        const xhr = new XMLHttpRequest(),\n            method = \"GET\",\n            url = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId + \"&exchangeID=hospital&bindingKey=doctor&bookingDetails=\" + myJSON;\n        // initialize a new GET request\n        xhr.open(method, url, true);\n\n        // respond to every readyState change\n        xhr.onreadystatechange = () => {\n\n            // ignore all readyStates other than \"DONE\"\n            if (xhr.readyState !== XMLHttpRequest.DONE) { return; }\n\n            // call the callback with status\n            if (xhr.status === 200) {\n                this.setState({\n                    showModal: true\n                });\n                return callback(xhr.status);\n            }\n\n            // got something other than 200,\n            // re-initialize and send another GET request\n            xhr.open(method, url, true);\n            xhr.send();\n        }\n\n        // send the initial GET request\n        xhr.send();\n    }\n\n    updateInputValue(evt) {\n        const val = evt.target.value;\n        this.setState({\n            inputValue: val\n        });\n\n\n\n    }\n}\n\nexport default Appointment;\n\n\n\n\n\nvar pad = function (num) {\n    var str = String(num++);\n    while (str.length < 4) str = \"0\" + str;\n    return str;\n};\n\n\n// function closeModalFn(): (() => void) | undefined { \n//     throw new Error('Function not implemented.');\n// }\n// const [show, setShow ] = useState(false)\n// function closeModal(): (() => void) | undefined {\n//     document.getElementById(\"divModal\")!!.style.display = \"none\";\n//     throw new Error('Function not implemented.');\n// }\n// call checkPage once\n\n"]},"metadata":{},"sourceType":"module"}