{"ast":null,"code":"import Response from \"../models/response\";\nimport axios from \"axios\";\nexport default class BaseService {\n  static async getAll(url) {\n    let res = await axios.get(url).then(response => {\n      const result = response.data;\n\n      if (result && result.success) {\n        return new Response(true, result.data, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n    });\n    return res;\n  }\n\n  static get(url, param) {\n    let res = axios.get(url + param).then(response => {\n      const result = response.data;\n\n      if (result && result.success) {\n        return new Response(true, result.data, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n    });\n    return res;\n  }\n\n  static delete(url, param) {\n    console.log(param);\n    let res = axios.delete(url, {\n      data: param\n    }).then(response => {\n      const result = response.data;\n\n      if (result && result.success) {\n        return new Response(true, result.data, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n    });\n    return res;\n  }\n\n  static create(url, obj) {\n    let res = axios.post(url, obj).then(response => {\n      const result = response.data;\n\n      if (result && result.success) {\n        return new Response(true, result.data, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n    });\n    return res;\n  }\n\n  static update(url, param, obj) {\n    let res = axios.post(url + param, obj).then(response => {\n      const result = response.data;\n\n      if (result && result.success) {\n        return new Response(true, result.data, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n      ;\n    });\n    return res;\n  }\n\n}","map":{"version":3,"sources":["/Users/lowqilong/Desktop/FYP/queue-system/frontend/src/service/base.service.tsx"],"names":["Response","axios","BaseService","getAll","url","res","get","then","response","result","data","success","msg","messageList","length","text","catch","error","param","delete","console","log","create","obj","post","update"],"mappings":"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","sourcesContent":["import Response from \"../models/response\";\nimport axios from \"axios\";\n\n\nexport default class BaseService  {\n\n\n\n    public static async getAll<T>(url: string): Promise<Response> {\n        let res = await axios.get<Array<T>>(url)\n            .then((response: any) => {\n                const result = response.data;\n                if(result && result.success){\n                    return new Response(true, result.data  as Array<T>, \"Success\", \"\");\n                }else{\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text: \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n              \n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);\n            });\n        return res;\n    }\n\n    public static get<T>(url: string, param: any): Promise<Response> {\n        let res = axios.get<T>(url + param)\n            .then((response: any) => {\n                const result = response.data;\n                if(result && result.success){\n                    return new Response(true, result.data , \"Success\", \"\");\n                }else{\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text: \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);\n            });\n        return res;\n    }\n    public static delete(url: string, param: any): Promise<Response> {\n        console.log(param);\n        \n        let res = axios.delete(url , { data: param })\n            .then(response => { \n                const result = response.data;\n                if(result && result.success){\n                    return new Response(true, result.data , \"Success\", \"\");\n                }else{\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text: \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);\n            });\n        return res;\n    }\n    public static create<T>(url: string, obj: T): Promise<Response> {\n\n        let res = axios.post(url ,obj)\n            .then(response => {\n                const result = response.data;\n                if(result && result.success){\n                    return new Response(true, result.data , \"Success\", \"\");\n                }else{\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text: \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);\n            });\n        return res;\n    }\n    public static update<T>(url: string, param: any, obj: T): Promise<Response> {\n\n        let res = axios.post(url + param, obj)\n            .then(response => {\n                const result = response.data;\n                if(result && result.success){\n                    return new Response(true, result.data , \"Success\", \"\");\n                }else{\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text: \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);;\n            });\n        return res;\n    }\n}"]},"metadata":{},"sourceType":"module"}