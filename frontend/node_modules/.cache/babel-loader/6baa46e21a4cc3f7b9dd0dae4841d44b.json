{"ast":null,"code":"import * as React from 'react';\n\nrequire('dotenv').config();\n\nclass Home extends React.Component {\n  // const configValue: string = (process.env.MY_EC2_ADDRESS as string);\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: process.env.MY_EC2_ADDRESS\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    var sessionResult = sessionStorage.getItem('data') || '{}';\n    var obj = JSON.parse(sessionResult);\n    console.log(sessionResult);\n    var role = obj.Role;\n\n    if (role == 'admin') {}\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Home.tsx"],"names":["React","require","config","Home","Component","constructor","props","state","url","process","env","MY_EC2_ADDRESS","componentDidMount","render","sessionResult","sessionStorage","getItem","obj","JSON","parse","console","log","role","Role"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAUA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmD;AACjD;AAEAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADN,KAAb;AAGD;;AACMC,EAAAA,iBAAiB,GAAG,CAE1B;;AAEMC,EAAAA,MAAM,GAAoB;AAC/B,QAAIC,aAAa,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,KAAkC,IAAtD;AACA,QAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWL,aAAX,CAAV;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,aAAZ;AAEA,QAAIQ,IAAI,GAAGL,GAAG,CAACM,IAAf;;AACA,QAAGD,IAAI,IAAI,OAAX,EAAmB,CAElB;AAEF;;AAvBgD;;AAyBnD,eAAenB,IAAf","sourcesContent":["import * as React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Button, Text, MasonryTileGridContainer, MasonryTile, ImageSelector } from \"react-lifesg-design-system\"\nrequire('dotenv').config();\n\ninterface IProps {\n}\ninterface IState {\n  url: string\n}\n\n\n\nclass Home extends React.Component<IProps, IState> {\n  // const configValue: string = (process.env.MY_EC2_ADDRESS as string);\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: process.env.MY_EC2_ADDRESS as string\n    }\n  }\n  public componentDidMount() {\n\n  }\n\n  public render(): React.ReactNode {\n    var sessionResult = sessionStorage.getItem('data') || '{}'\n    var obj = JSON.parse(sessionResult);\n    console.log(sessionResult)\n    \n    var role = obj.Role\n    if(role == 'admin'){\n\n    }\n    \n  }\n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}