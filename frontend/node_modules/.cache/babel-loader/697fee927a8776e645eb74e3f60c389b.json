{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/common/components/form/dropdown.tsx\";\nimport * as React from \"react\";\nimport { Form } from 'react-lifesg-design-system';\nexport const Dropdown = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: formatWrapperClass(props),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, props.label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Select, {\n    label: \"Category\",\n    placeholder: \"Select\",\n    options: [{\n      value: \"A\",\n      label: \"Option A\"\n    }, {\n      value: \"B\",\n      label: \"Option B\"\n    }, {\n      value: \"C\",\n      label: \"Option C\"\n    }, {\n      value: \"D\",\n      label: \"Option D\"\n    }],\n    valueExtractor: item => item.value,\n    listExtractor: item => item.label,\n    displayValueExtractor: item => item.label // onSelectItem={(item, extractedValue) => someFn()}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"help-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, props.error));\n};\n\nconst formatWrapperClass = props => {\n  const wrapperClass = 'form-group';\n  return props.error ? `${wrapperClass} has-error` : wrapperClass;\n}; // const onChangeInput = (props: Props) => (e: React.ChangeEvent<HTMLInputElement>) => { \n//   props.onChange(e.target.name, e.target.value);\n// };","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/common/components/form/dropdown.tsx"],"names":["React","Form","Dropdown","props","formatWrapperClass","name","label","value","item","error","wrapperClass"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,4BAArB;AAYA,OAAO,MAAMC,QAAwC,GAAIC,KAAD,IAAW;AACjE,sBACE;AAAK,IAAA,SAAS,EAAEC,kBAAkB,CAACD,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAEA,KAAK,CAACE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BF,KAAK,CAACG,KAAnC,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,WAAW,EAAC,QAFd;AAGE,IAAA,OAAO,EAAE,CACP;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcD,MAAAA,KAAK,EAAE;AAArB,KADO,EAEP;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcD,MAAAA,KAAK,EAAE;AAArB,KAFO,EAGP;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcD,MAAAA,KAAK,EAAE;AAArB,KAHO,EAIP;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcD,MAAAA,KAAK,EAAE;AAArB,KAJO,CAHX;AASE,IAAA,cAAc,EAAGE,IAAD,IAAUA,IAAI,CAACD,KATjC;AAUE,IAAA,aAAa,EAAGC,IAAD,IAAUA,IAAI,CAACF,KAVhC;AAWE,IAAA,qBAAqB,EAAGE,IAAD,IAAUA,IAAI,CAACF,KAXxC,CAYA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAkBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BH,KAAK,CAACM,KAAnC,CAlBF,CADF;AAsBD,CAvBM;;AAyBP,MAAML,kBAAkB,GAAID,KAAD,IAAkB;AAC3C,QAAMO,YAAY,GAAG,YAArB;AAEA,SAAOP,KAAK,CAACM,KAAN,GACJ,GAAEC,YAAa,YADX,GAELA,YAFF;AAGD,CAND,C,CAQA;AACA;AACA","sourcesContent":["import * as React from \"react\";\nimport { Form } from 'react-lifesg-design-system'\n\ninterface Props {\n  name: string;\n  label: string;\n  placeholder?: string;\n  value: any;\n  // onChange: (fieldName: string, value: string) => void;\n  error?: string;\n  options: string[];\n}\n\nexport const Dropdown: React.FunctionComponent<Props> = (props) => {\n  return (\n    <div className={formatWrapperClass(props)}>\n      <label htmlFor={props.name}>{props.label}</label>\n      <div className=\"field\">\n        <Form.Select\n          label=\"Category\"\n          placeholder=\"Select\"\n          options={[\n            { value: \"A\", label: \"Option A\" },\n            { value: \"B\", label: \"Option B\" },\n            { value: \"C\", label: \"Option C\" },\n            { value: \"D\", label: \"Option D\" },\n          ]}\n          valueExtractor={(item) => item.value}\n          listExtractor={(item) => item.label}\n          displayValueExtractor={(item) => item.label}\n        // onSelectItem={(item, extractedValue) => someFn()}\n        />\n      </div>\n      <div className=\"help-block\">{props.error}</div>\n    </div>\n  )\n};\n\nconst formatWrapperClass = (props: Props) => {\n  const wrapperClass = 'form-group';\n\n  return props.error ?\n    `${wrapperClass} has-error` :\n    wrapperClass;\n};\n\n// const onChangeInput = (props: Props) => (e: React.ChangeEvent<HTMLInputElement>) => { \n//   props.onChange(e.target.name, e.target.value);\n// };\n"]},"metadata":{},"sourceType":"module"}