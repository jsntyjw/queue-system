{"ast":null,"code":"// import * as React from \"react\";\n// import TableRow from \"./ViewAllBookings\";\n// import Booking from \"../models/booking\";\n// import BaseService from \"../service/base.service\";\n// import * as toastr from \"toastr\";\n// interface IProps {}\n// interface IState {\n//   listBookings: Array<Booking>;\n//   isReady: Boolean;\n//   hasError: Boolean;\n// }\n// class Index extends React.Component<IProps, IState> {\n//   public state: IState = {\n//     listBookings: new Array<Booking>(),\n//     isReady: false,\n//     hasError: false,\n//   };\n//   constructor(props: IProps) {\n//     super(props);\n//     this.state = {\n//       isReady: false,\n//       listBookings: Array<Booking>(),\n//       hasError: false,\n//     };\n//   }\n//   public componentDidMount() {\n//     BaseService.getAll<Booking>(\"/booking\").then((rp) => {\n//       if (rp.Status) {\n//         const data = rp.Data;\n//         const listBookings = new Array<Booking>();\n//         (data || []).forEach((p: any) => {\n//           listBookings.push(new Booking(\n//             p._id,  \n//             p.nric,\n//             p.citizenName, \n//             p.citizenSalutation, \n//             p.citizenEmail,\n//             p.citizenNumber,\n//             p.serviceName, \n//             p.serviceProviderName, \n//             p.serviceProviderEmail,\n//             p.serviceProviderPhone, \n//             p.serviceStartDate,\n//             p.serviceStartTime, \n//             p.serviceProviderLocation,\n//             p.bookingStatus,\n//             ));\n//         });\n//         this.setState({ listBookings: listBookings }); \n//         this.setState({ isReady: true });\n//       } else {\n//         this.setState({ isReady: true });\n//         this.setState({ hasError: true });\n//         console.log(\"Messages: \" + rp.Messages);\n//         console.log(\"Exception: \" + rp.Exception);\n//       }\n//     });\n//     setTimeout(() => {\n//       if (!this.state.isReady) {\n//         toastr.info(\n//           \"It is possible that the service is being restarted, please wait more ...\",\n//           \"\",\n//           { timeOut: 8000 }\n//         );\n//       }\n//       if (this.state.hasError) {\n//         toastr.error(\n//           \"An error occurred!\",\n//           \"\",\n//           { timeOut: 8000 }\n//         );\n//       }\n//     }, 2000);\n//   }\n//   public tabRow = () => {\n//     if (!this.state.isReady) {\n//       return (\n//         <tr>\n//           <td colSpan={6} className=\"text-center\">\n//             <div className=\"spinner-border\" role=\"status\">\n//               <span className=\"visually-hidden\">Loading...</span>\n//             </div>\n//           </td>\n//         </tr>\n//       );\n//     }\n//     if (this.state.hasError) {\n//       return (\n//         <tr>\n//           <td colSpan={6} className=\"text-center\">\n//             <div className=\"alert alert-danger\" role=\"alert\">\n//               An error occurred!\n//             </div>\n//           </td>\n//         </tr>\n//       );\n//     }\n//     return this.state.listBookings.map(function (object, i) {\n//       return <TableRow key={i} index={i + 1} booking={object} />;\n//     });\n//   };\n//   public render(): React.ReactNode {\n//     return (\n//       <div>\n//         <h3 className=\"text-center\">Bookings List</h3>\n//         <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n//           <thead>\n//             <tr>\n//               <th>Index</th>\n//               <th>Nric</th>\n//               <th>CitizenName</th>\n//               <th>CitizenSalutation</th>\n//               <th>CitizenEmail</th>\n//               <th>CitizenNumber</th>\n//               <th>ServiceName</th>\n//               <th>ServiceProviderName</th>\n//               <th>ServiceProviderEmail</th>\n//               <th>ServiceProviderPhone</th>\n//               <th>ServiceStartDate</th>\n//               <th>ServiceStartTime</th>\n//               <th>ServiceProviderLocation</th>\n//               <th>BookingStatus</th>\n//               <th className=\"text-center\" colSpan={2}>\n//                 Action\n//               </th>\n//             </tr>\n//           </thead>\n//           <tbody>{this.tabRow()}</tbody>\n//         </table>\n//       </div>\n//     );\n//   }\n// }\n// export default Index;","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/index.component.tsx"],"names":[],"mappingssourcesContent":["// import * as React from \"react\";\n// import TableRow from \"./ViewAllBookings\";\n// import Booking from \"../models/booking\";\n// import BaseService from \"../service/base.service\";\n// import * as toastr from \"toastr\";\n// interface IProps {}\n// interface IState {\n//   listBookings: Array<Booking>;\n//   isReady: Boolean;\n//   hasError: Boolean;\n// }\n\n// class Index extends React.Component<IProps, IState> {\n//   public state: IState = {\n//     listBookings: new Array<Booking>(),\n//     isReady: false,\n//     hasError: false,\n//   };\n//   constructor(props: IProps) {\n//     super(props);\n//     this.state = {\n//       isReady: false,\n//       listBookings: Array<Booking>(),\n//       hasError: false,\n//     };\n//   }\n\n//   public componentDidMount() {\n//     BaseService.getAll<Booking>(\"/booking\").then((rp) => {\n//       if (rp.Status) {\n//         const data = rp.Data;\n//         const listBookings = new Array<Booking>();\n\n//         (data || []).forEach((p: any) => {\n//           listBookings.push(new Booking(\n//             p._id,  \n//             p.nric,\n//             p.citizenName, \n//             p.citizenSalutation, \n//             p.citizenEmail,\n//             p.citizenNumber,\n\n//             p.serviceName, \n//             p.serviceProviderName, \n//             p.serviceProviderEmail,\n//             p.serviceProviderPhone, \n//             p.serviceStartDate,\n//             p.serviceStartTime, \n//             p.serviceProviderLocation,\n//             p.bookingStatus,\n            \n//             ));\n//         });\n\n//         this.setState({ listBookings: listBookings }); \n//         this.setState({ isReady: true });\n//       } else {\n//         this.setState({ isReady: true });\n//         this.setState({ hasError: true });\n//         console.log(\"Messages: \" + rp.Messages);\n//         console.log(\"Exception: \" + rp.Exception);\n//       }\n//     });\n\n//     setTimeout(() => {\n//       if (!this.state.isReady) {\n//         toastr.info(\n//           \"It is possible that the service is being restarted, please wait more ...\",\n//           \"\",\n//           { timeOut: 8000 }\n//         );\n//       }\n\n//       if (this.state.hasError) {\n//         toastr.error(\n//           \"An error occurred!\",\n//           \"\",\n//           { timeOut: 8000 }\n//         );\n//       }\n//     }, 2000);\n//   }\n\n//   public tabRow = () => {\n//     if (!this.state.isReady) {\n//       return (\n//         <tr>\n//           <td colSpan={6} className=\"text-center\">\n//             <div className=\"spinner-border\" role=\"status\">\n//               <span className=\"visually-hidden\">Loading...</span>\n//             </div>\n//           </td>\n//         </tr>\n//       );\n//     }\n//     if (this.state.hasError) {\n//       return (\n//         <tr>\n//           <td colSpan={6} className=\"text-center\">\n//             <div className=\"alert alert-danger\" role=\"alert\">\n//               An error occurred!\n//             </div>\n//           </td>\n//         </tr>\n//       );\n//     }\n\n//     return this.state.listBookings.map(function (object, i) {\n//       return <TableRow key={i} index={i + 1} booking={object} />;\n//     });\n//   };\n\n//   public render(): React.ReactNode {\n//     return (\n//       <div>\n//         <h3 className=\"text-center\">Bookings List</h3>\n//         <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n//           <thead>\n//             <tr>\n//               <th>Index</th>\n//               <th>Nric</th>\n//               <th>CitizenName</th>\n//               <th>CitizenSalutation</th>\n//               <th>CitizenEmail</th>\n//               <th>CitizenNumber</th>\n\n//               <th>ServiceName</th>\n//               <th>ServiceProviderName</th>\n//               <th>ServiceProviderEmail</th>\n//               <th>ServiceProviderPhone</th>\n//               <th>ServiceStartDate</th>\n//               <th>ServiceStartTime</th>\n//               <th>ServiceProviderLocation</th>\n//               <th>BookingStatus</th>\n              \n//               <th className=\"text-center\" colSpan={2}>\n//                 Action\n//               </th>\n//             </tr>\n//           </thead>\n//           <tbody>{this.tabRow()}</tbody>\n//         </table>\n//       </div>\n//     );\n//   }\n// }\n// export default Index;\n"]},"metadata":{},"sourceType":"module"}