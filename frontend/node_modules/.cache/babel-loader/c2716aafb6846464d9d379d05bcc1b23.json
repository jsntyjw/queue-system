{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/common/components/form/dropdown.tsx\";\nimport * as React from \"react\";\nimport { Form } from 'react-lifesg-design-system';\nexport const Dropdown = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: formatWrapperClass(props),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, props.label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Select, {\n    name: props.name,\n    className: \"form-control\",\n    placeholder: props.placeholder,\n    options: props.options,\n    label: props.value,\n    valueExtractor: item => {\n      props.value;\n    } // valueExtractor={(props) => props.value}\n    // onSelectItem={(item, extractedValue) => {extractedValue = props.value  } }\n    // onselect ={ props.value}\n    // valueExtractor={(item) => props.value}\n    // onChange={onChangeInput(props)}\n    // onSelectItem={\n    //   console.log(\"st\")\n    // }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"help-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, props.error));\n};\n\nconst formatWrapperClass = props => {\n  const wrapperClass = 'form-group';\n  return props.error ? `${wrapperClass} has-error` : wrapperClass;\n}; // const onChangeInput = (props: Props) => (e: React.ChangeEvent<HTMLInputElement>) => { \n//   props.onChange(e.target.name, e.target.value);\n// };","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/common/components/form/dropdown.tsx"],"names":["React","Form","Dropdown","props","formatWrapperClass","name","label","placeholder","options","value","item","error","wrapperClass"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,IAAR,QAAmB,4BAAnB;AAYA,OAAO,MAAMC,QAAwC,GAAIC,KAAD,IAAW;AACjE,sBACE;AAAK,IAAA,SAAS,EAAEC,kBAAkB,CAACD,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAEA,KAAK,CAACE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BF,KAAK,CAACG,KAAnC,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAEH,KAAK,CAACE,IADd;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,WAAW,EAAEF,KAAK,CAACI,WAHrB;AAIE,IAAA,OAAO,EAAEJ,KAAK,CAACK,OAJjB;AAKE,IAAA,KAAK,EAAEL,KAAK,CAACM,KALf;AAME,IAAA,cAAc,EAAGC,IAAD,IAAU;AAACP,MAAAA,KAAK,CAACM,KAAN;AAAc,KAN3C,CAQE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAqBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BN,KAAK,CAACQ,KAAnC,CArBF,CADF;AAyBD,CA1BM;;AA4BP,MAAMP,kBAAkB,GAAID,KAAD,IAAkB;AAC3C,QAAMS,YAAY,GAAG,YAArB;AAEA,SAAOT,KAAK,CAACQ,KAAN,GACJ,GAAEC,YAAa,YADX,GAELA,YAFF;AAGD,CAND,C,CAQA;AACA;AACA","sourcesContent":["import * as React from \"react\";\nimport {Form} from 'react-lifesg-design-system'\n\ninterface Props {\n  name: string;\n  label: string;\n  placeholder?: string;\n  value: string;\n  // onChange: (fieldName: string, value: string) => void;\n  error?: string;\n  options: string[]; \n}\n\nexport const Dropdown: React.FunctionComponent<Props> = (props) => {\n  return (\n    <div className={formatWrapperClass(props)}>\n      <label htmlFor={props.name}>{props.label}</label>\n      <div className=\"field\">\n        <Form.Select \n          name={props.name}\n          className=\"form-control\"\n          placeholder={props.placeholder}\n          options={props.options}\n          label={props.value}\n          valueExtractor={(item) => {props.value  }}\n\n          // valueExtractor={(props) => props.value}\n          // onSelectItem={(item, extractedValue) => {extractedValue = props.value  } }\n          // onselect ={ props.value}\n          // valueExtractor={(item) => props.value}\n          // onChange={onChangeInput(props)}\n          // onSelectItem={\n          //   console.log(\"st\")\n          // }\n        />\n      </div>\n      <div className=\"help-block\">{props.error}</div>\n    </div>\n  )\n};\n\nconst formatWrapperClass = (props: Props) => {\n  const wrapperClass = 'form-group';\n\n  return props.error ?\n    `${wrapperClass} has-error` :\n    wrapperClass;\n};\n\n// const onChangeInput = (props: Props) => (e: React.ChangeEvent<HTMLInputElement>) => { \n//   props.onChange(e.target.name, e.target.value);\n// };\n"]},"metadata":{},"sourceType":"module"}