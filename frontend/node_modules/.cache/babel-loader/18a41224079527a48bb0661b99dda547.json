{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeffrey\\\\Documents\\\\queue-system\\\\frontend\\\\src\\\\components\\\\edit.component.tsx\";\nimport React from 'react';\nimport * as toastr from 'toastr';\nimport Booking from '../models/booking';\nimport BaseService from '../service/base.service';\nimport { BookingPage } from './page.form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Edit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSave = () => {\n      console.log(this.state.booking);\n      BaseService.update(\"/booking/update/\", this.props.match.params.id, this.state.booking).then(rp => {\n        if (rp.Status) {\n          toastr.success('Booking saved.');\n          this.props.history.goBack();\n        } else {\n          toastr.error(rp.Messages);\n          console.log(\"Messages: \" + rp.Messages);\n          console.log(\"Exception: \" + rp.Exception);\n        }\n      });\n    };\n\n    this.state = {\n      booking: {\n        Nric: '',\n        CitizenName: '',\n        CitizenSalutation: '',\n        CitizenEmail: '',\n        CitizenNumber: '',\n        ServiceName: '',\n        ServiceProviderName: '',\n        ServiceProviderEmail: '',\n        ServiceProviderPhone: '',\n        ServiceStartDateTime: '',\n        ServiceEndDateTime: '',\n        BookingCreationDate: '',\n        BookingLocation: '',\n        BookingDescription: '',\n        BookingReference: '',\n        BookingStatus: '',\n        DynamicFields: '',\n        Id: ''\n      }\n    };\n    this.onFieldValueChange = this.onFieldValueChange.bind(this);\n  }\n\n  onFieldValueChange(fieldName, value) {\n    const nextState = { ...this.state,\n      booking: { ...this.state.booking,\n        [fieldName]: value\n      }\n    };\n    this.setState(nextState);\n  }\n\n  componentDidMount() {\n    BaseService.get('/booking/edit/', this.props.match.params.id).then(rp => {\n      if (rp.Status) {\n        const booking = rp.Data;\n        this.setState({\n          booking: new Booking(booking._id, booking.nric, booking.citizenName, booking.citizenSalutation, booking.citizenEmail, booking.citizenNumber, booking.serviceName, booking.serviceProviderName, booking.serviceProviderEmail, booking.ServiceProviderPhone, booking.serviceStartDateTime, booking.serviceEndDateTime, booking.bookingCreationDate, booking.bookingLocation, booking.bookingDescription, booking.bookingReference, booking.bookingStatus, booking.dynamicFields)\n        });\n      } else {\n        toastr.error(rp.Messages);\n        console.log(\"Messages: \" + rp.Messages);\n        console.log(\"Exception: \" + rp.Exception);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BookingPage, {\n      booking: this.state.booking,\n      onChange: this.onFieldValueChange,\n      onSave: this.onSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Jeffrey/Documents/queue-system/frontend/src/components/edit.component.tsx"],"names":["React","toastr","Booking","BaseService","BookingPage","Edit","Component","constructor","props","onSave","console","log","state","booking","update","match","params","id","then","rp","Status","success","history","goBack","error","Messages","Exception","Nric","CitizenName","CitizenSalutation","CitizenEmail","CitizenNumber","ServiceName","ServiceProviderName","ServiceProviderEmail","ServiceProviderPhone","ServiceStartDateTime","ServiceEndDateTime","BookingCreationDate","BookingLocation","BookingDescription","BookingReference","BookingStatus","DynamicFields","Id","onFieldValueChange","bind","fieldName","value","nextState","setState","componentDidMount","get","Data","_id","nric","citizenName","citizenSalutation","citizenEmail","citizenNumber","serviceName","serviceProviderName","serviceProviderEmail","serviceStartDateTime","serviceEndDateTime","bookingCreationDate","bookingLocation","bookingDescription","bookingReference","bookingStatus","dynamicFields","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as toastr from 'toastr';\r\nimport Booking from '../models/booking';\r\nimport BaseService from '../service/base.service';\r\nimport { History } from 'history';\r\nimport { BookingPage } from './page.form'; \r\n\r\n\r\ninterface IProps { \r\n    history: History;\r\n    //Map properties match\r\n    match:{ \r\n        isExact: boolean\r\n        params: {\r\n            id:string\r\n        },\r\n        path: string,\r\n        url: string,\r\n    }\r\n}\r\ninterface IState {\r\n    booking: Booking\r\n}\r\n\r\n\r\nexport default class Edit extends React.Component<IProps, IState> {\r\n\r\n    constructor(props: IProps) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            booking: {\r\n  \r\n                Nric : '',\r\n                CitizenName : '',\r\n                CitizenSalutation : '',\r\n                CitizenEmail : '',\r\n                CitizenNumber : '',\r\n\r\n                ServiceName : '',\r\n                ServiceProviderName : '',\r\n                ServiceProviderEmail : '',\r\n                ServiceProviderPhone : '',\r\n                ServiceStartDateTime : '',\r\n                ServiceEndDateTime : '',\r\n\r\n                BookingCreationDate : '',\r\n                BookingLocation : '',\r\n                BookingDescription : '',\r\n                BookingReference : '',\r\n                BookingStatus : '',\r\n\r\n                DynamicFields : '',\r\n                Id: ''\r\n            }\r\n        }\r\n        this.onFieldValueChange = this.onFieldValueChange.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    private onFieldValueChange(fieldName: string, value: string) { \r\n        const nextState = {\r\n            ...this.state,\r\n            booking: {\r\n                ...this.state.booking,\r\n                [fieldName]: value,\r\n            }\r\n        };\r\n\r\n        this.setState(nextState);\r\n    }\r\n\r\n    public componentDidMount() { \r\n        BaseService.get<Booking>('/booking/edit/', this.props.match.params.id).then(\r\n            (rp) => {\r\n                if (rp.Status) {\r\n                    const booking = rp.Data;\r\n                    this.setState({ booking: new Booking(\r\n                        booking._id, \r\n                        booking.nric,\r\n                        booking.citizenName, \r\n                        booking.citizenSalutation, \r\n                        booking.citizenEmail,\r\n                        booking.citizenNumber,\r\n\r\n                        booking.serviceName, \r\n                        booking.serviceProviderName, \r\n                        booking.serviceProviderEmail,\r\n                        booking.ServiceProviderPhone,\r\n                        booking.serviceStartDateTime, \r\n                        booking.serviceEndDateTime, \r\n\r\n                        booking.bookingCreationDate,\r\n                        booking.bookingLocation, \r\n                        booking.bookingDescription, \r\n                        booking.bookingReference, \r\n                        booking.bookingStatus, \r\n                        booking.dynamicFields )});\r\n                } else {\r\n                    toastr.error(rp.Messages);\r\n                    console.log(\"Messages: \" + rp.Messages);\r\n                    console.log(\"Exception: \" + rp.Exception);\r\n                }\r\n            }\r\n\r\n        );\r\n    }\r\n\r\n\r\n    private onSave = () => {\r\n\r\n        console.log(this.state.booking);\r\n        BaseService.update<Booking>(\"/booking/update/\", this.props.match.params.id,this.state.booking).then(\r\n            (rp) => {\r\n                if (rp.Status) {\r\n                    toastr.success('Booking saved.');\r\n                    this.props.history.goBack();\r\n                } else {\r\n                    toastr.error(rp.Messages);\r\n                    console.log(\"Messages: \" + rp.Messages);\r\n                    console.log(\"Exception: \" + rp.Exception);\r\n                }\r\n            }\r\n        );\r\n\r\n    }\r\n \r\n    render() {\r\n        return (\r\n            <BookingPage\r\n                booking={this.state.booking}\r\n                onChange={this.onFieldValueChange}\r\n                onSave={this.onSave}\r\n            />\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}