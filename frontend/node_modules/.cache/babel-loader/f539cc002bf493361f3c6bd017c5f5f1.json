{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Appointments.tsx\";\nimport React from 'react';\nimport '../App.css';\nimport { Text, Button, Layout, Breadcrumb, InputGroup, Accordion, InputSelect, Modal, RadioButton } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nimport Booking from \"../models/booking\";\nimport { Container, Label, ModalContent, OptionContainer } from \"../models/doc-elements\";\nimport BaseService from '../service/base.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledContainer = styled(Layout.GridContainer)`\n    grid-template-rows: 1fr;\n    grid-template-columns: 12fr;\n    grid-template-areas:\n        \"title\"\n        \"button \"\n        \"queue\";\n    grid-gap: 0.25rem;\n    grid-row-gap: 16px;\n`;\n_c = StyledContainer;\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n_c2 = StyledSection;\nconst Main = styled.main`\n  color: white;\n  grid-area: queue;\n  padding: 0.25rem;\n`;\n_c3 = Main;\nvar queueNumberArray = [];\n\nclass Appointment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookings: [],\n      inputValue: '',\n      clicked: 'none',\n      showModal: false,\n      showNRIC: 'none',\n      showGeneralPractioner: 'block',\n      showDivider: 'block',\n      showSpecialist: 'block',\n      showGeneralTypeDropDown: 'none',\n      selected: 'A',\n      showDivCitizenAppoinments: 'none',\n      chooseOtherOptions: false,\n      agencySelection: \"HPB\",\n      showDivHPBView: \"block\",\n      showHospitalView: \"none\",\n      showGeneralTypeDropDownHPB: \"none\",\n      showDIVHPBcomuunityHealth: \"block\",\n      showDIVHPBworkplaceHealth: \"block\",\n      showGeneralServiceDropDown: \"none\",\n      showGeneralServiceDropDownHospital: \"none\",\n      dropDownHint: \"Select a service\",\n      generatedNumber: \"\"\n    };\n    this.loadData = this.loadData.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData(); // setInterval(this.loadData, 1000);\n  }\n\n  async loadData() {\n    // if (this.state.chooseOtherOptions == false) {\n    try {\n      var apiURL;\n      apiURL = process.env.REACT_APP_APPOINTMENT_API_ADDRESS + 'api/booking/location/Tampines';\n      fetch(apiURL).then(function (response) {\n        return response.json();\n      }).then(myJson => {\n        this.setState({\n          bookings: []\n        });\n        myJson.data.forEach(element => {\n          var eachBooking = new Booking(element[\"_id\"], element[\"nric\"], element[\"citizenName\"], element[\"citizenSalutation\"], element[\"citizenEmail\"], element[\"citizenNumber\"], element[\"generalType\"], element[\"serviceName\"], element[\"serviceProviderName\"], element[\"serviceProviderEmail\"], element[\"serviceProviderPhone\"], element[\"serviceStartDate\"], element[\"serviceStartTime\"], element[\"serviceProviderLocation\"], element[\"bookingStatus\"], element[\"queueNumber\"]);\n          this.state.bookings.push(eachBooking);\n          this.setState({\n            bookings: this.state.bookings,\n            clicked: 'block'\n          });\n        });\n      });\n    } catch (e) {\n      console.log(e);\n    } // }\n\n  }\n\n  async searchByLocation(val) {\n    console.log(val);\n\n    if (val == \"General Practioner\") {\n      this.loadData();\n      this.setState({\n        showSpecialist: 'none',\n        showDivider: 'none',\n        showGeneralPractioner: 'block',\n        showNRIC: 'none',\n        showGeneralTypeDropDown: 'block',\n        showGeneralServiceDropDownHospital: 'none'\n      });\n    }\n\n    if (val == \"Specialist\") {\n      this.loadData();\n      this.setState({\n        showSpecialist: 'block',\n        showDivider: 'none',\n        showGeneralPractioner: 'none',\n        showNRIC: 'none',\n        showGeneralTypeDropDown: 'block',\n        showGeneralServiceDropDownHospital: 'none'\n      });\n      window.location.reload();\n      this.loadData();\n    }\n\n    if (val == \"communityHealth\") {\n      this.loadData();\n      this.setState({\n        showSpecialist: 'none',\n        showDivider: 'none',\n        showGeneralPractioner: 'none',\n        showNRIC: 'none',\n        showGeneralTypeDropDownHPB: 'block',\n        showDIVHPBcomuunityHealth: \"block\",\n        showDIVHPBworkplaceHealth: \"none\",\n        showGeneralServiceDropDownHospital: 'none'\n      });\n    }\n\n    if (val == \"workplaceHealth\") {\n      this.loadData();\n      this.setState({\n        showSpecialist: 'none',\n        showDivider: 'none',\n        showGeneralPractioner: 'none',\n        showNRIC: 'none',\n        showGeneralTypeDropDownHPB: 'block',\n        showDIVHPBcomuunityHealth: \"none\",\n        showDIVHPBworkplaceHealth: \"block\",\n        showGeneralServiceDropDownHospital: 'none'\n      });\n    }\n\n    if (val == \"NRIC\") {\n      // this.loadData();\n      this.setState({\n        showGeneralServiceDropDownHospital: 'none'\n      });\n\n      if (this.state.inputValue == '' || this.state.inputValue == null) {\n        return;\n      }\n\n      var apiURL;\n      apiURL = process.env.REACT_APP_APPOINTMENT_API_ADDRESS + 'api/booking/citizen/' + this.state.inputValue;\n      console.log(\"testing::: \" + apiURL);\n      fetch(apiURL).then(function (response) {\n        return response.json();\n      }).then(myJson => {\n        this.state.bookings.length = 0;\n        myJson.data.forEach(element => {\n          var eachBooking = new Booking(element[\"_id\"], element[\"nric\"], element[\"citizenName\"], element[\"citizenSalutation\"], element[\"citizenEmail\"], element[\"citizenNumber\"], element[\"generalType\"], element[\"serviceName\"], element[\"serviceProviderName\"], element[\"serviceProviderEmail\"], element[\"serviceProviderPhone\"], element[\"serviceStartDate\"], element[\"serviceStartTime\"], element[\"serviceProviderLocation\"], element[\"bookingStatus\"], element[\"queueNumber\"]); // const bookings = this.state.bookings.slice(0);\n\n          this.state.bookings.push(eachBooking); // console.log(bookings)\n\n          this.setState({\n            bookings: this.state.bookings,\n            clicked: 'block',\n            showDivCitizenAppoinments: 'block'\n          });\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(StyledSection, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Base, {\n          show: this.state.showModal,\n          animationFrom: \"bottom\",\n          enableOverlayClick: true // onOverlayClick={closeModal()}\n          ,\n          children: /*#__PURE__*/_jsxDEV(Modal.Box, {\n            onClose: () => {\n              this.setState({\n                showModal: false\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(ModalContent, {\n              children: [\"Send to queue successfully\", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\" \", this.state.generatedNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Layout.Container, {\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            links: [{\n              title: 'Home',\n              url: '/Home'\n            }, {\n              title: 'Appointments'\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this), \"Change Agency View:\", /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"divAgency\",\n            className: \"inlinecontent\",\n            style: {\n              justifyItems: \"start\",\n              maxWidth: '400px'\n            },\n            children: /*#__PURE__*/_jsxDEV(InputSelect, {\n              options: [{\n                value: \"HPB\",\n                label: \"HPB\"\n              }, {\n                value: \"Hospital\",\n                label: \"Hospital\"\n              }],\n              valueExtractor: item => item.value,\n              listExtractor: item => item.label,\n              displayValueExtractor: item => item.label,\n              placeholder: this.state.agencySelection,\n              onSelectItem: (item, selectedValue) => {\n                this.setState({\n                  inputValue: selectedValue\n                }, () => {\n                  this.ddlAgency(selectedValue);\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"hpbView\",\n            style: {\n              display: this.state.showDivHPBView\n            },\n            children: [/*#__PURE__*/_jsxDEV(Container, {\n              children: [/*#__PURE__*/_jsxDEV(OptionContainer, {\n                children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n                  value: \"A\",\n                  id: \"multiple-options-a\",\n                  name: \"multiple-options\",\n                  onChange: () => {\n                    this.setState({\n                      selected: 'A',\n                      showSpecialist: 'block',\n                      showDivider: 'block',\n                      showGeneralPractioner: 'block',\n                      showNRIC: 'none',\n                      showGeneralTypeDropDown: 'none',\n                      showDivCitizenAppoinments: 'none',\n                      chooseOtherOptions: false,\n                      showGeneralTypeDropDownHPB: \"none\",\n                      showDIVHPBcomuunityHealth: \"block\",\n                      showDIVHPBworkplaceHealth: \"block\"\n                    });\n                    this.loadData();\n                  },\n                  checked: this.state.selected === \"A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"multiple-options-a\",\n                  children: \"View All Appointments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OptionContainer, {\n                children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n                  value: \"B\",\n                  id: \"multiple-options-b\",\n                  name: \"multiple-options\",\n                  onChange: () => {\n                    this.setState({\n                      selected: 'B',\n                      showSpecialist: 'none',\n                      showDivider: 'none',\n                      showGeneralPractioner: 'none',\n                      showNRIC: 'block',\n                      showGeneralTypeDropDown: 'none',\n                      showDivCitizenAppoinments: 'none',\n                      chooseOtherOptions: true,\n                      showGeneralTypeDropDownHPB: \"none\",\n                      showDIVHPBcomuunityHealth: \"none\",\n                      showDIVHPBworkplaceHealth: \"none\"\n                    });\n                  },\n                  checked: this.state.selected === \"B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"multiple-options-b\",\n                  children: \"View appointments by NRIC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OptionContainer, {\n                children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n                  value: \"C\",\n                  id: \"multiple-options-c\",\n                  name: \"multiple-options\",\n                  onChange: () => {\n                    this.setState({\n                      selected: 'C',\n                      showSpecialist: 'none',\n                      showDivider: 'none',\n                      showGeneralPractioner: 'none',\n                      showNRIC: 'none',\n                      showGeneralTypeDropDown: 'none',\n                      showDivCitizenAppoinments: 'none',\n                      chooseOtherOptions: true,\n                      showGeneralTypeDropDownHPB: \"block\",\n                      showDIVHPBworkplaceHealth: \"none\",\n                      showDIVHPBcomuunityHealth: \"none\",\n                      showGeneralServiceDropDownHospital: \"block\",\n                      dropDownHint: \"Select a service\"\n                    });\n                  },\n                  checked: this.state.selected === \"C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"multiple-options-c\",\n                  children: \"View appointments by service\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spacer2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"divNRIC\",\n              style: {\n                justifyItems: \"start\",\n                maxWidth: '400px',\n                display: this.state.showNRIC\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  'margin': '5px'\n                },\n                children: /*#__PURE__*/_jsxDEV(Text.Body, {\n                  children: \"Search by NRIC: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                addon: {\n                  type: 'custom'\n                },\n                placeholder: \"Type NRIC here...\",\n                onChange: evt => this.updateInputValue(evt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  'padding': '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button.Default, {\n                onClick: () => this.searchByLocation(\"NRIC\"),\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"divLocation\",\n              className: \"inlinecontent\",\n              style: {\n                justifyItems: \"start\",\n                maxWidth: '400px',\n                display: this.state.showGeneralTypeDropDownHPB\n              },\n              children: /*#__PURE__*/_jsxDEV(InputSelect, {\n                options: [{\n                  value: \"communityHealth\",\n                  label: \"communityHealth\"\n                }, {\n                  value: \"workplaceHealth\",\n                  label: \"workplaceHealth\"\n                }],\n                valueExtractor: item => item.value,\n                listExtractor: item => item.label,\n                displayValueExtractor: item => item.label,\n                placeholder: this.state.dropDownHint,\n                onSelectItem: (item, selectedValue) => {\n                  this.setState({\n                    inputValue: selectedValue\n                  }, () => {\n                    this.searchByLocation(selectedValue);\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spacer5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"divAppointments\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"divGeneralPractioner\",\n                className: \"rcorner2\",\n                style: {\n                  'display': this.state.showDIVHPBcomuunityHealth\n                },\n                children: /*#__PURE__*/_jsxDEV(StyledContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(Text.H3, {\n                    children: \"Appointments [HPB Consultation - communityHealth]\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Text.Body, {\n                    children: \"Government services appointments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Main, {\n                    children: /*#__PURE__*/_jsxDEV(Accordion.Base, {\n                      className: \"base\",\n                      children: this.state.bookings.filter(element => element.GeneralType == 'HPB Consultation - communityHealth' && element.BookingStatus.includes('New') || element.BookingStatus.includes(\"communityHealth\")).map((input, index) => {\n                        var showButton = 'none';\n\n                        if (input.BookingStatus == 'New' && input.ServiceProviderName.includes(\"HPB\")) {\n                          showButton = 'block';\n                        }\n\n                        console.log(this.state.bookings);\n                        return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n                          title: input.CitizenName,\n                          expanded: false,\n                          children: /*#__PURE__*/_jsxDEV(Text.Body, {\n                            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Citizen Name :\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 516,\n                                  columnNumber: 73\n                                }, this), \"  \", input.CitizenName]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 515,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Citizen Number: \"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 519,\n                                  columnNumber: 73\n                                }, this), \" \", input.CitizenNumber]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 518,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Citizen Email: \"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 522,\n                                  columnNumber: 73\n                                }, this), \" \", input.CitizenEmail]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 521,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service start date:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 525,\n                                  columnNumber: 73\n                                }, this), \"  \", input.ServiceStartDate]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 524,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service start time:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 528,\n                                  columnNumber: 73\n                                }, this), \"  \", input.ServiceStartTime]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 527,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service Name:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 531,\n                                  columnNumber: 73\n                                }, this), \"  \", input.ServiceName]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 530,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service Provider Location:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 534,\n                                  columnNumber: 73\n                                }, this), \"  \", input.ServiceProviderLocation]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 533,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service Status:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 537,\n                                  columnNumber: 73\n                                }, this), \"  \", input.BookingStatus]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 536,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 514,\n                              columnNumber: 65\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                'display': showButton\n                              },\n                              children: /*#__PURE__*/_jsxDEV(Button.Default, {\n                                onClick: () => this.checkPage(this.handle200, input),\n                                children: \"Send to Queue\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 541,\n                                columnNumber: 69\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 540,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 513,\n                            columnNumber: 61\n                          }, this)\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 512,\n                          columnNumber: 57\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"spacer3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"divGeneralPractioner\",\n                className: \"rcorner\",\n                style: {\n                  'display': this.state.showDIVHPBworkplaceHealth\n                },\n                children: /*#__PURE__*/_jsxDEV(StyledContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(Text.H3, {\n                    children: \"Appointments [HPB Consultation - workplaceHealth]\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Text.Body, {\n                    children: \"Government services appointments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Main, {\n                    children: /*#__PURE__*/_jsxDEV(Accordion.Base, {\n                      className: \"base\",\n                      children: this.state.bookings.filter(element => element.GeneralType == 'HPB Consultation - workplaceHealth' && element.BookingStatus.includes('New') || element.BookingStatus.includes(\"workplaceHealth\")).map((input, index) => {\n                        var showButton = 'none';\n\n                        if (input.BookingStatus == 'New' && input.ServiceProviderName.includes(\"HPB\")) {\n                          showButton = 'block';\n                        }\n\n                        console.log(this.state.bookings);\n                        return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n                          title: input.CitizenName,\n                          expanded: false,\n                          children: /*#__PURE__*/_jsxDEV(Text.Body, {\n                            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Citizen Name :\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 591,\n                                  columnNumber: 73\n                                }, this), \"  \", input.CitizenName]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 590,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Citizen Number: \"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 594,\n                                  columnNumber: 73\n                                }, this), \" \", input.CitizenNumber]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 593,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Citizen Email: \"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 597,\n                                  columnNumber: 73\n                                }, this), \" \", input.CitizenEmail]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 596,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service start date:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 600,\n                                  columnNumber: 73\n                                }, this), \"  \", input.ServiceStartDate]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 599,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service start time:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 603,\n                                  columnNumber: 73\n                                }, this), \"  \", input.ServiceStartTime]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 602,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service Name:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 606,\n                                  columnNumber: 73\n                                }, this), \"  \", input.ServiceName]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 605,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service Provider Location:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 609,\n                                  columnNumber: 73\n                                }, this), \"  \", input.ServiceProviderLocation]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 608,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service Status:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 612,\n                                  columnNumber: 73\n                                }, this), \"  \", input.BookingStatus]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 611,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 589,\n                              columnNumber: 65\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                'display': showButton\n                              },\n                              children: /*#__PURE__*/_jsxDEV(Button.Default, {\n                                onClick: () => this.checkPage(this.handle200, input),\n                                children: \"Send to Queue\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 616,\n                                columnNumber: 69\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 615,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 588,\n                            columnNumber: 61\n                          }, this)\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 587,\n                          columnNumber: 57\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 571,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"spacer3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"divDivider\",\n                className: \"spacer5\",\n                style: {\n                  'display': this.state.showDivider\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"divCitizenAppointments\",\n                style: {\n                  'display': this.state.showDivCitizenAppoinments\n                },\n                children: /*#__PURE__*/_jsxDEV(Main, {\n                  children: /*#__PURE__*/_jsxDEV(Accordion.Base, {\n                    className: \"base\",\n                    children: this.state.bookings.filter(element => element.ServiceProviderLocation == 'Tampines').map((input, index) => {\n                      var showButton = 'none';\n\n                      if (input.BookingStatus == 'New' && input.ServiceProviderName.includes(\"HPB\") || input.BookingStatus.includes('workplaceHealth') || input.BookingStatus.includes('communityHealth')) {\n                        showButton = 'block';\n                      }\n\n                      return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n                        title: input.CitizenName,\n                        expanded: false,\n                        children: /*#__PURE__*/_jsxDEV(Text.Body, {\n                          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Citizen Name :\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 662,\n                                columnNumber: 77\n                              }, this), \"  \", input.CitizenName]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 661,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Citizen Number: \"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 665,\n                                columnNumber: 77\n                              }, this), \" \", input.CitizenNumber]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 664,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Citizen Email: \"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 668,\n                                columnNumber: 77\n                              }, this), \" \", input.CitizenEmail]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 667,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Service start date:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 671,\n                                columnNumber: 77\n                              }, this), \"  \", input.ServiceStartDate]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 670,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Service start time:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 674,\n                                columnNumber: 77\n                              }, this), \"  \", input.ServiceStartTime]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 673,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Service Name:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 677,\n                                columnNumber: 77\n                              }, this), \"  \", input.ServiceName]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 676,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Service Provider Location:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 680,\n                                columnNumber: 77\n                              }, this), \"  \", input.ServiceProviderLocation]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 679,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Service Status:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 683,\n                                columnNumber: 77\n                              }, this), \"  \", input.BookingStatus]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 682,\n                              columnNumber: 73\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 660,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              'display': showButton\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Button.Default, {\n                              onClick: () => this.checkPage(this.handle200, input),\n                              children: \"Send to Queue\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 687,\n                              columnNumber: 73\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 686,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 659,\n                          columnNumber: 65\n                        }, this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 658,\n                        columnNumber: 61\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 644,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"hospitalView\",\n            style: {\n              display: this.state.showHospitalView\n            },\n            children: [/*#__PURE__*/_jsxDEV(Container, {\n              children: [/*#__PURE__*/_jsxDEV(OptionContainer, {\n                children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n                  value: \"A\",\n                  id: \"multiple-options-a\",\n                  name: \"multiple-options\",\n                  onChange: () => {\n                    this.setState({\n                      selected: 'A',\n                      showSpecialist: 'block',\n                      showDivider: 'block',\n                      showGeneralPractioner: 'block',\n                      showNRIC: 'none',\n                      showGeneralServiceDropDownHospital: 'none',\n                      showDivCitizenAppoinments: 'none',\n                      chooseOtherOptions: false\n                    });\n                    console.log(\"testing!!!!1\");\n                    this.loadData();\n                  },\n                  checked: this.state.selected === \"A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 717,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"multiple-options-a\",\n                  children: \"View All Appointments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OptionContainer, {\n                children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n                  value: \"B\",\n                  id: \"multiple-options-b\",\n                  name: \"multiple-options\",\n                  onChange: () => {\n                    this.setState({\n                      selected: 'B',\n                      showSpecialist: 'none',\n                      showDivider: 'none',\n                      showGeneralPractioner: 'none',\n                      showNRIC: 'block',\n                      showGeneralServiceDropDownHospital: 'none',\n                      showDivCitizenAppoinments: 'none',\n                      chooseOtherOptions: true\n                    });\n                  },\n                  checked: this.state.selected === \"B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 738,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"multiple-options-b\",\n                  children: \"View appointments by NRIC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 753,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OptionContainer, {\n                children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n                  value: \"C\",\n                  id: \"multiple-options-c\",\n                  name: \"multiple-options\",\n                  onChange: () => {\n                    this.setState({\n                      selected: 'C',\n                      showSpecialist: 'none',\n                      showDivider: 'none',\n                      showGeneralPractioner: 'none',\n                      showNRIC: 'none',\n                      showGeneralServiceDropDownHospital: 'block',\n                      showDivCitizenAppoinments: 'none',\n                      chooseOtherOptions: true\n                    });\n                  },\n                  checked: this.state.selected === \"C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 756,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"multiple-options-c\",\n                  children: \"View Appointments by Service Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spacer2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"divNRIC\",\n              style: {\n                justifyItems: \"start\",\n                maxWidth: '400px',\n                display: this.state.showNRIC\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  'margin': '5px'\n                },\n                children: /*#__PURE__*/_jsxDEV(Text.Body, {\n                  children: \"Search by NRIC: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 777,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                addon: {\n                  type: 'custom'\n                },\n                placeholder: \"Type NRIC here...\",\n                onChange: evt => this.updateInputValue(evt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  'padding': '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button.Default, {\n                onClick: () => this.searchByLocation(\"NRIC\"),\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 787,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inlinecontent\",\n              style: {\n                justifyItems: \"start\",\n                maxWidth: '400px',\n                display: this.state.showGeneralServiceDropDownHospital\n              },\n              children: /*#__PURE__*/_jsxDEV(InputSelect, {\n                options: [{\n                  value: \"General Practioner\",\n                  label: \"General Practioner\"\n                }, {\n                  value: \"Specialist\",\n                  label: \"Specialist\"\n                }],\n                valueExtractor: item => item.value,\n                listExtractor: item => item.label,\n                displayValueExtractor: item => item.label,\n                placeholder: \"Select a service type\",\n                onSelectItem: (item, selectedValue) => {\n                  this.setState({\n                    inputValue: selectedValue\n                  }, () => {\n                    this.searchByLocation(selectedValue);\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spacer5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"divAppointments\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"divGeneralPractioner\",\n                className: \"rcorner2\",\n                style: {\n                  'display': this.state.showGeneralPractioner\n                },\n                children: /*#__PURE__*/_jsxDEV(StyledContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(Text.H3, {\n                    children: \"Appointments [General Practioner]\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 820,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Text.Body, {\n                    children: \"Government services appointments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 821,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Main, {\n                    children: /*#__PURE__*/_jsxDEV(Accordion.Base, {\n                      className: \"base\",\n                      children: this.state.bookings.filter(element => element.GeneralType == 'General Practioner' && element.BookingStatus.includes('New') || element.BookingStatus.includes(\"Doctor\") || element.BookingStatus.includes(\"Payment\") || element.BookingStatus.includes(\"Pharmacy\") // element.GeneralType == 'General Practionar' || !element.BookingStatus.includes(\"HPB\")\n                      ).map((input, index) => {\n                        var showButton = 'none';\n\n                        if (input.BookingStatus == 'New' && !input.ServiceProviderName.includes(\"HPB\")) {\n                          showButton = 'block';\n                        }\n\n                        console.log(this.state.bookings);\n                        return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n                          title: input.CitizenName,\n                          expanded: false,\n                          children: /*#__PURE__*/_jsxDEV(Text.Body, {\n                            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Citizen Name :\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 847,\n                                  columnNumber: 73\n                                }, this), \"  \", input.CitizenName]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 846,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Citizen Number: \"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 850,\n                                  columnNumber: 73\n                                }, this), \" \", input.CitizenNumber]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 849,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Citizen Email: \"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 853,\n                                  columnNumber: 73\n                                }, this), \" \", input.CitizenEmail]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 852,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service start date:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 856,\n                                  columnNumber: 73\n                                }, this), \"  \", input.ServiceStartDate]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 855,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service start time:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 859,\n                                  columnNumber: 73\n                                }, this), \"  \", input.ServiceStartTime]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 858,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service Name:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 862,\n                                  columnNumber: 73\n                                }, this), \"  \", input.ServiceName]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 861,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service Provider Location:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 865,\n                                  columnNumber: 73\n                                }, this), \"  \", input.ServiceProviderLocation]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 864,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service Status:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 868,\n                                  columnNumber: 73\n                                }, this), \"  \", input.BookingStatus]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 867,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 845,\n                              columnNumber: 65\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                'display': showButton\n                              },\n                              children: /*#__PURE__*/_jsxDEV(Button.Default, {\n                                onClick: () => this.checkPage(this.handle200, input),\n                                children: \"Send to Queue\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 872,\n                                columnNumber: 69\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 871,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 844,\n                            columnNumber: 61\n                          }, this)\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 843,\n                          columnNumber: 57\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 827,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 822,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"spacer3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 886,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 819,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"divDivider\",\n                className: \"spacer5\",\n                style: {\n                  'display': this.state.showDivider\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"divCitizenAppointments\",\n                style: {\n                  'display': this.state.showDivCitizenAppoinments\n                },\n                children: /*#__PURE__*/_jsxDEV(Main, {\n                  children: /*#__PURE__*/_jsxDEV(Accordion.Base, {\n                    className: \"base\",\n                    children: this.state.bookings.filter(element => element.ServiceProviderLocation == 'Tampines').map((input, index) => {\n                      var showButton = 'none';\n\n                      if (input.BookingStatus == 'New' && !input.ServiceProviderName.includes(\"HPB\") || input.BookingStatus.includes('Payment') || input.BookingStatus.includes('Pharmacy') || input.BookingStatus.includes('Doctor')) {\n                        showButton = 'block';\n                      }\n\n                      return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n                        title: input.CitizenName,\n                        expanded: false,\n                        children: /*#__PURE__*/_jsxDEV(Text.Body, {\n                          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Citizen Name :\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 917,\n                                columnNumber: 77\n                              }, this), \"  \", input.CitizenName]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 916,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Citizen Number: \"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 920,\n                                columnNumber: 77\n                              }, this), \" \", input.CitizenNumber]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 919,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Citizen Email: \"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 923,\n                                columnNumber: 77\n                              }, this), \" \", input.CitizenEmail]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 922,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Service start date:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 926,\n                                columnNumber: 77\n                              }, this), \"  \", input.ServiceStartDate]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 925,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Service start time:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 929,\n                                columnNumber: 77\n                              }, this), \"  \", input.ServiceStartTime]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 928,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Service Name:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 932,\n                                columnNumber: 77\n                              }, this), \"  \", input.ServiceName]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 931,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Service Provider Location:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 935,\n                                columnNumber: 77\n                              }, this), \"  \", input.ServiceProviderLocation]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 934,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Service Status:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 938,\n                                columnNumber: 77\n                              }, this), \"  \", input.BookingStatus]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 937,\n                              columnNumber: 73\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 915,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              'display': showButton\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Button.Default, {\n                              onClick: () => this.checkPage(this.handle200, input),\n                              children: \"Send to Queue\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 942,\n                              columnNumber: 73\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 941,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 914,\n                          columnNumber: 65\n                        }, this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 913,\n                        columnNumber: 61\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 899,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 894,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"divSpecialist\",\n                className: \"rcorner\",\n                style: {\n                  'display': this.state.showSpecialist\n                },\n                children: /*#__PURE__*/_jsxDEV(StyledContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(Text.H3, {\n                    children: \"Appointments [Specialist]\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 964,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Text.Body, {\n                    children: \"Government services appointments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 965,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Main, {\n                    children: /*#__PURE__*/_jsxDEV(Accordion.Base, {\n                      className: \"base\",\n                      children: this.state.bookings.filter(element => element.GeneralType == 'Specialist').map((input, index) => {\n                        var showButton = 'none';\n\n                        if (input.BookingStatus == 'New' && !input.ServiceProviderName.includes(\"HPB\") || input.BookingStatus.includes('Payment') || input.BookingStatus.includes('Pharmacy') || input.BookingStatus.includes('Doctor')) {\n                          showButton = 'none';\n                        } else {\n                          showButton = 'block';\n                        }\n\n                        console.log(this.state.bookings);\n\n                        if (input.GeneralType == 'General Practionar') {}\n\n                        return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n                          title: input.CitizenName + \" - \" + input.QueueNumber,\n                          expanded: false,\n                          children: /*#__PURE__*/_jsxDEV(Text.Body, {\n                            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Citizen Name :\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 994,\n                                  columnNumber: 81\n                                }, this), \"  \", input.CitizenName]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 993,\n                                columnNumber: 77\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Citizen Number: \"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 997,\n                                  columnNumber: 81\n                                }, this), \" \", input.CitizenNumber]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 996,\n                                columnNumber: 77\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Citizen Email: \"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1000,\n                                  columnNumber: 81\n                                }, this), \" \", input.CitizenEmail]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 999,\n                                columnNumber: 77\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service start date:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1003,\n                                  columnNumber: 81\n                                }, this), \"  \", input.ServiceStartDate]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1002,\n                                columnNumber: 77\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service start time:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1006,\n                                  columnNumber: 81\n                                }, this), \"  \", input.ServiceStartTime]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1005,\n                                columnNumber: 77\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service Name:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1009,\n                                  columnNumber: 81\n                                }, this), \"  \", input.ServiceName]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1008,\n                                columnNumber: 77\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service Provider Location:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1012,\n                                  columnNumber: 81\n                                }, this), \"  \", input.ServiceProviderLocation]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1011,\n                                columnNumber: 77\n                              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                                  children: \"Service Status:\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1015,\n                                  columnNumber: 81\n                                }, this), \"  \", input.BookingStatus]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1014,\n                                columnNumber: 77\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 992,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                'display': showButton\n                              },\n                              children: /*#__PURE__*/_jsxDEV(Button.Default, {\n                                onClick: () => this.checkPage(this.handle200, input),\n                                children: \"Send to Queue\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1019,\n                                columnNumber: 77\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1018,\n                              columnNumber: 73\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 991,\n                            columnNumber: 69\n                          }, this)\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 990,\n                          columnNumber: 65\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 971,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 966,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"spacer3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1037,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 963,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 960,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this);\n  }\n\n  ddlAgency(selectedValue) {\n    if (selectedValue == \"HPB\") {\n      this.setState({\n        showDivHPBView: \"block\",\n        showHospitalView: \"none\",\n        showDivCitizenAppoinments: \"none\",\n        dropDownHint: \"Select a service\"\n      });\n    } else {\n      this.setState({\n        showDivHPBView: \"none\",\n        showHospitalView: \"block\",\n        showDivCitizenAppoinments: \"none\",\n        dropDownHint: \"Select a service\"\n      });\n    }\n  }\n\n  handle200(response) {\n    console.log('handle200 has received:', response);\n  }\n\n  checkPage(callback, booking) {\n    this.loadData();\n    queueNumberArray.push(0);\n    console.log(\"queue number arrary\" + queueNumberArray);\n    var num = Math.max.apply(null, queueNumberArray) + 1;\n    queueNumberArray.push(num);\n    console.log(\"max number: \" + num);\n    var str = String(num);\n\n    while (str.length < 4) str = \"0\" + str;\n\n    str = \"H\" + str;\n    var date = new Date().toISOString().split('T')[0];\n\n    if (booking.QueueNumber == \"\") {\n      booking.QueueNumber = str;\n      this.setState({\n        generatedNumber: \"Generated queue number is \" + str\n      });\n    } else {\n      booking.QueueNumber = booking.QueueNumber;\n      this.setState({\n        generatedNumber: \"Current queue number is \" + booking.QueueNumber\n      });\n    }\n\n    const myJSON = encodeURI(JSON.stringify(booking));\n    var updatedURL = \"\";\n\n    if (booking.GeneralType == \"HPB Consultation - workplaceHealth\" && booking.BookingStatus == \"New\" || booking.BookingStatus.includes(\"workplaceHealth\")) {\n      updatedURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + booking.Id + \"&exchangeID=master&bindingKey=hpb.whq&bookingDetails=\" + myJSON;\n    } else if (booking.GeneralType == \"HPB Consultation - communityHealth\" && booking.BookingStatus == \"New\" || booking.BookingStatus.includes(\"communityHealth\")) {\n      updatedURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + booking.Id + \"&exchangeID=master&bindingKey=hpb.chq&bookingDetails=\" + myJSON;\n      console.log(updatedURL);\n    } else if (booking.GeneralType == \"General Practionar\" && booking.BookingStatus == \"New\" || booking.GeneralType == \"Specialist\" && booking.BookingStatus == \"New\" || booking.BookingStatus.includes(\"Doctor\")) {\n      updatedURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + booking.Id + \"&exchangeID=master&bindingKey=sgh.doctor&bookingDetails=\" + myJSON;\n    } else if (booking.BookingStatus == \"Payment-Missed\" || booking.BookingStatus.includes(\"Payment\")) {\n      updatedURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + booking.Id + \"&exchangeID=master&bindingKey=sgh.payment&bookingDetails=\" + myJSON;\n    } else if (booking.BookingStatus == \"Pharmcy-Missed\" || booking.BookingStatus.includes(\"Pharmcy\")) {\n      updatedURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + booking.Id + \"&exchangeID=master&bindingKey=sgh.pharmcy&bookingDetails=\" + myJSON;\n    }\n\n    console.log(\"testing now \" + updatedURL);\n    const xhr = new XMLHttpRequest(),\n          method = \"GET\",\n          url = updatedURL; // initialize a new GET request\n\n    xhr.open(method, url, true); // respond to every readyState change\n\n    xhr.onreadystatechange = () => {\n      // ignore all readyStates other than \"DONE\"\n      if (xhr.readyState !== XMLHttpRequest.DONE) {\n        return;\n      } // call the callback with status\n\n\n      if (xhr.status === 200) {\n        if (booking.GeneralType.toString().includes(\"workplaceHealth\") && booking.BookingStatus == \"New\" || booking.BookingStatus == \"workplaceHealth-Missed\") {\n          booking.BookingStatus = \"workplaceHealth-Queued\";\n        } else if (booking.GeneralType.toString().includes(\"communityHealth\") && booking.BookingStatus == \"New\" || booking.BookingStatus == \"communityHealth-Missed\") {\n          booking.BookingStatus = \"communityHealth-Queued\";\n        } else if (booking.GeneralType.toString().includes(\"General Practionar\") && booking.BookingStatus == \"New\" || booking.BookingStatus == \"Doctor-Missed\") {\n          booking.BookingStatus = \"Doctor-Queued\";\n        } else if (booking.GeneralType.toString().includes(\"Specialist\") && booking.BookingStatus == \"New\" || booking.BookingStatus == \"Doctor-Missed\") {\n          booking.BookingStatus = \"Doctor-Queued\";\n        } else if (booking.BookingStatus == \"Payment-Missed\") {\n          booking.BookingStatus = \"Payment-Queued\";\n        } else if (booking.BookingStatus == \"Pharmacy-Missed\") {\n          booking.BookingStatus = \"Pharmacy-Queued\";\n        }\n\n        BaseService.update(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + \"api/booking/update/\", booking.Id, booking).then(rp => {\n          if (rp.Status) {\n            this.setState({\n              showModal: true\n            });\n            this.loadData();\n          } else {\n            console.log(rp.Messages);\n            console.log(\"Messages: \" + rp.Messages);\n            console.log(\"Exception: \" + rp.Exception);\n          }\n        }); //  console.log(\"debugging: ------------------\")\n        //  console.log(\"current queue is: \")\n        //  console.log(this.state.queue)\n        // if(this.state.queue.CurrentService.toString().includes(\"Missed\")){\n        //     if(service != \"individual\"){\n        //         this.state.queue.CurrentService = service + \"-Queued\";\n        //     }\n        //     else{\n        //         if(this.state.queue.CurrentService.toString().includes(\"workplaceHealth\")){\n        //             this.state.queue.CurrentService = \"workplaceHealth-Queued\";\n        //         }\n        //         else if(this.state.queue.CurrentService.toString().includes(\"workplaceHealth\")){\n        //             this.state.queue.CurrentService = \"communityHealth-Queued\";\n        //         }\n        //         else{\n        //             this.state.queue.CurrentService = \"Doctor-Queued\";\n        //         }\n        //     }\n        //     BaseService.update<Queue>(process.env.REACT_APP_QUEUE_API_ADDRESS + \"api/queue/update/\", this.state.queue.Id, this.state.queue).then(\n        //         (rp) => {\n        //             if (rp.Status) {\n        //                 console.log(\"Update successfully\")\n        //             } else {\n        //                 console.log(rp.Messages);\n        //                 console.log(\"Messages: \" + rp.Messages);\n        //                 console.log(\"Exception: \" + rp.Exception);\n        //             }\n        //         }\n        //     );\n        // }\n        //     BaseService.create<Queue>(process.env.REACT_APP_QUEUE_API_ADDRESS + \"api/queue/create\",  this.state.queue).then(\n        //         (rp) => {\n        //             if (rp.Status) {\n        //                 if(service != \"individual\"){\n        //                     booking.BookingStatus = service + \"-Queued\";\n        //                 }\n        //                 else{\n        //                     if(booking.GeneralType.includes(\"workplaceHealth\")){\n        //                         booking.BookingStatus = \"workplaceHealth-Queued\";\n        //                     }\n        //                     else if(booking.GeneralType.includes(\"workplaceHealth\")){\n        //                         booking.BookingStatus = \"communityHealth-Queued\";\n        //                     }\n        //                     else{\n        //                         booking.BookingStatus = \"Doctor-Queued\";\n        //                     }\n        //                 }\n        //                 BaseService.update<Booking>(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + \"api/booking/update/\", booking.Id, booking).then(\n        //                     (rp) => {\n        //                         if (rp.Status) {\n        //                             console.log('Booking saved.');\n        //                         } else {\n        //                             console.log(rp.Messages);\n        //                             console.log(\"Messages: \" + rp.Messages);\n        //                             console.log(\"Exception: \" + rp.Exception);\n        //                         }\n        //                     }\n        //                 );\n        //             } else {\n        //                 console.log(rp.Messages);\n        //                 console.log(\"Messages: \" + rp.Messages);\n        //                 console.log(\"Exception: \" + rp.Exception);\n        //             }\n        //         }\n        //     );\n        // }\n        // if(service != \"individual\"){\n        //     booking.BookingStatus = service + \"-Queued\";\n        // }\n        // else{\n        //     if(booking.GeneralType.includes(\"workplaceHealth\")){\n        //         booking.BookingStatus = \"workplaceHealth-Queued\";\n        //     }\n        //     else if(booking.GeneralType.includes(\"workplaceHealth\")){\n        //         booking.BookingStatus = \"communityHealth-Queued\";\n        //     }\n        //     else{\n        //         booking.BookingStatus = \"Doctor-Queued\";\n        //     }\n        // }\n        // BaseService.update<Booking>(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + \"api/booking/update/\", booking.Id, booking).then(\n        //     (rp) => {\n        //         if (rp.Status) {\n        //             console.log('Booking saved.');\n        //         } else {\n        //             console.log(rp.Messages);\n        //             console.log(\"Messages: \" + rp.Messages);\n        //             console.log(\"Exception: \" + rp.Exception);\n        //         }\n        //     }\n        // );\n        // this.setState({\n        //     showModal: true,\n        //     queues: this.state.queues\n        // });\n        // this.loadData()\n\n        return callback(xhr.status);\n      } // got something other than 200,\n      // re-initialize and send another GET request\n\n\n      xhr.open(method, url, true);\n      xhr.send();\n    }; // send the initial GET request\n\n\n    xhr.send();\n  }\n\n  updateInputValue(evt) {\n    const val = evt.target.value;\n    this.setState({\n      inputValue: val\n    });\n  } // async loadQueues() {\n  //     try {\n  //         var apiURL: string\n  //         var date = new Date().toISOString().split('T')[0].toString()\n  //         apiURL = process.env.REACT_APP_QUEUE_API_ADDRESS + 'api/queue/todayQueue/'+ date;\n  //         console.log(apiURL);\n  //         fetch(apiURL)\n  //             .then(function (response) {\n  //                 return response.json();\n  //             })\n  //             .then((myJson) => {\n  //                 this.setState({\n  //                     queues: []\n  //                 })\n  //                 myJson.data.forEach(element => {\n  //                     var eachQueue = new Queue(\n  //                         element[\"_id\"],\n  //                         element[\"queueNumber\"],\n  //                         element[\"appointmentId\"],\n  //                         element[\"currentService\"],\n  //                         element[\"queueDate\"],\n  //                         element[\"missedQueue\"]\n  //                     );\n  //                     this.state.queues.push(eachQueue)\n  //                     this.setState({\n  //                         queues: this.state.queues,\n  //                         clicked: 'block'\n  //                     });\n  //                 });\n  //             });\n  //             console.log(this.state.queues)\n  //     } catch (e) {\n  //         console.log(e);\n  //     }\n  // }\n\n\n}\n\nexport default Appointment;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"StyledSection\");\n$RefreshReg$(_c3, \"Main\");","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Appointments.tsx"],"names":["React","Text","Button","Layout","Breadcrumb","InputGroup","Accordion","InputSelect","Modal","RadioButton","styled","Booking","Container","Label","ModalContent","OptionContainer","BaseService","StyledContainer","GridContainer","StyledSection","Section","Main","main","queueNumberArray","Appointment","Component","constructor","props","state","bookings","inputValue","clicked","showModal","showNRIC","showGeneralPractioner","showDivider","showSpecialist","showGeneralTypeDropDown","selected","showDivCitizenAppoinments","chooseOtherOptions","agencySelection","showDivHPBView","showHospitalView","showGeneralTypeDropDownHPB","showDIVHPBcomuunityHealth","showDIVHPBworkplaceHealth","showGeneralServiceDropDown","showGeneralServiceDropDownHospital","dropDownHint","generatedNumber","loadData","bind","componentDidMount","apiURL","process","env","REACT_APP_APPOINTMENT_API_ADDRESS","fetch","then","response","json","myJson","setState","data","forEach","element","eachBooking","push","e","console","log","searchByLocation","val","window","location","reload","length","render","title","url","justifyItems","maxWidth","value","label","item","selectedValue","ddlAgency","display","type","evt","updateInputValue","filter","GeneralType","BookingStatus","includes","map","input","index","showButton","ServiceProviderName","CitizenName","CitizenNumber","CitizenEmail","ServiceStartDate","ServiceStartTime","ServiceName","ServiceProviderLocation","checkPage","handle200","QueueNumber","callback","booking","num","Math","max","apply","str","String","date","Date","toISOString","split","myJSON","encodeURI","JSON","stringify","updatedURL","Id","xhr","XMLHttpRequest","method","open","onreadystatechange","readyState","DONE","status","toString","update","rp","Status","Messages","Exception","send","target"],"mappings":"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CA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;;AAEA,eAAO/B,QAAQ,CAACkB,GAAG,CAACO,MAAL,CAAf;AACH,OA7K0B,CA+K3B;AACA;;;AACAP,MAAAA,GAAG,CAACG,IAAJ,CAASD,MAAT,EAAiBnD,GAAjB,EAAsB,IAAtB;AACAiD,MAAAA,GAAG,CAACc,IAAJ;AACH,KAnLD,CA7DkC,CAkPlC;;;AACAd,IAAAA,GAAG,CAACc,IAAJ;AACH;;AAEDpD,EAAAA,gBAAgB,CAACD,GAAD,EAAM;AAClB,UAAMjB,GAAG,GAAGiB,GAAG,CAACsD,MAAJ,CAAW7D,KAAvB;AACA,SAAKpB,QAAL,CAAc;AACVjC,MAAAA,UAAU,EAAE2C;AADF,KAAd;AAMH,GAjvCkD,CAmvCnD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;AA5xCmD;;AAoyCvD,eAAejD,WAAf","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport { Text, Button, Layout, BoxContainer, Breadcrumb, InputGroup, Accordion, InputSelect, Modal, RadioButton, LinkList, } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nimport Booking from \"../models/booking\";\n\n\nimport { Container, Label, ModalContent, OptionContainer } from \"../models/doc-elements\";\nimport BaseService from '../service/base.service';\n\n\nconst StyledContainer = styled(Layout.GridContainer)`\n    grid-template-rows: 1fr;\n    grid-template-columns: 12fr;\n    grid-template-areas:\n        \"title\"\n        \"button \"\n        \"queue\";\n    grid-gap: 0.25rem;\n    grid-row-gap: 16px;\n`;\n\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n\nconst Main = styled.main`\n  color: white;\n  grid-area: queue;\n  padding: 0.25rem;\n`;\n\ninterface MyState {\n    bookings: Booking[],\n    // booking: Booking,    \n    inputValue: string,\n    clicked: string,\n    showModal: boolean,\n    showNRIC: string,\n    showGeneralPractioner: string,\n    showDivider: string,\n    showSpecialist: string,\n    showGeneralTypeDropDown: string,\n    selected: string,\n    showDivCitizenAppoinments: string,\n    chooseOtherOptions: boolean,\n    agencySelection: string,\n    showDivHPBView: string,\n    showHospitalView: string,\n    showGeneralTypeDropDownHPB: string,\n    showDIVHPBcomuunityHealth: string,\n    showDIVHPBworkplaceHealth: string,\n    showGeneralServiceDropDown: string,\n    showGeneralServiceDropDownHospital: string,\n    dropDownHint: string,\n    generatedNumber: string,\n}\n\nvar queueNumberArray: number[] = [];\n\n\n\n\n\nclass Appointment extends React.Component<{}, MyState> {\n\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            inputValue: '',\n            clicked: 'none',\n            showModal: false,\n            showNRIC: 'none',\n            showGeneralPractioner: 'block',\n            showDivider: 'block',\n            showSpecialist: 'block',\n            showGeneralTypeDropDown: 'none',\n            selected: 'A',\n            showDivCitizenAppoinments: 'none',\n            chooseOtherOptions: false,\n            agencySelection: \"HPB\",\n            showDivHPBView: \"block\",\n            showHospitalView: \"none\",\n            showGeneralTypeDropDownHPB: \"none\",\n            showDIVHPBcomuunityHealth: \"block\",\n            showDIVHPBworkplaceHealth: \"block\",\n            showGeneralServiceDropDown: \"none\",\n            showGeneralServiceDropDownHospital: \"none\",\n            dropDownHint: \"Select a service\",\n            generatedNumber: \"\",\n\n        };\n        this.loadData = this.loadData.bind(this);\n\n    }\n\n\n    componentDidMount() {\n        this.loadData();\n        // setInterval(this.loadData, 1000);\n    }\n\n    async loadData() {\n        // if (this.state.chooseOtherOptions == false) {\n        try {\n            var apiURL: string\n            apiURL = process.env.REACT_APP_APPOINTMENT_API_ADDRESS + 'api/booking/location/Tampines';\n\n            fetch(apiURL)\n                .then(function (response) {\n\n                    return response.json();\n                })\n                .then((myJson) => {\n                    this.setState({\n                        bookings: []\n                    })\n                    myJson.data.forEach(element => {\n                        var eachBooking = new Booking(\n                            element[\"_id\"],\n                            element[\"nric\"],\n                            element[\"citizenName\"],\n                            element[\"citizenSalutation\"],\n                            element[\"citizenEmail\"],\n                            element[\"citizenNumber\"],\n                            element[\"generalType\"],\n                            element[\"serviceName\"],\n                            element[\"serviceProviderName\"],\n                            element[\"serviceProviderEmail\"],\n                            element[\"serviceProviderPhone\"],\n                            element[\"serviceStartDate\"],\n                            element[\"serviceStartTime\"],\n                            element[\"serviceProviderLocation\"],\n                            element[\"bookingStatus\"],\n                            element[\"queueNumber\"]\n                        );\n\n                        this.state.bookings.push(eachBooking)\n                        this.setState({\n                            bookings: this.state.bookings,\n                            clicked: 'block'\n                        });\n\n                    });\n                });\n\n        } catch (e) {\n            console.log(e);\n        }\n        // }\n\n\n    }\n\n\n\n    public async searchByLocation(val: string) {\n\n\n\n        console.log(val)\n\n        if (val == \"General Practioner\") {\n            this.loadData();\n\n            this.setState({\n                showSpecialist: 'none',\n                showDivider: 'none',\n                showGeneralPractioner: 'block',\n                showNRIC: 'none',\n                showGeneralTypeDropDown: 'block',\n                showGeneralServiceDropDownHospital: 'none'\n            });\n\n\n\n        }\n        if (val == \"Specialist\") {\n            this.loadData();\n\n            this.setState({\n                showSpecialist: 'block',\n                showDivider: 'none',\n                showGeneralPractioner: 'none',\n                showNRIC: 'none',\n                showGeneralTypeDropDown: 'block',\n                showGeneralServiceDropDownHospital: 'none'\n\n            });\n            window.location.reload()\n\n            this.loadData();\n\n\n        }\n\n        if (val == \"communityHealth\") {\n            this.loadData();\n\n            this.setState({\n                showSpecialist: 'none',\n                showDivider: 'none',\n                showGeneralPractioner: 'none',\n                showNRIC: 'none',\n                showGeneralTypeDropDownHPB: 'block',\n                showDIVHPBcomuunityHealth: \"block\",\n                showDIVHPBworkplaceHealth: \"none\",\n                showGeneralServiceDropDownHospital: 'none'\n\n            });\n\n\n\n        }\n\n        if (val == \"workplaceHealth\") {\n            this.loadData();\n\n            this.setState({\n                showSpecialist: 'none',\n                showDivider: 'none',\n                showGeneralPractioner: 'none',\n                showNRIC: 'none',\n                showGeneralTypeDropDownHPB: 'block',\n                showDIVHPBcomuunityHealth: \"none\",\n                showDIVHPBworkplaceHealth: \"block\",\n                showGeneralServiceDropDownHospital: 'none'\n\n            });\n\n\n\n\n        }\n\n\n\n        if (val == \"NRIC\") {\n            // this.loadData();\n\n            this.setState({\n                showGeneralServiceDropDownHospital: 'none'\n            })\n\n            if (this.state.inputValue == '' || this.state.inputValue == null) {\n                return;\n            }\n\n            var apiURL: string\n            apiURL = process.env.REACT_APP_APPOINTMENT_API_ADDRESS + 'api/booking/citizen/' + this.state.inputValue;\n            console.log(\"testing::: \" + apiURL)\n            fetch(apiURL)\n                .then(function (response) {\n\n                    return response.json();\n                })\n                .then((myJson) => {\n                    this.state.bookings.length = 0;\n                    myJson.data.forEach(element => {\n                        var eachBooking = new Booking(\n                            element[\"_id\"],\n                            element[\"nric\"],\n                            element[\"citizenName\"],\n                            element[\"citizenSalutation\"],\n                            element[\"citizenEmail\"],\n                            element[\"citizenNumber\"],\n                            element[\"generalType\"],\n                            element[\"serviceName\"],\n                            element[\"serviceProviderName\"],\n                            element[\"serviceProviderEmail\"],\n                            element[\"serviceProviderPhone\"],\n                            element[\"serviceStartDate\"],\n                            element[\"serviceStartTime\"],\n                            element[\"serviceProviderLocation\"],\n                            element[\"bookingStatus\"],\n                            element[\"queueNumber\"]\n                        );\n\n\n                        // const bookings = this.state.bookings.slice(0);\n                        this.state.bookings.push(eachBooking)\n\n\n                        // console.log(bookings)\n\n                        this.setState({\n                            bookings: this.state.bookings,\n                            clicked: 'block',\n                            showDivCitizenAppoinments: 'block'\n                        });\n\n                    });\n                });\n        }\n\n\n    }\n\n    render() {\n\n\n        return (\n\n            <div>\n\n\n\n                <StyledSection>\n\n                    <Modal.Base\n                        show={this.state.showModal}\n                        animationFrom=\"bottom\"\n                        enableOverlayClick={true}\n                    // onOverlayClick={closeModal()}\n                    >\n                        <Modal.Box onClose={() => {\n\n                            this.setState({\n                                showModal: false\n                            });\n\n\n\n                        }}>\n                            <ModalContent>\n                                Send to queue successfully\n                                <b> {this.state.generatedNumber}</b>\n                            </ModalContent>\n                        </Modal.Box>\n                    </Modal.Base>\n\n                    <Layout.Container>\n\n\n\n                        <Breadcrumb links={[{ title: 'Home', url: '/Home' }, { title: 'Appointments' }]} />\n\n\n                        Change Agency View:\n                        <div id='divAgency' className=\"inlinecontent\" style={{ justifyItems: \"start\", maxWidth: '400px' }}>\n                            <InputSelect\n                                options={[\n                                    { value: \"HPB\", label: \"HPB\" },\n                                    { value: \"Hospital\", label: \"Hospital\" },\n\n                                ]}\n\n                                valueExtractor={(item) => item.value}\n                                listExtractor={(item) => item.label}\n\n                                displayValueExtractor={(item) => item.label}\n                                placeholder={this.state.agencySelection}\n                                onSelectItem={(item, selectedValue) => {\n                                    this.setState({ inputValue: selectedValue }, () => {\n                                        this.ddlAgency(selectedValue)\n\n                                    });\n                                }} />\n\n                        </div>\n\n                        <br />\n\n                        <div id='hpbView' style={{ display: this.state.showDivHPBView }}>\n\n\n                            <Container>\n                                <OptionContainer>\n                                    <RadioButton value=\"A\" id=\"multiple-options-a\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'A',\n                                            showSpecialist: 'block',\n                                            showDivider: 'block',\n                                            showGeneralPractioner: 'block',\n                                            showNRIC: 'none',\n                                            showGeneralTypeDropDown: 'none',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: false,\n                                            showGeneralTypeDropDownHPB: \"none\",\n                                            showDIVHPBcomuunityHealth: \"block\",\n                                            showDIVHPBworkplaceHealth: \"block\"\n\n                                        }\n\n                                        );\n\n                                        this.loadData();\n                                    }\n\n                                    } checked={this.state.selected === \"A\"} />\n                                    <Label htmlFor=\"multiple-options-a\">View All Appointments</Label>\n                                </OptionContainer>\n                                <OptionContainer>\n                                    <RadioButton value=\"B\" id=\"multiple-options-b\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'B',\n                                            showSpecialist: 'none',\n                                            showDivider: 'none',\n                                            showGeneralPractioner: 'none',\n                                            showNRIC: 'block',\n                                            showGeneralTypeDropDown: 'none',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: true,\n                                            showGeneralTypeDropDownHPB: \"none\",\n                                            showDIVHPBcomuunityHealth: \"none\",\n                                            showDIVHPBworkplaceHealth: \"none\"\n                                        }\n\n                                        );\n                                    }} checked={this.state.selected === \"B\"} />\n                                    <Label htmlFor=\"multiple-options-b\">View appointments by NRIC</Label>\n                                </OptionContainer>\n\n\n                                <OptionContainer>\n                                    <RadioButton value=\"C\" id=\"multiple-options-c\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'C',\n                                            showSpecialist: 'none',\n                                            showDivider: 'none',\n                                            showGeneralPractioner: 'none',\n                                            showNRIC: 'none',\n                                            showGeneralTypeDropDown: 'none',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: true,\n                                            showGeneralTypeDropDownHPB: \"block\",\n                                            showDIVHPBworkplaceHealth: \"none\",\n                                            showDIVHPBcomuunityHealth: \"none\",\n                                            showGeneralServiceDropDownHospital: \"block\",\n                                            dropDownHint: \"Select a service\"\n                                        }\n\n                                        );\n                                    }} checked={this.state.selected === \"C\"} />\n                                    <Label htmlFor=\"multiple-options-c\">View appointments by service</Label>\n                                </OptionContainer>\n\n                            </Container>\n\n                            <div className=\"spacer2\"></div>\n\n                            <div id='divNRIC' style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showNRIC }}>\n                                <div style={{ 'margin': '5px' }}>\n                                    <Text.Body >Search by NRIC: </Text.Body>\n                                </div>\n                                <InputGroup addon={{\n                                    type: 'custom'\n                                }} placeholder=\"Type NRIC here...\"\n\n                                    onChange={evt => this.updateInputValue(evt)}\n                                />\n\n                                <div style={{ 'padding': '5px' }}></div>\n                                <Button.Default onClick={() => this.searchByLocation(\"NRIC\")} >Search</Button.Default>\n                            </div>\n\n\n                            <div id='divLocation' className=\"inlinecontent\" style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showGeneralTypeDropDownHPB }}>\n                                <InputSelect\n                                    options={[\n                                        { value: \"communityHealth\", label: \"communityHealth\" },\n                                        { value: \"workplaceHealth\", label: \"workplaceHealth\" },\n\n                                    ]}\n\n                                    valueExtractor={(item) => item.value}\n                                    listExtractor={(item) => item.label}\n                                    displayValueExtractor={(item) => item.label}\n                                    placeholder={this.state.dropDownHint}\n                                    onSelectItem={(item, selectedValue) => {\n                                        this.setState({ inputValue: selectedValue }, () => {\n                                            this.searchByLocation(selectedValue)\n                                        });\n                                    }} />\n\n                            </div>\n\n\n                            <div className=\"spacer5\"></div>\n\n                            <div id='divAppointments' >\n\n                                <div id='divGeneralPractioner' className='rcorner2' style={{ 'display': this.state.showDIVHPBcomuunityHealth }}>\n\n\n                                    <StyledContainer>\n                                        <Text.H3>Appointments [HPB Consultation - communityHealth]</Text.H3>\n                                        <Text.Body>Government services appointments</Text.Body>\n                                        <Main>\n\n\n\n\n                                            <Accordion.Base className='base' >\n                                                {this.state.bookings.filter((element => \n                                                \n                                                (\n                                                    (element.GeneralType == 'HPB Consultation - communityHealth' && element.BookingStatus.includes('New')) \n                                                    || element.BookingStatus.includes(\"communityHealth\")\n                                                    \n                                                    ))).map((input, index) => {\n                                                    var showButton = 'none';\n                                                    if ((input.BookingStatus == 'New' && input.ServiceProviderName.includes(\"HPB\")  ) ){\n                                                        showButton = 'block';\n                                                    }\n                                                    console.log(this.state.bookings)\n                                                    return (\n                                                        <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                            <Text.Body>\n                                                                <ul>\n                                                                    <li>\n                                                                        <b>Citizen Name :</b>  {input.CitizenName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Name:</b>  {input.ServiceName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Status:</b>  {input.BookingStatus}\n                                                                    </li>\n                                                                </ul>\n                                                                <div style={{ 'display': showButton }}>\n                                                                    <Button.Default\n                                                                        onClick={() => this.checkPage(this.handle200, input)}\n                                                                    >Send to Queue</Button.Default>\n                                                                </div>\n\n                                                            </Text.Body>\n                                                        </Accordion.Item>\n                                                    )\n                                                })}\n                                            </Accordion.Base>\n\n                                        </Main>\n\n\n                                        <div className=\"spacer3\"></div>\n                                    </StyledContainer>\n                                </div>\n\n                                <br />\n\n                                <div id='divGeneralPractioner' className='rcorner' style={{ 'display': this.state.showDIVHPBworkplaceHealth }}>\n\n                                    <StyledContainer>\n                                        <Text.H3>Appointments [HPB Consultation - workplaceHealth]</Text.H3>\n                                        <Text.Body>Government services appointments</Text.Body>\n                                        <Main>\n\n\n\n\n                                            <Accordion.Base className='base' >\n                                                {this.state.bookings.filter(\n                                                    \n                                                    (\n                                                        \n                                                        element => (element.GeneralType == 'HPB Consultation - workplaceHealth' && element.BookingStatus.includes('New')) \n                                                        || element.BookingStatus.includes(\"workplaceHealth\"))\n    \n                                                    \n                                                    ).map((input, index) => {\n                                                    var showButton = 'none';\n                                                    if ((input.BookingStatus == 'New' && input.ServiceProviderName.includes(\"HPB\")  ) ){\n                                                        showButton = 'block';\n                                                    }\n                                                    console.log(this.state.bookings)\n                                                    return (\n                                                        <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                            <Text.Body>\n                                                                <ul>\n                                                                    <li>\n                                                                        <b>Citizen Name :</b>  {input.CitizenName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Name:</b>  {input.ServiceName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Status:</b>  {input.BookingStatus}\n                                                                    </li>\n                                                                </ul>\n                                                                <div style={{ 'display': showButton }}>\n                                                                    <Button.Default\n                                                                        onClick={() => this.checkPage(this.handle200, input)}\n                                                                    >Send to Queue</Button.Default>\n                                                                </div>\n\n                                                            </Text.Body>\n                                                        </Accordion.Item>\n                                                    )\n                                                })}\n                                            </Accordion.Base>\n\n                                        </Main>\n\n\n                                        <div className=\"spacer3\"></div>\n                                    </StyledContainer>\n\n                                </div>\n\n\n                                <div id='divDivider' className=\"spacer5\" style={{ 'display': this.state.showDivider }}></div>\n\n                                <div id='divCitizenAppointments' style={{ 'display': this.state.showDivCitizenAppoinments }}>\n                                    <Main>\n\n\n\n\n                                        <Accordion.Base className='base' >\n                                            {\n\n                                                this.state.bookings.filter((element => element.ServiceProviderLocation == 'Tampines')).map(\n\n\n                                                    (input, index) => {\n\n                                                        var showButton = 'none';\n                                                        if ((input.BookingStatus == 'New' && input.ServiceProviderName.includes(\"HPB\") || input.BookingStatus.includes ('workplaceHealth') || input.BookingStatus.includes ('communityHealth') ) ){\n                                                            showButton = 'block';\n                                                        }\n\n                                                        return (\n                                                            <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                                <Text.Body>\n                                                                    <ul>\n                                                                        <li>\n                                                                            <b>Citizen Name :</b>  {input.CitizenName}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Name:</b>  {input.ServiceName}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Status:</b>  {input.BookingStatus}\n                                                                        </li>\n                                                                    </ul>\n                                                                    <div style={{ 'display': showButton }}>\n                                                                        <Button.Default\n                                                                            onClick={() => this.checkPage(this.handle200, input)}\n                                                                        >Send to Queue</Button.Default>\n                                                                    </div>\n\n                                                                </Text.Body>\n                                                            </Accordion.Item>\n                                                        )\n\n\n\n\n                                                    })}\n                                        </Accordion.Base>\n\n                                    </Main>\n                                </div>\n\n\n\n\n                            </div>\n\n                        </div>\n\n                        <div id='hospitalView' style={{ display: this.state.showHospitalView }}>\n\n\n                            <Container>\n                                <OptionContainer>\n                                    <RadioButton value=\"A\" id=\"multiple-options-a\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'A',\n                                            showSpecialist: 'block',\n                                            showDivider: 'block',\n                                            showGeneralPractioner: 'block',\n                                            showNRIC: 'none',\n                                            showGeneralServiceDropDownHospital: 'none',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: false\n                                        }\n\n                                        );\n                                        console.log(\"testing!!!!1\")\n                                        this.loadData();\n                                    }\n\n                                    } checked={this.state.selected === \"A\"} />\n                                    <Label htmlFor=\"multiple-options-a\">View All Appointments</Label>\n                                </OptionContainer>\n                                <OptionContainer>\n                                    <RadioButton value=\"B\" id=\"multiple-options-b\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'B',\n                                            showSpecialist: 'none',\n                                            showDivider: 'none',\n                                            showGeneralPractioner: 'none',\n                                            showNRIC: 'block',\n                                            showGeneralServiceDropDownHospital: 'none',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: true\n\n                                        }\n\n                                        );\n                                    }} checked={this.state.selected === \"B\"} />\n                                    <Label htmlFor=\"multiple-options-b\">View appointments by NRIC</Label>\n                                </OptionContainer>\n                                <OptionContainer>\n                                    <RadioButton value=\"C\" id=\"multiple-options-c\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'C',\n                                            showSpecialist: 'none',\n                                            showDivider: 'none',\n                                            showGeneralPractioner: 'none',\n                                            showNRIC: 'none',\n                                            showGeneralServiceDropDownHospital: 'block',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: true\n                                        });\n\n                                    }} checked={this.state.selected === \"C\"} />\n                                    <Label htmlFor=\"multiple-options-c\">View Appointments by Service Type</Label>\n                                </OptionContainer>\n                            </Container>\n\n                            <div className=\"spacer2\"></div>\n\n                            <div id='divNRIC' style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showNRIC }}>\n                                <div style={{ 'margin': '5px' }}>\n                                    <Text.Body >Search by NRIC: </Text.Body>\n                                </div>\n                                <InputGroup addon={{\n                                    type: 'custom'\n                                }} placeholder=\"Type NRIC here...\"\n\n                                    onChange={evt => this.updateInputValue(evt)}\n                                />\n\n                                <div style={{ 'padding': '5px' }}></div>\n                                <Button.Default onClick={() => this.searchByLocation(\"NRIC\")} >Search</Button.Default>\n                            </div>\n\n                            <div className=\"inlinecontent\" style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showGeneralServiceDropDownHospital }}>\n                                <InputSelect\n                                    options={[\n                                        { value: \"General Practioner\", label: \"General Practioner\" },\n                                        { value: \"Specialist\", label: \"Specialist\" },\n\n                                    ]}\n\n                                    valueExtractor={(item) => item.value}\n                                    listExtractor={(item) => item.label}\n                                    displayValueExtractor={(item) => item.label}\n                                    placeholder=\"Select a service type\"\n                                    onSelectItem={(item, selectedValue) => {\n                                        this.setState({ inputValue: selectedValue }, () => {\n                                            this.searchByLocation(selectedValue)\n                                        });\n                                    }} />\n\n                            </div>\n\n\n\n                            <div className=\"spacer5\"></div>\n\n                            <div id='divAppointments' >\n\n                                <div id='divGeneralPractioner' className='rcorner2' style={{ 'display': this.state.showGeneralPractioner }}>\n\n\n                                    <StyledContainer>\n                                        <Text.H3>Appointments [General Practioner]</Text.H3>\n                                        <Text.Body>Government services appointments</Text.Body>\n                                        <Main>\n\n\n\n\n                                            <Accordion.Base className='base' >\n                                                {this.state.bookings.filter((element => \n                                                \n                                                (element.GeneralType == 'General Practioner' && element.BookingStatus.includes('New')) \n                                                    || element.BookingStatus.includes(\"Doctor\") || element.BookingStatus.includes(\"Payment\") || element.BookingStatus.includes(\"Pharmacy\") )\n\n\n                                                // element.GeneralType == 'General Practionar' || !element.BookingStatus.includes(\"HPB\")\n                                                \n                                                ).map((input, index) => {\n                                                    var showButton = 'none';\n                                                    if (input.BookingStatus == 'New' && !input.ServiceProviderName.includes(\"HPB\")  ){\n                                                        showButton = 'block';\n                                                    }\n                                                    console.log(this.state.bookings)\n                                                    return (\n                                                        <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                            <Text.Body>\n                                                                <ul>\n                                                                    <li>\n                                                                        <b>Citizen Name :</b>  {input.CitizenName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Name:</b>  {input.ServiceName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Status:</b>  {input.BookingStatus}\n                                                                    </li>\n                                                                </ul>\n                                                                <div style={{ 'display': showButton }}>\n                                                                    <Button.Default\n                                                                        onClick={() => this.checkPage(this.handle200, input)}\n                                                                    >Send to Queue</Button.Default>\n                                                                </div>\n\n                                                            </Text.Body>\n                                                        </Accordion.Item>\n                                                    )\n                                                })}\n                                            </Accordion.Base>\n\n                                        </Main>\n\n\n                                        <div className=\"spacer3\"></div>\n                                    </StyledContainer>\n\n\n                                </div>\n                                <div id='divDivider' className=\"spacer5\" style={{ 'display': this.state.showDivider }}></div>\n\n                                <div id='divCitizenAppointments' style={{ 'display': this.state.showDivCitizenAppoinments }}>\n                                    <Main>\n\n\n\n\n                                        <Accordion.Base className='base' >\n                                            {\n\n                                                this.state.bookings.filter((element => element.ServiceProviderLocation == 'Tampines')).map(\n\n\n                                                    (input, index) => {\n\n                                                        var showButton = 'none';\n                                                        if ((input.BookingStatus == 'New' && !input.ServiceProviderName.includes(\"HPB\") || input.BookingStatus.includes ('Payment') || input.BookingStatus.includes ('Pharmacy') || input.BookingStatus.includes ('Doctor')) ){\n                                                            showButton = 'block';\n                                                        }\n\n                                                        return (\n                                                            <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                                <Text.Body>\n                                                                    <ul>\n                                                                        <li>\n                                                                            <b>Citizen Name :</b>  {input.CitizenName}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Name:</b>  {input.ServiceName}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Status:</b>  {input.BookingStatus}\n                                                                        </li>\n                                                                    </ul>\n                                                                    <div style={{ 'display': showButton }}>\n                                                                        <Button.Default\n                                                                            onClick={() => this.checkPage(this.handle200, input)}\n                                                                        >Send to Queue</Button.Default>\n                                                                    </div>\n\n                                                                </Text.Body>\n                                                            </Accordion.Item>\n                                                        )\n\n\n\n\n                                                    })}\n                                        </Accordion.Base>\n\n                                    </Main>\n                                </div>\n\n                                <div id='divSpecialist' className='rcorner' style={{ 'display': this.state.showSpecialist }}>\n\n\n                                    <StyledContainer>\n                                        <Text.H3>Appointments [Specialist]</Text.H3>\n                                        <Text.Body>Government services appointments</Text.Body>\n                                        <Main>\n\n\n\n\n                                            <Accordion.Base className='base' >\n                                                {\n\n                                                    this.state.bookings.filter((element => element.GeneralType == 'Specialist')).map(\n\n\n                                                        (input, index) => {\n\n                                                            var showButton = 'none';\n                                                            if ((input.BookingStatus == 'New' && !input.ServiceProviderName.includes(\"HPB\") || input.BookingStatus.includes ('Payment') || input.BookingStatus.includes ('Pharmacy') || input.BookingStatus.includes ('Doctor')) ){\n                                                                showButton = 'none';\n                                                            }\n                                                            else{\n                                                                showButton = 'block'\n                                                            }\n                                                            console.log(this.state.bookings)\n                                                            if (input.GeneralType == 'General Practionar') {\n                                                            }\n                                                            return (\n                                                                <Accordion.Item title={input.CitizenName + \" - \"  + input.QueueNumber} key={index} expanded={false}>\n                                                                    <Text.Body>\n                                                                        <ul>\n                                                                            <li>\n                                                                                <b>Citizen Name :</b>  {input.CitizenName}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Service Name:</b>  {input.ServiceName}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Service Status:</b>  {input.BookingStatus}\n                                                                            </li>\n                                                                        </ul>\n                                                                        <div style={{ 'display': showButton }}>\n                                                                            <Button.Default\n                                                                                onClick={() => this.checkPage(this.handle200, input)}\n                                                                            >Send to Queue</Button.Default>\n                                                                        </div>\n\n                                                                    </Text.Body>\n                                                                </Accordion.Item>\n                                                            )\n\n\n\n\n                                                        })}\n                                            </Accordion.Base>\n\n                                        </Main>\n\n\n                                        <div className=\"spacer3\"></div>\n                                    </StyledContainer>\n                                </div>\n\n\n                            </div>\n\n                        </div>\n                    </Layout.Container>\n                </StyledSection>\n            </div>\n        )\n    }\n\n    ddlAgency(selectedValue: any) {\n        if (selectedValue == \"HPB\") {\n            this.setState({\n                showDivHPBView: \"block\",\n                showHospitalView: \"none\",\n                showDivCitizenAppoinments: \"none\",\n                dropDownHint: \"Select a service\"\n\n            })\n        }\n        else {\n            this.setState({\n                showDivHPBView: \"none\",\n                showHospitalView: \"block\",\n                showDivCitizenAppoinments: \"none\",\n                dropDownHint: \"Select a service\"\n\n\n            })\n        }\n    }\n\n    handle200(response) {\n        console.log('handle200 has received:', response);\n    }\n\n    checkPage(callback, booking: Booking) {\n        this.loadData()\n\n        queueNumberArray.push(0)\n\n        console.log(\"queue number arrary\" + queueNumberArray);\n        var num = Math.max.apply(null, queueNumberArray) + 1;\n        queueNumberArray.push(num)\n\n        console.log(\"max number: \" + num)\n        var str = String(num);\n        while (str.length < 4) str = \"0\" + str;\n        str = \"H\" + str;\n        var date = new Date().toISOString().split('T')[0]\n        \n        if(booking.QueueNumber == \"\"){\n            booking.QueueNumber = str\n            this.setState({\n                generatedNumber: \"Generated queue number is \" + str\n            })\n        }\n        else{\n            booking.QueueNumber = booking.QueueNumber\n            this.setState({\n                generatedNumber: \"Current queue number is \" + booking.QueueNumber\n            })\n        }\n\n        \n\n        const myJSON = encodeURI(JSON.stringify(booking));\n\n        var updatedURL = \"\";\n\n        if ( (booking.GeneralType == \"HPB Consultation - workplaceHealth\" && booking.BookingStatus == \"New\") || booking.BookingStatus.includes( \"workplaceHealth\")) {\n            updatedURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + booking.Id + \"&exchangeID=master&bindingKey=hpb.whq&bookingDetails=\" + myJSON;\n        }\n        else if ( (booking.GeneralType == \"HPB Consultation - communityHealth\" && booking.BookingStatus ==\"New\") || booking.BookingStatus.includes(\"communityHealth\")) {\n            updatedURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + booking.Id + \"&exchangeID=master&bindingKey=hpb.chq&bookingDetails=\" + myJSON;\n            console.log(updatedURL)\n        }\n        else if ( (booking.GeneralType == \"General Practionar\" && booking.BookingStatus ==\"New\") || (booking.GeneralType == \"Specialist\" && booking.BookingStatus ==\"New\") || booking.BookingStatus.includes(\"Doctor\")) {\n            updatedURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + booking.Id + \"&exchangeID=master&bindingKey=sgh.doctor&bookingDetails=\" + myJSON;\n        }\n        else if (booking.BookingStatus == \"Payment-Missed\" || booking.BookingStatus.includes(\"Payment\")) {\n            updatedURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + booking.Id + \"&exchangeID=master&bindingKey=sgh.payment&bookingDetails=\" + myJSON;\n        }\n        else if (booking.BookingStatus == \"Pharmcy-Missed\" || booking.BookingStatus.includes(\"Pharmcy\")) {\n            updatedURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + booking.Id + \"&exchangeID=master&bindingKey=sgh.pharmcy&bookingDetails=\" + myJSON;\n        }\n\n        console.log(\"testing now \" + updatedURL)\n\n        const xhr = new XMLHttpRequest(),\n            method = \"GET\",\n            url = updatedURL;\n\n        // initialize a new GET request\n        xhr.open(method, url, true);\n\n        // respond to every readyState change\n        xhr.onreadystatechange = () => {\n\n            // ignore all readyStates other than \"DONE\"\n            if (xhr.readyState !== XMLHttpRequest.DONE) { return; }\n\n            // call the callback with status\n            if (xhr.status === 200) {\n\n\n                if ( (booking.GeneralType.toString().includes(\"workplaceHealth\") && booking.BookingStatus == \"New\") || booking.BookingStatus == \"workplaceHealth-Missed\") {\n                    booking.BookingStatus = \"workplaceHealth-Queued\";\n                }\n                else if ( (booking.GeneralType.toString().includes(\"communityHealth\") && booking.BookingStatus == \"New\") || booking.BookingStatus == \"communityHealth-Missed\") {\n                    booking.BookingStatus = \"communityHealth-Queued\";\n                }\n\n                else if ( (booking.GeneralType.toString().includes(\"General Practionar\") && booking.BookingStatus == \"New\") || booking.BookingStatus == \"Doctor-Missed\") {\n                    booking.BookingStatus = \"Doctor-Queued\";\n                }\n                else if ( (booking.GeneralType.toString().includes(\"Specialist\") && booking.BookingStatus == \"New\") || booking.BookingStatus == \"Doctor-Missed\") {\n                    booking.BookingStatus = \"Doctor-Queued\";\n                }\n                else if (  booking.BookingStatus == \"Payment-Missed\" ) {\n                    booking.BookingStatus = \"Payment-Queued\";\n                }\n                else if ( booking.BookingStatus == \"Pharmacy-Missed\"){\n                    booking.BookingStatus = \"Pharmacy-Queued\";\n                }\n\n                \n\n\n\n          \n\n                BaseService.update<Booking>(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + \"api/booking/update/\", booking.Id, booking).then(\n\n                    (rp) => {\n                        if (rp.Status) {\n\n                        this.setState({\n                            showModal: true\n                        })\n                        this.loadData()\n                    \n                    } else {\n                            console.log(rp.Messages);\n                            console.log(\"Messages: \" + rp.Messages);\n                            console.log(\"Exception: \" + rp.Exception);\n                        }\n                    }\n                );\n\n                //  console.log(\"debugging: ------------------\")\n                //  console.log(\"current queue is: \")\n                //  console.log(this.state.queue)\n\n                // if(this.state.queue.CurrentService.toString().includes(\"Missed\")){\n\n                //     if(service != \"individual\"){\n                //         this.state.queue.CurrentService = service + \"-Queued\";\n                //     }\n                //     else{\n                //         if(this.state.queue.CurrentService.toString().includes(\"workplaceHealth\")){\n                //             this.state.queue.CurrentService = \"workplaceHealth-Queued\";\n                //         }\n                //         else if(this.state.queue.CurrentService.toString().includes(\"workplaceHealth\")){\n                //             this.state.queue.CurrentService = \"communityHealth-Queued\";\n                //         }\n                //         else{\n                //             this.state.queue.CurrentService = \"Doctor-Queued\";\n\n                //         }\n                //     }\n\n                //     BaseService.update<Queue>(process.env.REACT_APP_QUEUE_API_ADDRESS + \"api/queue/update/\", this.state.queue.Id, this.state.queue).then(\n                //         (rp) => {\n                //             if (rp.Status) {\n                //                 console.log(\"Update successfully\")\n                //             } else {\n                //                 console.log(rp.Messages);\n                //                 console.log(\"Messages: \" + rp.Messages);\n                //                 console.log(\"Exception: \" + rp.Exception);\n                //             }\n                //         }\n                //     );\n                // }\n\n                //     BaseService.create<Queue>(process.env.REACT_APP_QUEUE_API_ADDRESS + \"api/queue/create\",  this.state.queue).then(\n                //         (rp) => {\n                //             if (rp.Status) {\n\n\n\n                //                 if(service != \"individual\"){\n                //                     booking.BookingStatus = service + \"-Queued\";\n                //                 }\n                //                 else{\n                //                     if(booking.GeneralType.includes(\"workplaceHealth\")){\n                //                         booking.BookingStatus = \"workplaceHealth-Queued\";\n                //                     }\n                //                     else if(booking.GeneralType.includes(\"workplaceHealth\")){\n                //                         booking.BookingStatus = \"communityHealth-Queued\";\n                //                     }\n                //                     else{\n                //                         booking.BookingStatus = \"Doctor-Queued\";\n                //                     }\n                //                 }\n\n\n\n                //                 BaseService.update<Booking>(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + \"api/booking/update/\", booking.Id, booking).then(\n\n                //                     (rp) => {\n                //                         if (rp.Status) {\n                //                             console.log('Booking saved.');\n                //                         } else {\n                //                             console.log(rp.Messages);\n                //                             console.log(\"Messages: \" + rp.Messages);\n                //                             console.log(\"Exception: \" + rp.Exception);\n                //                         }\n                //                     }\n                //                 );\n\n\n                //             } else {\n                //                 console.log(rp.Messages);\n                //                 console.log(\"Messages: \" + rp.Messages);\n                //                 console.log(\"Exception: \" + rp.Exception);\n                //             }\n                //         }\n                //     );\n                // }\n\n                // if(service != \"individual\"){\n                //     booking.BookingStatus = service + \"-Queued\";\n                // }\n                // else{\n                //     if(booking.GeneralType.includes(\"workplaceHealth\")){\n                //         booking.BookingStatus = \"workplaceHealth-Queued\";\n                //     }\n                //     else if(booking.GeneralType.includes(\"workplaceHealth\")){\n                //         booking.BookingStatus = \"communityHealth-Queued\";\n                //     }\n                //     else{\n                //         booking.BookingStatus = \"Doctor-Queued\";\n                //     }\n                // }\n\n\n                // BaseService.update<Booking>(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + \"api/booking/update/\", booking.Id, booking).then(\n\n                //     (rp) => {\n                //         if (rp.Status) {\n                //             console.log('Booking saved.');\n                //         } else {\n                //             console.log(rp.Messages);\n                //             console.log(\"Messages: \" + rp.Messages);\n                //             console.log(\"Exception: \" + rp.Exception);\n                //         }\n                //     }\n                // );\n\n\n\n                // this.setState({\n                //     showModal: true,\n                //     queues: this.state.queues\n                // });\n\n                // this.loadData()\n\n                return callback(xhr.status);\n            }\n\n            // got something other than 200,\n            // re-initialize and send another GET request\n            xhr.open(method, url, true);\n            xhr.send();\n        }\n\n        // send the initial GET request\n        xhr.send();\n    }\n\n    updateInputValue(evt) {\n        const val = evt.target.value;\n        this.setState({\n            inputValue: val\n        });\n\n\n\n    }\n\n    // async loadQueues() {\n    //     try {\n    //         var apiURL: string\n    //         var date = new Date().toISOString().split('T')[0].toString()\n\n    //         apiURL = process.env.REACT_APP_QUEUE_API_ADDRESS + 'api/queue/todayQueue/'+ date;\n    //         console.log(apiURL);\n    //         fetch(apiURL)\n    //             .then(function (response) {\n\n    //                 return response.json();\n    //             })\n    //             .then((myJson) => {\n    //                 this.setState({\n    //                     queues: []\n    //                 })\n    //                 myJson.data.forEach(element => {\n    //                     var eachQueue = new Queue(\n    //                         element[\"_id\"],\n    //                         element[\"queueNumber\"],\n    //                         element[\"appointmentId\"],\n    //                         element[\"currentService\"],\n    //                         element[\"queueDate\"],\n    //                         element[\"missedQueue\"]\n\n    //                     );\n\n    //                     this.state.queues.push(eachQueue)\n    //                     this.setState({\n    //                         queues: this.state.queues,\n    //                         clicked: 'block'\n    //                     });\n\n    //                 });\n    //             });\n\n    //             console.log(this.state.queues)\n\n    //     } catch (e) {\n    //         console.log(e);\n    //     }\n    // }\n\n\n\n\n\n}\n\nexport default Appointment;\n"]},"metadata":{},"sourceType":"module"}