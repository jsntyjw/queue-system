{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/ServiceCounter.tsx\";\nimport React from 'react';\nimport '../App.css';\nimport { Text, Button, Layout, Breadcrumb, BoxContainer, InputSelect } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n\nconst ServiceCounter = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Layout.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    links: [{\n      title: 'Home',\n      url: 'http://localhost:3000/ServiceCounter'\n    }, {\n      title: 'Service Counter'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"divButtonNextPatient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button.Default, {\n    className: \"buttonsuccess\",\n    onClick: () => consumeQueue(handle200, \"nextPatient\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"Next Patient\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"divCurrentCitizen\",\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Layout.GridContainer, {\n    className: \"column2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Text.H3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, \"Currently Serving\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(BoxContainer, {\n    title: \"Citizen Information\",\n    collapsible: false,\n    className: \"textleft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"2rem\",\n      minWidth: \"1080px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Layout.GridContainer, {\n    className: \"column4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Text.Body, {\n    weight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 45\n    }\n  }, \"NRIC\"), /*#__PURE__*/React.createElement(Text.Body, {\n    weight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 45\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Text.Body, {\n    weight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 45\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(Text.Body, {\n    weight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 45\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Text.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 45\n    }\n  }, \"nric number\"), /*#__PURE__*/React.createElement(Text.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 45\n    }\n  }, \"citizen Name\"), /*#__PURE__*/React.createElement(Text.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 45\n    }\n  }, \"citeizen phone number\"), /*#__PURE__*/React.createElement(Text.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 45\n    }\n  }, \"citizen email\")))), /*#__PURE__*/React.createElement(Text.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, \"Next service: \"))), /*#__PURE__*/React.createElement(Layout.GridContainer, {\n    className: \"column4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputSelect, {\n    placeholder: \"Select\",\n    options: [{\n      value: \"Payment\",\n      label: \"Payment\"\n    }, {\n      value: \"Medication\",\n      label: \"Medication\"\n    }],\n    valueExtractor: item => item.value,\n    listExtractor: item => item.label,\n    displayValueExtractor: item => item.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button.Default, {\n    onClick: () => consumeQueue(handle200, \"sendToNextService\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Send to next service\")))));\n};\n\nexport default ServiceCounter;\n\nfunction handle200(response) {\n  console.log('handle200 has received:', response);\n}\n\nfunction consumeQueue(callback, buttonSelected, bookingId, nric, citizenName, citizenEmail, citizenNumber) {\n  var respectiveURL = \"\";\n\n  if (buttonSelected == \"nextPatient\") {\n    document.getElementById(\"divCurrentCitizen\").style.display = \"block\";\n    document.getElementById(\"divButtonNextPatient\").style.display = \"none\";\n    respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=doctorQueue\";\n    console.log();\n  } else {\n    const queueObject = {\n      \"_id\": bookingId,\n      \"nric\": nric,\n      \"citizenName\": citizenName,\n      \"citizenEmail\": citizenEmail,\n      \"citizenNumber\": citizenNumber\n    };\n    var myJSON = encodeURI(JSON.stringify(queueObject));\n    document.getElementById(\"divCurrentCitizen\").style.display = \"none\";\n    document.getElementById(\"divButtonNextPatient\").style.display = \"block\";\n    respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=booking001&exchangeID=hospital&bindingKey=doctor&bookingDetails=\" + myJSON;\n  }\n\n  const xhr = new XMLHttpRequest(),\n        method = \"GET\",\n        url = respectiveURL; // initialize a new GET request\n\n  xhr.open(method, url, true); // respond to every readyState change\n\n  xhr.onreadystatechange = function () {\n    // ignore all readyStates other than \"DONE\"\n    if (xhr.readyState !== XMLHttpRequest.DONE) {\n      return;\n    } // call the callback with status\n\n\n    if (xhr.status === 200) {\n      return callback(xhr.status);\n    } // got something other than 200,\n    // re-initialize and send another GET request\n\n\n    xhr.open(method, url, true);\n    xhr.send();\n  }; // send the initial GET request\n\n\n  xhr.send();\n}","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/ServiceCounter.tsx"],"names":["React","Text","Button","Layout","Breadcrumb","BoxContainer","InputSelect","styled","StyledSection","Section","ServiceCounter","props","title","url","consumeQueue","handle200","display","padding","minWidth","value","label","item","response","console","log","callback","buttonSelected","bookingId","nric","citizenName","citizenEmail","citizenNumber","respectiveURL","document","getElementById","style","queueObject","myJSON","encodeURI","JSON","stringify","xhr","XMLHttpRequest","method","open","onreadystatechange","readyState","DONE","status","send"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SACIC,IADJ,EAEIC,MAFJ,EAGIC,MAHJ,EAIIC,UAJJ,EAKIC,YALJ,EAMIC,WANJ,QAOO,4BAPP;AAQA,OAAOC,MAAP,MAAmB,mBAAnB;AAOA,MAAMC,aAAa,GAAGD,MAAM,CAACJ,MAAM,CAACM,OAAR,CAAiB;AAC7C;AACA;AACA,CAHA;;AAKA,MAAMC,cAA8C,GAAIC,KAAD,IAAW;AAC9D,sBACI,uDACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,GAAG,EAAE;AAAtB,KAAD,EAAiE;AAAED,MAAAA,KAAK,EAAE;AAAT,KAAjE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI;AAAK,IAAA,EAAE,EAAC,sBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGA,oBAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,SAAS,EAAC,eAA1B;AACY,IAAA,OAAO,EAAG,MAAME,YAAY,CAACC,SAAD,EAAW,aAAX,CADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHA,CAHJ,eAWI;AAAK,IAAA,EAAE,EAAC,mBAAR;AAA6B,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,MAAD,CAAQ,aAAR;AAAsB,IAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAOI,oBAAC,IAAD,CAAM,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPJ,eAQI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eASI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAYQ,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,qBAApB;AAA0C,IAAA,WAAW,EAAE,KAAvD;AAA8D,IAAA,SAAS,EAAC,UAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD,CAAQ,aAAR;AAAsB,IAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,MAAM,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,MAAM,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,MAAM,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,MAAM,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,eAKI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,eAMI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAPJ,eAQI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARJ,CADJ,CADJ,CAZR,eA4BI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA5BJ,CADJ,CAFA,eAuCA,oBAAC,MAAD,CAAQ,aAAR;AAAsB,IAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,WAAD;AACI,IAAA,WAAW,EAAC,QADhB;AAEI,IAAA,OAAO,EAAE,CACL;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KADK,EAEL;AAAED,MAAAA,KAAK,EAAE,YAAT;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KAFK,CAFb;AAMI,IAAA,cAAc,EAAGC,IAAD,IAAUA,IAAI,CAACF,KANnC;AAOI,IAAA,aAAa,EAAGE,IAAD,IAAUA,IAAI,CAACD,KAPlC;AAQI,IAAA,qBAAqB,EAAGC,IAAD,IAAUA,IAAI,CAACD,KAR1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAvCA,eAsDA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtDA,eAyDA,oBAAC,MAAD,CAAQ,OAAR;AACK,IAAA,OAAO,EAAG,MAAMN,YAAY,CAACC,SAAD,EAAW,mBAAX,CADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAzDA,CAXJ,CADJ,CADJ,CADJ;AAiFH,CAlFD;;AAoFA,eAAeL,cAAf;;AAIA,SAASK,SAAT,CAAmBO,QAAnB,EAA6B;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,QAAvC;AACH;;AAED,SAASR,YAAT,CAAsBW,QAAtB,EAAgCC,cAAhC,EAAyDC,SAAzD,EAA8EC,IAA9E,EAA8FC,WAA9F,EAAqHC,YAArH,EAA6IC,aAA7I,EAAsK;AAElK,MAAIC,aAAa,GAAG,EAApB;;AACA,MAAGN,cAAc,IAAI,aAArB,EAAmC;AAC/BO,IAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA+CC,KAA/C,CAAqDnB,OAArD,GAA+D,OAA/D;AACAiB,IAAAA,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,EAAkDC,KAAlD,CAAwDnB,OAAxD,GAAkE,MAAlE;AACAgB,IAAAA,aAAa,GAAG,+FAAhB;AACAT,IAAAA,OAAO,CAACC,GAAR;AACH,GALD,MAMI;AAEA,UAAMY,WAAW,GAAG;AAChB,aAAOT,SADS;AAEhB,cAAOC,IAFS;AAGhB,qBAAcC,WAHE;AAIhB,sBAAeC,YAJC;AAKhB,uBAAgBC;AALA,KAApB;AAQA,QAAIM,MAAM,GAAGC,SAAS,CAACC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAAD,CAAtB;AACAH,IAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA+CC,KAA/C,CAAqDnB,OAArD,GAA+D,MAA/D;AACAiB,IAAAA,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,EAAkDC,KAAlD,CAAwDnB,OAAxD,GAAkE,OAAlE;AACAgB,IAAAA,aAAa,GAAI,qJAAqJK,MAAtK;AAEH;;AAID,QAAMI,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AAAA,QACIC,MAAM,GAAG,KADb;AAAA,QAEI9B,GAAG,GAAGmB,aAFV,CA5BkK,CA+BlK;;AACAS,EAAAA,GAAG,CAACG,IAAJ,CAASD,MAAT,EAAiB9B,GAAjB,EAAsB,IAAtB,EAhCkK,CAkClK;;AACA4B,EAAAA,GAAG,CAACI,kBAAJ,GAAyB,YAAY;AAEjC;AACA,QAAIJ,GAAG,CAACK,UAAJ,KAAmBJ,cAAc,CAACK,IAAtC,EAA4C;AAAE;AAAS,KAHtB,CAKjC;;;AACA,QAAIN,GAAG,CAACO,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOvB,QAAQ,CAACgB,GAAG,CAACO,MAAL,CAAf;AACH,KARgC,CAUjC;AACA;;;AACAP,IAAAA,GAAG,CAACG,IAAJ,CAASD,MAAT,EAAiB9B,GAAjB,EAAsB,IAAtB;AACA4B,IAAAA,GAAG,CAACQ,IAAJ;AACH,GAdD,CAnCkK,CAmDlK;;;AACAR,EAAAA,GAAG,CAACQ,IAAJ;AACH","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport {\n    Text,\n    Button,\n    Layout,\n    Breadcrumb,\n    BoxContainer,\n    InputSelect\n} from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\n\ninterface Props {\n    onChange: (fieldName: string, value: string) => void;\n    onSave: () => void;\n}\n\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n\nconst ServiceCounter: React.FunctionComponent<Props> = (props) => {\n    return (\n        <>\n            <StyledSection>\n                <Layout.Container>\n                    <Breadcrumb links={[{ title: 'Home', url: 'http://localhost:3000/ServiceCounter' }, { title: 'Service Counter' }]} />\n                    \n                    <div id='divButtonNextPatient'>\n\n                   \n                    <Button.Default className='buttonsuccess'\n                                onClick={ () => consumeQueue(handle200,\"nextPatient\")}\n                            >Next Patient</Button.Default>\n\n                    </div>\n                    <div id='divCurrentCitizen'  style={{ display: 'none' }}>\n                    \n                    <Layout.GridContainer className=\"column2\">\n                        <div>\n                            \n\n                            \n\n                            <div className='spacer1'></div>\n\n                            <Text.H3>Currently Serving</Text.H3>\n                            <div className='spacer1'></div>\n                            <div className='spacer1'></div>\n\n                            \n                                <BoxContainer title=\"Citizen Information\" collapsible={false} className=\"textleft\" >\n                                    <div style={{ padding: \"2rem\", minWidth: \"1080px\" }}>\n                                        <Layout.GridContainer className=\"column4\">\n                                            <Text.Body weight=\"semibold\">NRIC</Text.Body>\n                                            <Text.Body weight=\"semibold\">Name</Text.Body>\n                                            <Text.Body weight=\"semibold\">Phone Number</Text.Body>\n                                            <Text.Body weight=\"semibold\">Email</Text.Body>\n                                            <Text.Body>nric number</Text.Body>\n                                            <Text.Body>citizen Name</Text.Body>\n                                            <Text.Body>citeizen phone number</Text.Body>\n                                            <Text.Body>citizen email</Text.Body>\n                                        </Layout.GridContainer>\n                                    </div>\n                                </BoxContainer>\n\n                         \n                            <Text.Body>Next service: </Text.Body>\n\n\n                        </div>\n\n                    </Layout.GridContainer>\n\n\n                    <Layout.GridContainer className=\"column4\">\n\n                        <InputSelect\n                            placeholder=\"Select\"\n                            options={[\n                                { value: \"Payment\", label: \"Payment\" },\n                                { value: \"Medication\", label: \"Medication\" }\n                            ]}\n                            valueExtractor={(item) => item.value}\n                            listExtractor={(item) => item.label}\n                            displayValueExtractor={(item) => item.label}\n                        />\n                    </Layout.GridContainer>\n\n\n                    <div className='spacer1'></div>\n\n\n                    <Button.Default\n                         onClick={ () => consumeQueue(handle200,\"sendToNextService\")}\n                    >Send to next service</Button.Default>\n\n                    </div>\n\n                </Layout.Container>\n            </StyledSection>\n        </>\n    )\n}\n\nexport default ServiceCounter;\n\n\n\nfunction handle200(response) {\n    console.log('handle200 has received:', response);\n}\n\nfunction consumeQueue(callback, buttonSelected : string, bookingId? : string, nric? : string, citizenName? : string, citizenEmail? : string, citizenNumber? : string) {\n\n    var respectiveURL = \"\"\n    if(buttonSelected == \"nextPatient\"){\n        document.getElementById(\"divCurrentCitizen\")!!.style.display = \"block\";\n        document.getElementById(\"divButtonNextPatient\")!!.style.display = \"none\";\n        respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=doctorQueue\"\n        console.log()\n    }\n    else{\n\n        const queueObject = {\n            \"_id\" :bookingId,\n            \"nric\":nric,\n            \"citizenName\":citizenName,\n            \"citizenEmail\":citizenEmail,\n            \"citizenNumber\":citizenNumber\n        }\n    \n        var myJSON = encodeURI(JSON.stringify(queueObject));\n        document.getElementById(\"divCurrentCitizen\")!!.style.display = \"none\";\n        document.getElementById(\"divButtonNextPatient\")!!.style.display = \"block\";\n        respectiveURL =  \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=booking001&exchangeID=hospital&bindingKey=doctor&bookingDetails=\" + myJSON;\n\n    }\n\n\n    \n    const xhr = new XMLHttpRequest(),\n        method = \"GET\",\n        url = respectiveURL;\n    // initialize a new GET request\n    xhr.open(method, url, true);\n\n    // respond to every readyState change\n    xhr.onreadystatechange = function () {\n\n        // ignore all readyStates other than \"DONE\"\n        if (xhr.readyState !== XMLHttpRequest.DONE) { return; }\n\n        // call the callback with status\n        if (xhr.status === 200) {\n            return callback(xhr.status);\n        }\n\n        // got something other than 200,\n        // re-initialize and send another GET request\n        xhr.open(method, url, true);\n        xhr.send();\n    }\n\n    // send the initial GET request\n    xhr.send();\n}\n\n\n"]},"metadata":{},"sourceType":"module"}