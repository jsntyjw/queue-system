{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/CreateNewBooking.tsx\";\nimport React from 'react';\nimport * as toastr from 'toastr';\nimport BaseService from '../service/base.service';\nimport { BookingPage } from './displayBookingForm';\nexport default class Create extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSave = () => {\n      BaseService.create(\"/booking/create\", this.state.booking).then(rp => {\n        if (rp.Status) {\n          toastr.success('Booking saved.');\n          this.setState({\n            booking: {\n              Nric: '',\n              CitizenName: '',\n              CitizenSalutation: '',\n              CitizenEmail: '',\n              CitizenNumber: '',\n              ServiceName: '',\n              ServiceProviderName: '',\n              ServiceProviderEmail: '',\n              ServiceProviderPhone: '',\n              ServiceStartDateTime: '',\n              ServiceEndDateTime: '',\n              BookingCreationDate: '',\n              BookingLocation: '',\n              BookingDescription: '',\n              BookingReference: '',\n              BookingStatus: '',\n              DynamicFields: '',\n              Id: ''\n            }\n          });\n        } else {\n          toastr.error(rp.Messages);\n          console.log(\"Messages: \" + rp.Messages);\n          console.log(\"Exception: \" + rp.Exception);\n        }\n      });\n    };\n\n    this.state = {\n      booking: {\n        Nric: '',\n        CitizenName: '',\n        CitizenSalutation: '',\n        CitizenEmail: '',\n        CitizenNumber: '',\n        ServiceName: '',\n        ServiceProviderName: '',\n        ServiceProviderEmail: '',\n        ServiceProviderPhone: '',\n        ServiceStartDateTime: '',\n        // ServiceEndDateTime : '',\n        // BookingCreationDate : '',\n        // BookingLocation : '',\n        // BookingDescription : '',\n        // BookingReference : '',\n        BookingStatus: '' // DynamicFields : '',\n\n      }\n    };\n    this.onFieldValueChange = this.onFieldValueChange.bind(this);\n  }\n\n  onFieldValueChange(fieldName, value) {\n    const nextState = { ...this.state,\n      booking: { ...this.state.booking,\n        [fieldName]: value\n      }\n    };\n    this.setState(nextState);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(BookingPage, {\n      booking: this.state.booking,\n      onChange: this.onFieldValueChange,\n      onSave: this.onSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/CreateNewBooking.tsx"],"names":["React","toastr","BaseService","BookingPage","Create","Component","constructor","props","onSave","create","state","booking","then","rp","Status","success","setState","Nric","CitizenName","CitizenSalutation","CitizenEmail","CitizenNumber","ServiceName","ServiceProviderName","ServiceProviderEmail","ServiceProviderPhone","ServiceStartDateTime","ServiceEndDateTime","BookingCreationDate","BookingLocation","BookingDescription","BookingReference","BookingStatus","DynamicFields","Id","error","Messages","console","log","Exception","onFieldValueChange","bind","fieldName","value","nextState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as toastr from 'toastr';\nimport Booking from '../models/booking';\nimport BaseService from '../service/base.service';\nimport { BookingPage } from './displayBookingForm';\n \n\n\ninterface IProps { \n    history: History;\n    //Map properties match\n    match:{ \n        isExact: boolean\n        params: {\n            id:string\n        },\n        path: string,\n        url: string,\n    }\n}\ninterface IState {\n    booking: Booking\n}\n\n\nexport default class Create extends  React.Component<IProps, IState> {\n    constructor(props:IProps) {\n        super(props);\n         \n        this.state = {\n            booking: {\n                Nric : '',\n                CitizenName : '',\n                CitizenSalutation : '',\n                CitizenEmail : '',\n                CitizenNumber : '',\n                ServiceName : '',\n                ServiceProviderName : '',\n                ServiceProviderEmail : '',\n                ServiceProviderPhone : '',\n                ServiceStartDateTime : '',\n                // ServiceEndDateTime : '',\n                // BookingCreationDate : '',\n                // BookingLocation : '',\n                // BookingDescription : '',\n                // BookingReference : '',\n                BookingStatus : '',\n                // DynamicFields : '',\n            }\n        }\n        this.onFieldValueChange = this.onFieldValueChange.bind(this);\n    }\n\n    private onFieldValueChange(fieldName: string, value: string) { \n        const nextState = {\n            ...this.state,\n            booking: {\n                ...this.state.booking,\n                [fieldName]: value,\n            }\n        };\n\n        this.setState(nextState);\n    }\n    private onSave = () => { \n        BaseService.create<Booking>(\"/booking/create\", this.state.booking).then(\n            (rp) => {\n                if (rp.Status) {\n                    toastr.success('Booking saved.'); \n\n\n                    this.setState({\n                        booking: {\n                            Nric : '',\n                            CitizenName : '',\n                            CitizenSalutation : '',\n                            CitizenEmail : '',\n                            CitizenNumber : '',\n                            ServiceName : '',\n                            ServiceProviderName : '',\n                            ServiceProviderEmail : '',\n                            ServiceProviderPhone : '',\n                            ServiceStartDateTime : '',\n                            ServiceEndDateTime : '',\n                            BookingCreationDate : '',\n                            BookingLocation : '',\n                            BookingDescription : '',\n                            BookingReference : '',\n                            BookingStatus : '',\n                            DynamicFields : '',\n                            Id: '',\n                        }\n                    });\n                     \n                } else {\n                    toastr.error(rp.Messages);\n                    console.log(\"Messages: \" + rp.Messages);\n                    console.log(\"Exception: \" + rp.Exception);\n                }\n            }\n        );\n\n    } \n     \n    render() {\n        return (\n            <BookingPage\n                booking={this.state.booking}\n                onChange={this.onFieldValueChange}\n                onSave={this.onSave}\n            />\n        );\n    }     \n     \n}"]},"metadata":{},"sourceType":"module"}