{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/ServiceCounter.tsx\";\nimport React from 'react';\nimport '../App.css';\nimport '../index.css';\nimport { Text, Button, Layout, Breadcrumb, BoxContainer, InputSelect, Modal } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nimport Booking from \"../models/booking\";\nimport { ModalContent } from \"../models/doc-elements\";\nimport BaseService from '../service/base.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n_c = StyledSection;\n\nclass ServiceCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookings: [],\n      _bookingId: \"\",\n      nric: \"\",\n      citizenName: \"\",\n      citizenNumber: \"\",\n      citizenEmail: \"\",\n      inputValue: \"\",\n      queueNumber: \"\",\n      showModal: false,\n      citizenSalutation: \"\",\n      generalType: \"\",\n      serviceName: \"\",\n      serviceProviderEmail: \"\",\n      serviceProviderName: \"\",\n      serviceStartDate: \"\",\n      serviceProviderPhone: \"\",\n      serviceStartTime: \"\",\n      serviceProviderLocation: \"\",\n      bookingStatus: \"\",\n      queueName: \"communityHealthQueue\",\n      elementNobodyInQueue: \"none\",\n      showCurrentCitizen: \"none\",\n      showDivHPBService: \"block\",\n      showDIVHospitalservice: \"none\",\n      agencySelection: \"HPB\",\n      serviceSelection: \"communityHealth\",\n      routingKey: \"sgh.doctor\",\n      showNextServiceHospitalDoctor: \"block\",\n      showNextServiceHospitalPharmacy: \"block\",\n      showNextServiceHospitalPayment: \"block\",\n      showNextServiceHPB: \"none\",\n      nextServiceSelection: \"\",\n      displayNextPatient: \"block\"\n    };\n    this.consumeQueue = this.consumeQueue.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  async loadData() {\n    try {\n      this.setState({\n        elementNobodyInQueue: \"none\"\n      });\n      var apiURL;\n      apiURL = process.env.REACT_APP_APPOINTMENT_API_ADDRESS + 'api/booking/location/Tampines';\n      fetch(apiURL).then(function (response) {\n        return response.json();\n      }).then(myJson => {\n        this.setState({\n          bookings: []\n        });\n        myJson.data.forEach(element => {\n          if (element[\"bookingStatus\"] == this.state.serviceSelection + \"-Calling\") {\n            var eachBooking = new Booking(element[\"_id\"], element[\"nric\"], element[\"citizenName\"], element[\"citizenSalutation\"], element[\"citizenEmail\"], element[\"citizenNumber\"], element[\"generalType\"], element[\"serviceName\"], element[\"serviceProviderName\"], element[\"serviceProviderEmail\"], element[\"serviceProviderPhone\"], element[\"serviceStartDate\"], element[\"serviceStartTime\"], element[\"serviceProviderLocation\"], element[\"bookingStatus\"], element[\"queueNumber\"]);\n            this.state.bookings.push(eachBooking);\n\n            if (this.state.bookings.length > 0) {\n              this.setState({\n                displayNextPatient: \"none\"\n              });\n            }\n          }\n\n          this.setState({\n            bookings: this.state.bookings\n          });\n\n          if (this.state.bookings.length > 0) {\n            var _this$state$bookings$;\n\n            this.setState({\n              showCurrentCitizen: \"block\",\n              nric: this.state.bookings[0].Nric,\n              citizenName: this.state.bookings[0].CitizenName,\n              citizenNumber: this.state.bookings[0].CitizenNumber,\n              citizenEmail: this.state.bookings[0].CitizenEmail,\n              citizenSalutation: this.state.bookings[0].CitizenSalutation,\n              _bookingId: ((_this$state$bookings$ = this.state.bookings[0].Id) === null || _this$state$bookings$ === void 0 ? void 0 : _this$state$bookings$.toString()) || '',\n              generalType: this.state.bookings[0].GeneralType,\n              serviceName: this.state.bookings[0].ServiceName,\n              serviceProviderName: this.state.bookings[0].ServiceProviderName,\n              serviceProviderEmail: this.state.bookings[0].ServiceProviderEmail,\n              serviceProviderPhone: this.state.bookings[0].ServiceProviderPhone,\n              serviceStartDate: this.state.bookings[0].ServiceStartDate,\n              serviceStartTime: this.state.bookings[0].ServiceStartTime,\n              serviceProviderLocation: this.state.bookings[0].ServiceProviderLocation,\n              bookingStatus: this.state.bookings[0].BookingStatus,\n              queueNumber: this.state.bookings[0].QueueNumber\n            });\n\n            if (this.state.agencySelection == \"HPB\") {\n              this.setState({\n                showNextServiceHospitalDoctor: \"none\",\n                showNextServiceHospitalPharmacy: \"none\",\n                showNextServiceHospitalPayment: \"none\",\n                showNextServiceHPB: \"block\"\n              });\n            } else {\n              this.setState({\n                showNextServiceHospitalDoctor: \"none\",\n                showNextServiceHospitalPharmacy: \"none\",\n                showNextServiceHospitalPayment: \"none\",\n                showNextServiceHPB: \"none\"\n              });\n\n              if (this.state.serviceSelection == \"Doctor\") {\n                this.setState({\n                  showNextServiceHospitalDoctor: \"block\",\n                  showNextServiceHospitalPharmacy: \"none\",\n                  showNextServiceHospitalPayment: \"none\",\n                  showNextServiceHPB: \"none\"\n                });\n              } else if (this.state.serviceSelection == \"Payment\") {\n                this.setState({\n                  showNextServiceHospitalDoctor: \"none\",\n                  showNextServiceHospitalPharmacy: \"none\",\n                  showNextServiceHospitalPayment: \"block\",\n                  showNextServiceHPB: \"none\"\n                });\n              } else {\n                this.setState({\n                  showNextServiceHospitalDoctor: \"none\",\n                  showNextServiceHospitalPharmacy: \"block\",\n                  showNextServiceHospitalPayment: \"none\",\n                  showNextServiceHPB: \"none\"\n                });\n              }\n            }\n          } else {\n            this.setState({\n              showCurrentCitizen: \"none\"\n            });\n          }\n        });\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(StyledSection, {\n      children: [/*#__PURE__*/_jsxDEV(Modal.Base, {\n        show: this.state.showModal,\n        animationFrom: \"bottom\",\n        enableOverlayClick: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Box, {\n          onClose: () => {\n            this.setState({\n              showModal: false\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(ModalContent, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Send to queue succesfully\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Layout.Container, {\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          links: [{\n            title: 'Home',\n            url: 'http://localhost:3000/ServiceCounter'\n          }, {\n            title: 'Service Counter'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), \"Agency:\", /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"divAgency\",\n          className: \"inlinecontent\",\n          style: {\n            justifyItems: \"start\"\n          },\n          children: /*#__PURE__*/_jsxDEV(InputSelect, {\n            options: [{\n              value: \"HPB\",\n              label: \"HPB\"\n            }, {\n              value: \"Hospital\",\n              label: \"Hospital\"\n            }],\n            valueExtractor: item => item.value,\n            listExtractor: item => item.label,\n            displayValueExtractor: item => item.label,\n            placeholder: this.state.agencySelection,\n            onSelectItem: (item, selectedValue) => {\n              this.setState({\n                inputValue: selectedValue\n              }, () => {\n                this.ddlAgency(selectedValue);\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), \"Service:\", /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"divHPBService\",\n          className: \"inlinecontent\",\n          style: {\n            justifyItems: \"start\",\n            display: this.state.showDivHPBService\n          },\n          children: /*#__PURE__*/_jsxDEV(InputSelect, {\n            options: [{\n              value: \"communityHealth\",\n              label: \"communityHealth\"\n            }, {\n              value: \"workplaceHealth\",\n              label: \"workplaceHealth\"\n            }],\n            valueExtractor: item => item.value,\n            listExtractor: item => item.label,\n            displayValueExtractor: item => item.label,\n            placeholder: this.state.serviceSelection,\n            onSelectItem: (item, selectedValue) => {\n              this.setState({\n                inputValue: selectedValue\n              }, () => {\n                this.ddlService(selectedValue);\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"divHospitalService\",\n          className: \"inlinecontent\",\n          style: {\n            justifyItems: \"start\",\n            display: this.state.showDIVHospitalservice\n          },\n          children: /*#__PURE__*/_jsxDEV(InputSelect, {\n            options: [{\n              value: \"Doctor\",\n              label: \"Doctor\"\n            }, {\n              value: \"Payment\",\n              label: \"Payment\"\n            }, {\n              value: \"Pharmacy\",\n              label: \"Pharmacy\"\n            }],\n            valueExtractor: item => item.value,\n            listExtractor: item => item.label,\n            displayValueExtractor: item => item.label,\n            placeholder: this.state.serviceSelection,\n            onSelectItem: (item, selectedValue) => {\n              this.setState({\n                inputValue: selectedValue\n              }, () => {\n                this.ddlService(selectedValue);\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"divButtonNextPatient\",\n          children: [/*#__PURE__*/_jsxDEV(Button.Default, {\n            className: \"buttonsuccess\",\n            style: {\n              'display': this.state.displayNextPatient\n            },\n            onClick: () => this.consumeQueue(this.handle200, \"nextPatient\"),\n            children: \"Next Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              'color': \"green\",\n              'fontSize': 30,\n              'display': this.state.elementNobodyInQueue\n            },\n            children: \"There is no one in the queue\\uD83D\\uDE04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"divCurrentCitizen\",\n          style: {\n            display: this.state.showCurrentCitizen\n          },\n          children: [/*#__PURE__*/_jsxDEV(Layout.GridContainer, {\n            className: \"column2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spacer1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Text.H3, {\n                children: \"Currently Serving\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(BoxContainer, {\n                title: \"Citizen Information\",\n                collapsible: false,\n                className: \"textleft\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"servicecountergrid\",\n                  children: /*#__PURE__*/_jsxDEV(Layout.GridContainer, {\n                    className: \"column4\",\n                    children: [/*#__PURE__*/_jsxDEV(Text.Body, {\n                      weight: \"semibold\",\n                      children: \"NRIC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Text.Body, {\n                      weight: \"semibold\",\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Text.Body, {\n                      weight: \"semibold\",\n                      children: \"Phone Number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Text.Body, {\n                      weight: \"semibold\",\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Text.Body, {\n                      children: this.state.nric\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Text.Body, {\n                      children: this.state.citizenName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Text.Body, {\n                      children: this.state.citizenNumber\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Text.Body, {\n                      children: this.state.citizenEmail\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Text.Body, {\n                children: \"Next service: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: this.state.showNextServiceHPB\n            },\n            children: /*#__PURE__*/_jsxDEV(InputSelect, {\n              placeholder: \"Select\",\n              options: [{\n                value: \"Doctor\",\n                label: \"Doctor\"\n              }, {\n                value: \"Missed Queue\",\n                label: \"Missed Queue\"\n              }],\n              valueExtractor: item => item.value,\n              listExtractor: item => item.label,\n              displayValueExtractor: item => item.label,\n              onSelectItem: (item, selectedValue) => {\n                if (selectedValue != \"Missed Queue\") {\n                  this.setState({\n                    routingKey: \"sgh.doctor\"\n                  });\n                }\n\n                this.setState({\n                  nextServiceSelection: selectedValue\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: this.state.showNextServiceHospitalDoctor\n            },\n            children: /*#__PURE__*/_jsxDEV(InputSelect, {\n              placeholder: \"Select\",\n              options: [{\n                value: \"Payment\",\n                label: \"Payment\"\n              }, {\n                value: \"Pharmacy\",\n                label: \"Pharmacy\"\n              }, {\n                value: \"Missed Queue\",\n                label: \"Missed Queue\"\n              }],\n              valueExtractor: item => item.value,\n              listExtractor: item => item.label,\n              displayValueExtractor: item => item.label,\n              onSelectItem: (item, selectedValue) => {\n                if (selectedValue == \"Payment\") {\n                  this.setState({\n                    routingKey: \"sgh.payment\"\n                  });\n                } else if (selectedValue == \"Pharmacy\") {\n                  this.setState({\n                    routingKey: \"sgh.pharmacy\"\n                  });\n                } else {}\n\n                this.setState({\n                  nextServiceSelection: selectedValue\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: this.state.showNextServiceHospitalPayment\n            },\n            children: /*#__PURE__*/_jsxDEV(InputSelect, {\n              placeholder: \"Select\",\n              options: [{\n                value: \"Pharmacy\",\n                label: \"Pharmacy\"\n              }, {\n                value: \"Missed Queue\",\n                label: \"Missed Queue\"\n              }],\n              valueExtractor: item => item.value,\n              listExtractor: item => item.label,\n              displayValueExtractor: item => item.label,\n              onSelectItem: (item, selectedValue) => {\n                if (selectedValue == \"Pharmacy\") {\n                  this.setState({\n                    routingKey: \"sgh.pharmacy\"\n                  });\n                } else {}\n\n                this.setState({\n                  nextServiceSelection: selectedValue\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: this.state.showNextServiceHospitalPharmacy\n            },\n            children: /*#__PURE__*/_jsxDEV(InputSelect, {\n              placeholder: \"Select\",\n              options: [{\n                value: \"Completed\",\n                label: \"Completed\"\n              }, {\n                value: \"Missed Queue\",\n                label: \"Missed Queue\"\n              }],\n              valueExtractor: item => item.value,\n              listExtractor: item => item.label,\n              displayValueExtractor: item => item.label,\n              onSelectItem: (item, selectedValue) => {\n                if (selectedValue == \"Missed Queue\") {} else {}\n\n                this.setState({\n                  nextServiceSelection: selectedValue\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spacer1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button.Default, {\n            onClick: () => this.consumeQueue(this.handle200, \"sendtoNextService\", this.state._bookingId, this.state.nric, this.state.citizenName, this.state.citizenSalutation, this.state.citizenEmail, this.state.citizenNumber, this.state.generalType, this.state.serviceName, this.state.serviceProviderName, this.state.serviceProviderEmail, this.state.serviceProviderPhone, this.state.serviceStartDate, this.state.serviceStartTime, this.state.serviceProviderLocation, this.state.bookingStatus, this.state.queueNumber),\n            style: {\n              marginBottom: \"50px\"\n            },\n            children: \"Send to next service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this);\n  }\n\n  ddlAgency(selectedValue) {\n    // this.setState({\n    //     agencySelection: \"\",\n    //     serviceSelection: \"\"\n    // })\n    if (selectedValue == \"HPB\") {\n      this.setState({\n        showCurrentCitizen: \"none\",\n        showDivHPBService: \"block\",\n        showDIVHospitalservice: \"none\",\n        agencySelection: \"HPB\",\n        serviceSelection: \"communityHealth\",\n        queueName: \"communityHealthQueue\",\n        displayNextPatient: \"block\"\n      }, () => {\n        this.loadData();\n      });\n    } else {\n      this.setState({\n        showCurrentCitizen: \"none\",\n        showDivHPBService: \"none\",\n        showDIVHospitalservice: \"block\",\n        agencySelection: \"Hospital\",\n        serviceSelection: \"Doctor\",\n        queueName: \"doctorQueue\",\n        displayNextPatient: \"block\"\n      }, () => {\n        this.loadData();\n      });\n    }\n  }\n\n  ddlService(selectedValue) {\n    if (selectedValue == \"communityHealth\") {\n      this.setState({\n        showCurrentCitizen: \"none\",\n        showDivHPBService: \"block\",\n        showDIVHospitalservice: \"none\",\n        serviceSelection: \"communityHealth\",\n        queueName: \"communityHealthQueue\",\n        displayNextPatient: \"block\"\n      }, () => {\n        this.loadData();\n      }); // this.loadData()\n    }\n\n    if (selectedValue == \"workplaceHealth\") {\n      this.setState({\n        showCurrentCitizen: \"none\",\n        showDivHPBService: \"block\",\n        showDIVHospitalservice: \"none\",\n        serviceSelection: \"workplaceHealth\",\n        queueName: \"workplaceHealthQueue\",\n        displayNextPatient: \"block\"\n      }, () => {\n        this.loadData();\n      });\n    }\n\n    if (selectedValue == \"Doctor\") {\n      this.setState({\n        showCurrentCitizen: \"none\",\n        showDivHPBService: \"none\",\n        showDIVHospitalservice: \"block\",\n        serviceSelection: \"Doctor\",\n        queueName: \"doctorQueue\",\n        displayNextPatient: \"block\"\n      }, () => {\n        this.loadData();\n      });\n    }\n\n    if (selectedValue == \"Payment\") {\n      this.setState({\n        showCurrentCitizen: \"none\",\n        showDivHPBService: \"none\",\n        showDIVHospitalservice: \"block\",\n        serviceSelection: \"Payment\",\n        queueName: \"paymentQueue\",\n        displayNextPatient: \"block\"\n      }, () => {\n        this.loadData();\n      });\n    }\n\n    if (selectedValue == \"Pharmacy\") {\n      this.setState({\n        showCurrentCitizen: \"none\",\n        showDivHPBService: \"none\",\n        showDIVHospitalservice: \"block\",\n        serviceSelection: \"Pharmacy\",\n        queueName: \"pharmacyQueue\",\n        displayNextPatient: \"block\"\n      }, () => {\n        this.loadData();\n      });\n    }\n  }\n\n  handle200(response) {\n    console.log('handle200 has received:', response);\n  }\n\n  consumeQueue(callback, buttonSelected, bookingId, nric, citizenName, citizenSalutation, citizenEmail, citizenNumber, generalType, serviceName, serviceProviderName, serviceProviderEmail, serviceProviderPhone, serviceStartDate, serviceStartTime, serviceProviderLocation, bookingStatus, queueNumber) {\n    var respectiveURL = \"\";\n\n    if (buttonSelected == \"nextPatient\") {\n      respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=\" + this.state.queueName;\n    }\n\n    if (buttonSelected == \"sendtoNextService\" && this.state.nextServiceSelection != \"Completed\" && this.state.nextServiceSelection != \"Missed Queue\") {\n      const queueObject = {\n        \"Id\": bookingId,\n        \"Nric\": nric,\n        \"CitizenName\": citizenName,\n        \"CitizenSalutation\": citizenSalutation,\n        \"CitizenEmail\": citizenEmail,\n        \"CitizenNumber\": citizenNumber,\n        \"GeneralType\": generalType,\n        \"ServiceName\": serviceName,\n        \"ServiceProviderName\": serviceProviderName,\n        \"ServiceProviderEmail\": serviceProviderEmail,\n        \"ServiceProviderPhone\": serviceProviderPhone,\n        \"ServiceStartDate\": serviceStartDate,\n        \"ServiceStartTime\": serviceStartTime,\n        \"ServiceProviderLocation\": serviceProviderLocation,\n        \"BookingStatus\": bookingStatus,\n        \"QueueNumber\": queueNumber\n      };\n      var myJSON = encodeURI(JSON.stringify(queueObject));\n      respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId.toString() + \"&exchangeID=master&bindingKey=\" + this.state.routingKey + \"&bookingDetails=\" + myJSON;\n    }\n\n    const xhr = new XMLHttpRequest(),\n          method = \"GET\",\n          url = respectiveURL; // initialize a new GET request\n\n    xhr.open(method, url, true); // xhr.onload = function (e) {\n    // respond to every readyState change\n\n    xhr.onreadystatechange = () => {\n      // ignore all readyStates other than \"DONE\"\n      if (xhr.readyState !== XMLHttpRequest.DONE) {\n        return;\n      } // call the callback with status\n\n\n      if (xhr.status === 200) {\n        if (xhr.responseText == \"no messages\") {\n          this.setState({\n            elementNobodyInQueue: \"block\"\n          });\n          return;\n        }\n\n        var calledBooking;\n\n        if (buttonSelected == \"nextPatient\") {\n          this.setState({\n            _bookingId: JSON.parse(xhr.responseText).Id,\n            nric: JSON.parse(xhr.responseText).Nric,\n            citizenName: JSON.parse(xhr.responseText).CitizenName,\n            citizenEmail: JSON.parse(xhr.responseText).CitizenEmail,\n            citizenNumber: JSON.parse(xhr.responseText).CitizenNumber,\n            citizenSalutation: JSON.parse(xhr.responseText).CitizenSalutation,\n            generalType: JSON.parse(xhr.responseText).GeneralType,\n            serviceName: JSON.parse(xhr.responseText).ServiceName,\n            serviceProviderEmail: JSON.parse(xhr.responseText).ServiceProviderEmail,\n            serviceProviderName: JSON.parse(xhr.responseText).ServiceProviderName,\n            serviceStartDate: JSON.parse(xhr.responseText).ServiceStartDate,\n            serviceProviderPhone: JSON.parse(xhr.responseText).ServiceProviderPhone,\n            serviceStartTime: JSON.parse(xhr.responseText).ServiceStartTime,\n            serviceProviderLocation: JSON.parse(xhr.responseText).ServiceProviderLocation,\n            bookingStatus: JSON.parse(xhr.responseText).BookingStatus,\n            queueNumber: JSON.parse(xhr.responseText).QueueNumber,\n            elementNobodyInQueue: \"none\",\n            showCurrentCitizen: \"block\"\n          });\n\n          if (this.state.agencySelection == \"HPB\") {\n            this.setState({\n              showNextServiceHospitalDoctor: \"none\",\n              showNextServiceHospitalPharmacy: \"none\",\n              showNextServiceHospitalPayment: \"none\",\n              showNextServiceHPB: \"block\"\n            });\n          } else {\n            this.setState({\n              showNextServiceHospitalDoctor: \"none\",\n              showNextServiceHospitalPharmacy: \"none\",\n              showNextServiceHospitalPayment: \"none\",\n              showNextServiceHPB: \"none\"\n            });\n\n            if (this.state.serviceSelection == \"Doctor\") {\n              this.setState({\n                showNextServiceHospitalDoctor: \"block\",\n                showNextServiceHospitalPharmacy: \"none\",\n                showNextServiceHospitalPayment: \"none\",\n                showNextServiceHPB: \"none\"\n              });\n            } else if (this.state.serviceSelection == \"Payment\") {\n              this.setState({\n                showNextServiceHospitalDoctor: \"none\",\n                showNextServiceHospitalPharmacy: \"none\",\n                showNextServiceHospitalPayment: \"block\",\n                showNextServiceHPB: \"none\"\n              });\n            } else {\n              this.setState({\n                showNextServiceHospitalDoctor: \"none\",\n                showNextServiceHospitalPharmacy: \"block\",\n                showNextServiceHospitalPayment: \"none\",\n                showNextServiceHPB: \"none\"\n              });\n            }\n          }\n\n          calledBooking = new Booking(this.state._bookingId, this.state.nric, this.state.citizenName, this.state.citizenSalutation, this.state.citizenEmail, this.state.citizenNumber, this.state.generalType, this.state.serviceName, this.state.serviceProviderName, this.state.serviceProviderEmail, this.state.serviceProviderPhone, this.state.serviceStartDate, this.state.serviceStartTime, this.state.serviceProviderLocation, this.state.bookingStatus, this.state.queueNumber);\n          document.getElementById(\"divCurrentCitizen\").style.display = \"block\";\n          document.getElementById(\"divButtonNextPatient\").style.display = \"none\";\n          calledBooking.BookingStatus = this.state.serviceSelection + \"-Calling\";\n          BaseService.update(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + \"api/booking/update/\", this.state._bookingId, calledBooking).then(rp => {\n            if (rp.Status) {\n              console.log('Booking saved.');\n            } else {\n              console.log(rp.Messages);\n              console.log(\"Messages: \" + rp.Messages);\n              console.log(\"Exception: \" + rp.Exception);\n            }\n          });\n        }\n\n        if (buttonSelected == \"sendtoNextService\") {\n          this.setState({\n            showModal: true\n          });\n          calledBooking = new Booking(this.state._bookingId, this.state.nric, this.state.citizenName, this.state.citizenSalutation, this.state.citizenEmail, this.state.citizenNumber, this.state.generalType, this.state.serviceName, this.state.serviceProviderName, this.state.serviceProviderEmail, this.state.serviceProviderPhone, this.state.serviceStartDate, this.state.serviceStartTime, this.state.serviceProviderLocation, this.state.bookingStatus, this.state.queueNumber);\n          document.getElementById(\"divCurrentCitizen\").style.display = \"none\";\n          document.getElementById(\"divButtonNextPatient\").style.display = \"block\";\n\n          if (this.state.nextServiceSelection == \"Missed Queue\") {\n            calledBooking.BookingStatus = this.state.serviceSelection + \"-Missed\";\n          } else if (this.state.nextServiceSelection == \"Completed\") {\n            calledBooking.BookingStatus = \"Completed\";\n          } else if (this.state.nextServiceSelection != this.state.serviceSelection && this.state.nextServiceSelection != \"Missed Queue\" && this.state.nextServiceSelection != \"Completed\") {\n            calledBooking.BookingStatus = this.state.nextServiceSelection + \"-Queued\";\n          } else {\n            calledBooking.BookingStatus = this.state.serviceSelection + \"-Calling\";\n          }\n\n          BaseService.update(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + \"api/booking/update/\", this.state._bookingId, calledBooking).then(rp => {\n            if (rp.Status) {\n              console.log('Booking saved.');\n            } else {\n              console.log(rp.Messages);\n              console.log(\"Messages: \" + rp.Messages);\n              console.log(\"Exception: \" + rp.Exception);\n            }\n          });\n        }\n\n        return callback(xhr.status);\n      } // got something other than 200,\n      // re-initialize and send another GET request\n\n\n      xhr.open(method, url, true);\n      xhr.send();\n    }; // send the initial GET request\n\n\n    xhr.send();\n  }\n\n}\n\nexport default ServiceCounter;\n\nfunction typeOf(responseText) {\n  throw new Error('Function not implemented.');\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"StyledSection\");","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/ServiceCounter.tsx"],"names":["React","Text","Button","Layout","Breadcrumb","BoxContainer","InputSelect","Modal","styled","Booking","ModalContent","BaseService","StyledSection","Section","ServiceCounter","Component","constructor","props","state","bookings","_bookingId","nric","citizenName","citizenNumber","citizenEmail","inputValue","queueNumber","showModal","citizenSalutation","generalType","serviceName","serviceProviderEmail","serviceProviderName","serviceStartDate","serviceProviderPhone","serviceStartTime","serviceProviderLocation","bookingStatus","queueName","elementNobodyInQueue","showCurrentCitizen","showDivHPBService","showDIVHospitalservice","agencySelection","serviceSelection","routingKey","showNextServiceHospitalDoctor","showNextServiceHospitalPharmacy","showNextServiceHospitalPayment","showNextServiceHPB","nextServiceSelection","displayNextPatient","consumeQueue","bind","componentDidMount","loadData","setState","apiURL","process","env","REACT_APP_APPOINTMENT_API_ADDRESS","fetch","then","response","json","myJson","data","forEach","element","eachBooking","push","length","Nric","CitizenName","CitizenNumber","CitizenEmail","CitizenSalutation","Id","toString","GeneralType","ServiceName","ServiceProviderName","ServiceProviderEmail","ServiceProviderPhone","ServiceStartDate","ServiceStartTime","ServiceProviderLocation","BookingStatus","QueueNumber","e","console","log","render","title","url","justifyItems","value","label","item","selectedValue","ddlAgency","display","ddlService","handle200","marginBottom","callback","buttonSelected","bookingId","respectiveURL","queueObject","myJSON","encodeURI","JSON","stringify","xhr","XMLHttpRequest","method","open","onreadystatechange","readyState","DONE","status","responseText","calledBooking","parse","document","getElementById","style","update","rp","Status","Messages","Exception","send","typeOf","Error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport '../index.css';\nimport {\n    Text,\n    Button,\n    Layout,\n    Breadcrumb,\n    BoxContainer,\n    InputSelect,\n    Modal\n} from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\n\nimport Booking from \"../models/booking\";\n\n\nimport { ModalContent } from \"../models/doc-elements\";\nimport BaseService from '../service/base.service';\n\n\n\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n\n\ninterface MyState {\n    bookings: Booking[],\n    _bookingId: string,\n    nric: string,\n    citizenName: string,\n    citizenNumber: string,\n    citizenEmail: string,\n    inputValue: string,\n    queueNumber: string,\n    showModal: boolean,\n    citizenSalutation: string,\n    generalType: string,\n    serviceName: string,\n    serviceProviderEmail: string,\n    serviceProviderName: string,\n    serviceStartDate: string,\n    serviceProviderPhone: string,\n    serviceStartTime: string,\n    serviceProviderLocation: string,\n    bookingStatus: string,\n    queueName: string,\n    elementNobodyInQueue: string,\n    showCurrentCitizen: string,\n    showDivHPBService: string,\n    showDIVHospitalservice: string,\n    agencySelection: string,\n    serviceSelection: string,\n    routingKey: string,\n    showNextServiceHospitalDoctor: string,\n    showNextServiceHospitalPharmacy: string,\n    showNextServiceHospitalPayment: string,\n    showNextServiceHPB: string,\n    nextServiceSelection: string,\n    displayNextPatient: string\n}\n\n\n\nclass ServiceCounter extends React.Component<{}, MyState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            _bookingId: \"\",\n            nric: \"\",\n            citizenName: \"\",\n            citizenNumber: \"\",\n            citizenEmail: \"\",\n            inputValue: \"\",\n            queueNumber: \"\",\n            showModal: false,\n            citizenSalutation: \"\",\n            generalType: \"\",\n            serviceName: \"\",\n            serviceProviderEmail: \"\",\n            serviceProviderName: \"\",\n            serviceStartDate: \"\",\n            serviceProviderPhone: \"\",\n            serviceStartTime: \"\",\n            serviceProviderLocation: \"\",\n            bookingStatus: \"\",\n            queueName: \"communityHealthQueue\",\n            elementNobodyInQueue: \"none\",\n            showCurrentCitizen: \"none\",\n            showDivHPBService: \"block\",\n            showDIVHospitalservice: \"none\",\n            agencySelection: \"HPB\",\n            serviceSelection: \"communityHealth\",\n            routingKey: \"sgh.doctor\",\n            showNextServiceHospitalDoctor: \"block\",\n            showNextServiceHospitalPharmacy: \"block\",\n            showNextServiceHospitalPayment: \"block\",\n            showNextServiceHPB: \"none\",\n            nextServiceSelection: \"\",\n            displayNextPatient: \"block\"\n        };\n\n        this.consumeQueue = this.consumeQueue.bind(this)\n\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    async loadData() {\n\n        try {\n            this.setState({\n                elementNobodyInQueue : \"none\"\n            })\n            var apiURL: string\n            apiURL = process.env.REACT_APP_APPOINTMENT_API_ADDRESS + 'api/booking/location/Tampines';\n\n            fetch(apiURL)\n                .then(function (response) {\n\n                    return response.json();\n                })\n                .then((myJson) => {\n                    this.setState({\n                        bookings: []\n                    })\n                    myJson.data.forEach(element => {\n\n                        if (element[\"bookingStatus\"] == this.state.serviceSelection + \"-Calling\") {\n                            var eachBooking = new Booking(\n                                element[\"_id\"],\n                                element[\"nric\"],\n                                element[\"citizenName\"],\n                                element[\"citizenSalutation\"],\n                                element[\"citizenEmail\"],\n                                element[\"citizenNumber\"],\n                                element[\"generalType\"],\n                                element[\"serviceName\"],\n                                element[\"serviceProviderName\"],\n                                element[\"serviceProviderEmail\"],\n                                element[\"serviceProviderPhone\"],\n                                element[\"serviceStartDate\"],\n                                element[\"serviceStartTime\"],\n                                element[\"serviceProviderLocation\"],\n                                element[\"bookingStatus\"],\n                                element[\"queueNumber\"]\n                            );\n\n                            this.state.bookings.push(eachBooking)\n\n                            if(this.state.bookings.length > 0){\n                                this.setState({displayNextPatient: \"none\"})\n                            }\n\n                        }\n\n                        this.setState({\n                            bookings: this.state.bookings,\n                        });\n\n                        if (this.state.bookings.length > 0) {\n\n                            this.setState({\n                                showCurrentCitizen: \"block\",\n\n                                nric: this.state.bookings[0].Nric,\n                                citizenName: this.state.bookings[0].CitizenName,\n                                citizenNumber: this.state.bookings[0].CitizenNumber,\n                                citizenEmail: this.state.bookings[0].CitizenEmail,\n                                citizenSalutation: this.state.bookings[0].CitizenSalutation,\n                                _bookingId: this.state.bookings[0].Id?.toString() || '',\n                                generalType: this.state.bookings[0].GeneralType,\n                                serviceName: this.state.bookings[0].ServiceName,\n                                serviceProviderName: this.state.bookings[0].ServiceProviderName,\n                                serviceProviderEmail: this.state.bookings[0].ServiceProviderEmail,\n                                serviceProviderPhone: this.state.bookings[0].ServiceProviderPhone,\n                                serviceStartDate: this.state.bookings[0].ServiceStartDate,\n                                serviceStartTime: this.state.bookings[0].ServiceStartTime,\n                                serviceProviderLocation: this.state.bookings[0].ServiceProviderLocation,\n                                bookingStatus: this.state.bookings[0].BookingStatus,\n                                queueNumber: this.state.bookings[0].QueueNumber\n                            })\n\n\n\n                            if (this.state.agencySelection == \"HPB\") {\n                                this.setState({\n                                    showNextServiceHospitalDoctor: \"none\",\n                                    showNextServiceHospitalPharmacy: \"none\",\n                                    showNextServiceHospitalPayment: \"none\",\n                                    showNextServiceHPB: \"block\",\n                                })\n                            }\n                            else {\n                                this.setState({\n                                    showNextServiceHospitalDoctor: \"none\",\n                                    showNextServiceHospitalPharmacy: \"none\",\n                                    showNextServiceHospitalPayment: \"none\",\n                                    showNextServiceHPB: \"none\",\n                                })\n\n                                if(this.state.serviceSelection == \"Doctor\"){\n                                    this.setState({\n                                        showNextServiceHospitalDoctor: \"block\",\n                                        showNextServiceHospitalPharmacy: \"none\",\n                                        showNextServiceHospitalPayment: \"none\",\n                                        showNextServiceHPB: \"none\"\n                                    })\n                                }\n\n                                else if(this.state.serviceSelection == \"Payment\"){\n                                    this.setState({\n                                        showNextServiceHospitalDoctor: \"none\",\n                                        showNextServiceHospitalPharmacy: \"none\",\n                                        showNextServiceHospitalPayment: \"block\",\n                                        showNextServiceHPB: \"none\"\n                                    })\n                                }\n\n                                else{\n                                    this.setState({\n                                        showNextServiceHospitalDoctor: \"none\",\n                                        showNextServiceHospitalPharmacy: \"block\",\n                                        showNextServiceHospitalPayment: \"none\",\n                                        showNextServiceHPB: \"none\"\n                                    })\n                                }\n                            }\n                        }\n                        else {\n                            this.setState({\n                                showCurrentCitizen: \"none\",\n                            })\n                        }\n                    });\n                });\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    render() {\n        return (\n            <StyledSection>\n\n                <Modal.Base\n                    show={this.state.showModal}\n                    animationFrom=\"bottom\"\n                    enableOverlayClick={true}\n                >\n                    <Modal.Box onClose={() => {\n                        this.setState({\n                            showModal: false\n                        });\n                    }}>\n                        <ModalContent>\n                            <span>Send to queue succesfully</span>\n                        </ModalContent>\n                    </Modal.Box>\n                </Modal.Base>\n                <Layout.Container>\n\n\n                    <Breadcrumb links={[{ title: 'Home', url: 'http://localhost:3000/ServiceCounter' }, { title: 'Service Counter' }]} />\n\n                    Agency:\n                    <div id='divAgency' className=\"inlinecontent\" style={{ justifyItems: \"start\" }}>\n                        <InputSelect\n                            options={[\n                                { value: \"HPB\", label: \"HPB\" },\n                                { value: \"Hospital\", label: \"Hospital\" },\n\n                            ]}\n\n                            valueExtractor={(item) => item.value}\n                            listExtractor={(item) => item.label}\n\n                            displayValueExtractor={(item) => item.label}\n                            placeholder={this.state.agencySelection}\n                            onSelectItem={(item, selectedValue) => {\n                                this.setState({ inputValue: selectedValue }, () => {\n                                    this.ddlAgency(selectedValue)\n\n                                });\n                            }} />\n\n                    </div>\n\n\n\n                    <br />\n\n                    Service:\n\n                    <div id='divHPBService' className=\"inlinecontent\" style={{ justifyItems: \"start\", display: this.state.showDivHPBService }}>\n                        <InputSelect\n                            options={[\n                                { value: \"communityHealth\", label: \"communityHealth\" },\n                                { value: \"workplaceHealth\", label: \"workplaceHealth\" },\n\n                            ]}\n\n                            valueExtractor={(item) => item.value}\n                            listExtractor={(item) => item.label}\n\n                            displayValueExtractor={(item) => item.label}\n                            placeholder={this.state.serviceSelection}\n                            onSelectItem={(item, selectedValue) => {\n                                this.setState({ inputValue: selectedValue }, () => {\n                                    this.ddlService(selectedValue)\n\n                                });\n                            }} />\n\n                    </div>\n\n                    <div id='divHospitalService' className=\"inlinecontent\" style={{ justifyItems: \"start\", display: this.state.showDIVHospitalservice }}>\n                        <InputSelect\n                            options={[\n                                { value: \"Doctor\", label: \"Doctor\" },\n                                { value: \"Payment\", label: \"Payment\" },\n                                { value: \"Pharmacy\", label: \"Pharmacy\" }\n\n                            ]}\n\n                            valueExtractor={(item) => item.value}\n                            listExtractor={(item) => item.label}\n\n                            displayValueExtractor={(item) => item.label}\n                            placeholder={this.state.serviceSelection}\n                            onSelectItem={(item, selectedValue) => {\n                                this.setState({ inputValue: selectedValue }, () => {\n                                    this.ddlService(selectedValue)\n\n                                });\n                            }} />\n\n                    </div>\n\n\n\n                    <br /><br />\n                    <div id='divButtonNextPatient' >\n\n\n                        <Button.Default className='buttonsuccess' style={{'display' : this.state.displayNextPatient}}\n                            onClick={() => this.consumeQueue(this.handle200, \"nextPatient\")}\n                        >Next Number</Button.Default>\n                        <p style={{ 'color': \"green\", 'fontSize': 30, 'display': this.state.elementNobodyInQueue }}>There is no one in the queue😄</p>\n                    </div>\n                    <div id='divCurrentCitizen' style={{ display: this.state.showCurrentCitizen }}>\n\n                        <Layout.GridContainer className=\"column2\">\n                            <div>\n                                <div className='spacer1'></div>\n\n                                <Text.H3>Currently Serving</Text.H3>\n\n                                <BoxContainer title=\"Citizen Information\" collapsible={false} className=\"textleft\" >\n                                    <div className=\"servicecountergrid\">\n                                        <Layout.GridContainer className=\"column4\">\n                                            <Text.Body weight=\"semibold\">NRIC</Text.Body>\n                                            <Text.Body weight=\"semibold\">Name</Text.Body>\n                                            <Text.Body weight=\"semibold\">Phone Number</Text.Body>\n                                            <Text.Body weight=\"semibold\">Email</Text.Body>\n                                            <Text.Body>{this.state.nric}</Text.Body>\n                                            <Text.Body>{this.state.citizenName}</Text.Body>\n                                            <Text.Body>{this.state.citizenNumber}</Text.Body>\n                                            <Text.Body>{this.state.citizenEmail}</Text.Body>\n                                        </Layout.GridContainer>\n                                    </div>\n                                </BoxContainer>\n\n\n                                <Text.Body>Next service: </Text.Body>\n\n\n                            </div>\n\n                        </Layout.GridContainer>\n\n                        <div style={{ display: this.state.showNextServiceHPB }}>\n\n                                <InputSelect\n                                    placeholder=\"Select\"\n                                    options={[\n                                        { value: \"Doctor\", label: \"Doctor\" },\n                                        { value: \"Missed Queue\", label: \"Missed Queue\" }\n\n                                    ]}\n                                    valueExtractor={(item) => item.value}\n                                    listExtractor={(item) => item.label}\n                                    displayValueExtractor={(item) => item.label}\n                                    onSelectItem={(item, selectedValue) => {\n\n                                        if (selectedValue != \"Missed Queue\") {\n                                            this.setState({\n                                                routingKey: \"sgh.doctor\"\n                                            })\n                                        }\n\n                                        this.setState({\n                                            nextServiceSelection: selectedValue,\n                                        })\n\n\n                                    }}\n                                />\n\n                        </div>\n\n                        <div style={{ display: this.state.showNextServiceHospitalDoctor }}>\n\n                                <InputSelect\n                                    placeholder=\"Select\"\n                                    options={[\n                                        { value: \"Payment\", label: \"Payment\" },\n                                        { value: \"Pharmacy\", label: \"Pharmacy\" },\n                                        { value: \"Missed Queue\", label: \"Missed Queue\" }\n\n                                    ]}\n                                    valueExtractor={(item) => item.value}\n                                    listExtractor={(item) => item.label}\n                                    displayValueExtractor={(item) => item.label}\n                                    onSelectItem={(item, selectedValue) => {\n                                        if (selectedValue == \"Payment\") {\n                                            this.setState({\n                                                routingKey: \"sgh.payment\"\n                                            })\n                                        }\n                                        else if (selectedValue == \"Pharmacy\") {\n                                            this.setState({\n                                                routingKey: \"sgh.pharmacy\"\n                                            })\n                                        }\n                                        else {\n                                        }\n                                        this.setState({\n                                            nextServiceSelection: selectedValue,\n                                        })\n                                    }}\n                                />\n\n                        </div>\n\n\n                        <div style={{ display: this.state.showNextServiceHospitalPayment }}>\n                                <InputSelect\n                                    placeholder=\"Select\"\n                                    options={[\n                                        { value: \"Pharmacy\", label: \"Pharmacy\" },\n                                        { value: \"Missed Queue\", label: \"Missed Queue\" }\n\n                                    ]}\n                                    valueExtractor={(item) => item.value}\n                                    listExtractor={(item) => item.label}\n                                    displayValueExtractor={(item) => item.label}\n                                    onSelectItem={(item, selectedValue) => {\n                                        if (selectedValue == \"Pharmacy\") {\n                                            this.setState({\n                                                routingKey: \"sgh.pharmacy\"\n                                            })\n                                        }\n                                        else {\n                                        }\n                                        this.setState({\n                                            nextServiceSelection: selectedValue,\n                                        })\n                                    }}\n                                />\n\n                        </div>\n\n\n                        <div style={{ display: this.state.showNextServiceHospitalPharmacy }}>\n\n                                <InputSelect\n                                    placeholder=\"Select\"\n                                    options={[\n                                        { value: \"Completed\", label: \"Completed\" },\n                                        { value: \"Missed Queue\", label: \"Missed Queue\" }\n\n                                    ]}\n                                    valueExtractor={(item) => item.value}\n                                    listExtractor={(item) => item.label}\n                                    displayValueExtractor={(item) => item.label}\n                                    onSelectItem={(item, selectedValue) => {\n                                        if (selectedValue == \"Missed Queue\") {\n                                        }\n                                        else{\n                                        }\n\n                                        this.setState({\n                                            nextServiceSelection: selectedValue,\n                                        })\n                                    }}\n                                />\n\n                        </div>\n\n                        <div className='spacer1'></div>\n\n\n                        <Button.Default\n                            onClick={() => this.consumeQueue(this.handle200, \"sendtoNextService\",\n                                this.state._bookingId,\n                                this.state.nric,\n                                this.state.citizenName,\n                                this.state.citizenSalutation,\n                                this.state.citizenEmail,\n                                this.state.citizenNumber,\n                                this.state.generalType,\n                                this.state.serviceName,\n                                this.state.serviceProviderName,\n                                this.state.serviceProviderEmail,\n                                this.state.serviceProviderPhone,\n                                this.state.serviceStartDate,\n                                this.state.serviceStartTime,\n                                this.state.serviceProviderLocation,\n                                this.state.bookingStatus,\n                                this.state.queueNumber\n\n\n                            )} \n\n                            style={{marginBottom: \"50px\"}}\n\n                        >Send to next service</Button.Default>\n\n                    </div>\n\n                </Layout.Container>\n            </StyledSection>\n        )\n    }\n    ddlAgency(selectedValue: any) {\n        // this.setState({\n        //     agencySelection: \"\",\n        //     serviceSelection: \"\"\n        // })\n   \n        if (selectedValue == \"HPB\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"block\",\n                showDIVHospitalservice: \"none\",\n                agencySelection: \"HPB\",\n                serviceSelection: \"communityHealth\",\n                queueName: \"communityHealthQueue\",\n                displayNextPatient: \"block\"\n            }, () => {\n                this.loadData();\n            }) \n\n        }\n        else {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"none\",\n                showDIVHospitalservice: \"block\",\n                agencySelection: \"Hospital\",\n                serviceSelection: \"Doctor\",\n                queueName: \"doctorQueue\",\n                displayNextPatient: \"block\"\n\n            }, () => {\n                this.loadData();\n            }) \n\n        }\n    }\n\n    ddlService(selectedValue: any) {\n\n        if (selectedValue == \"communityHealth\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"block\",\n                showDIVHospitalservice: \"none\",\n                serviceSelection: \"communityHealth\",\n                queueName: \"communityHealthQueue\",\n                displayNextPatient: \"block\"\n\n            }, () => {\n                this.loadData();\n            }) \n\n            // this.loadData()\n        }\n        if (selectedValue == \"workplaceHealth\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"block\",\n                showDIVHospitalservice: \"none\",\n                serviceSelection: \"workplaceHealth\",\n                queueName: \"workplaceHealthQueue\",\n                displayNextPatient: \"block\"\n\n            }, () => {\n                this.loadData();\n            }) \n\n        }\n        if (selectedValue == \"Doctor\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"none\",\n                showDIVHospitalservice: \"block\",\n                serviceSelection: \"Doctor\",\n                queueName: \"doctorQueue\",\n                displayNextPatient: \"block\"\n\n            }, () => {\n                this.loadData();\n            }) \n\n        }\n        if (selectedValue == \"Payment\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"none\",\n                showDIVHospitalservice: \"block\",\n                serviceSelection: \"Payment\",\n                queueName: \"paymentQueue\",\n                displayNextPatient: \"block\"\n\n            }, () => {\n                this.loadData();\n            }) \n\n        }\n        if (selectedValue == \"Pharmacy\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"none\",\n                showDIVHospitalservice: \"block\",\n                serviceSelection: \"Pharmacy\",\n                queueName: \"pharmacyQueue\",\n                displayNextPatient: \"block\"\n\n            }, () => {\n                this.loadData();\n            }) \n\n        }\n    }\n\n\n    handle200(response) {\n        console.log('handle200 has received:', response);\n    }\n\n\n\n    consumeQueue(callback, buttonSelected: string,\n        bookingId?: string,\n        nric?: string,\n        citizenName?: string,\n        citizenSalutation?: string,\n        citizenEmail?: string,\n        citizenNumber?: string,\n        generalType?: string,\n        serviceName?: string,\n        serviceProviderName?: string,\n        serviceProviderEmail?: string,\n        serviceProviderPhone?: string,\n        serviceStartDate?: string,\n        serviceStartTime?: string,\n        serviceProviderLocation?: string,\n        bookingStatus?: string,\n        queueNumber?:string\n    ) {\n\n        var respectiveURL = \"\"\n        if (buttonSelected == \"nextPatient\") {\n            respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=\" + this.state.queueName\n        }\n        if (buttonSelected == \"sendtoNextService\" && this.state.nextServiceSelection != \"Completed\" && this.state.nextServiceSelection != \"Missed Queue\") {\n\n\n            const queueObject = {\n                \"Id\": bookingId,\n                \"Nric\": nric,\n                \"CitizenName\": citizenName,\n                \"CitizenSalutation\": citizenSalutation,\n                \"CitizenEmail\": citizenEmail,\n                \"CitizenNumber\": citizenNumber,\n\n                \"GeneralType\": generalType,\n                \"ServiceName\": serviceName,\n                \"ServiceProviderName\": serviceProviderName,\n                \"ServiceProviderEmail\": serviceProviderEmail,\n                \"ServiceProviderPhone\": serviceProviderPhone,\n                \"ServiceStartDate\": serviceStartDate,\n                \"ServiceStartTime\": serviceStartTime,\n                \"ServiceProviderLocation\": serviceProviderLocation,\n                \"BookingStatus\": bookingStatus,\n                \"QueueNumber\": queueNumber\n            }\n\n\n            var myJSON = encodeURI(JSON.stringify(queueObject));\n            respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId!!.toString() + \"&exchangeID=master&bindingKey=\" + this.state.routingKey + \"&bookingDetails=\" + myJSON;\n        }\n\n\n\n\n        const xhr = new XMLHttpRequest(),\n            method = \"GET\",\n            url = respectiveURL;\n        // initialize a new GET request\n        xhr.open(method, url, true);\n        // xhr.onload = function (e) {\n        // respond to every readyState change\n        xhr.onreadystatechange = () => {\n            // ignore all readyStates other than \"DONE\"\n            if (xhr.readyState !== XMLHttpRequest.DONE) {\n                return;\n            }\n\n            // call the callback with status\n            if (xhr.status === 200) {\n                if(xhr.responseText == \"no messages\"){\n                    this.setState({\n                        elementNobodyInQueue: \"block\"\n                    })\n                    return;\n                }\n                var calledBooking: Booking;\n                if (buttonSelected == \"nextPatient\") {\n                    this.setState({\n                        _bookingId: JSON.parse(xhr.responseText).Id,\n                        nric: JSON.parse(xhr.responseText).Nric,\n                        citizenName: JSON.parse(xhr.responseText).CitizenName,\n                        citizenEmail: JSON.parse(xhr.responseText).CitizenEmail,\n                        citizenNumber: JSON.parse(xhr.responseText).CitizenNumber,\n                        citizenSalutation: JSON.parse(xhr.responseText).CitizenSalutation,\n                        generalType: JSON.parse(xhr.responseText).GeneralType,\n\n                        serviceName: JSON.parse(xhr.responseText).ServiceName,\n\n                        serviceProviderEmail: JSON.parse(xhr.responseText).ServiceProviderEmail,\n                        serviceProviderName: JSON.parse(xhr.responseText).ServiceProviderName,\n                        serviceStartDate: JSON.parse(xhr.responseText).ServiceStartDate,\n                        serviceProviderPhone: JSON.parse(xhr.responseText).ServiceProviderPhone,\n                        serviceStartTime: JSON.parse(xhr.responseText).ServiceStartTime,\n                        serviceProviderLocation: JSON.parse(xhr.responseText).ServiceProviderLocation,\n                        bookingStatus: JSON.parse(xhr.responseText).BookingStatus,\n                        queueNumber : JSON.parse(xhr.responseText).QueueNumber,\n                        elementNobodyInQueue: \"none\",\n                        showCurrentCitizen: \"block\"\n                    })\n                \n                    if (this.state.agencySelection == \"HPB\") {\n                        this.setState({\n                            showNextServiceHospitalDoctor: \"none\",\n                            showNextServiceHospitalPharmacy: \"none\",\n                            showNextServiceHospitalPayment: \"none\",\n                            showNextServiceHPB: \"block\",\n                        })\n                    }\n                    else {\n\n                        \n                        this.setState({\n                            showNextServiceHospitalDoctor: \"none\",\n                            showNextServiceHospitalPharmacy: \"none\",\n                            showNextServiceHospitalPayment: \"none\",\n                            showNextServiceHPB: \"none\",\n                        })\n\n                        if(this.state.serviceSelection == \"Doctor\"){\n                            this.setState({\n                                showNextServiceHospitalDoctor: \"block\",\n                                showNextServiceHospitalPharmacy: \"none\",\n                                showNextServiceHospitalPayment: \"none\",\n                                showNextServiceHPB: \"none\"\n                            })\n                        }\n\n                        else if(this.state.serviceSelection == \"Payment\"){\n                            this.setState({\n                                showNextServiceHospitalDoctor: \"none\",\n                                showNextServiceHospitalPharmacy: \"none\",\n                                showNextServiceHospitalPayment: \"block\",\n                                showNextServiceHPB: \"none\"\n                            })\n                        }\n\n                        else{\n                            this.setState({\n                                showNextServiceHospitalDoctor: \"none\",\n                                showNextServiceHospitalPharmacy: \"block\",\n                                showNextServiceHospitalPayment: \"none\",\n                                showNextServiceHPB: \"none\"\n                            })\n                        }\n                    }\n\n                    calledBooking = new Booking(this.state._bookingId, this.state.nric, this.state.citizenName, this.state.citizenSalutation, this.state.citizenEmail, this.state.citizenNumber, this.state.generalType, this.state.serviceName, this.state.serviceProviderName, this.state.serviceProviderEmail, this.state.serviceProviderPhone, this.state.serviceStartDate, this.state.serviceStartTime, this.state.serviceProviderLocation, this.state.bookingStatus, this.state.queueNumber);\n\n                    document.getElementById(\"divCurrentCitizen\")!!.style.display = \"block\";\n                    document.getElementById(\"divButtonNextPatient\")!!.style.display = \"none\";\n                    calledBooking.BookingStatus = this.state.serviceSelection + \"-Calling\"\n\n\n                    BaseService.update<Booking>(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + \"api/booking/update/\", this.state._bookingId, calledBooking).then(\n\n                        (rp) => {\n                            if (rp.Status) {\n                                console.log('Booking saved.');\n                            } else {\n                                console.log(rp.Messages);\n                                console.log(\"Messages: \" + rp.Messages);\n                                console.log(\"Exception: \" + rp.Exception);\n                            }\n                        }\n                    );\n\n\n\n                }\n\n                if (buttonSelected == \"sendtoNextService\") {\n                    this.setState({\n                        showModal: true\n                    });\n\n                    calledBooking = new Booking(this.state._bookingId, this.state.nric, this.state.citizenName, this.state.citizenSalutation, this.state.citizenEmail, this.state.citizenNumber, this.state.generalType, this.state.serviceName, this.state.serviceProviderName, this.state.serviceProviderEmail, this.state.serviceProviderPhone, this.state.serviceStartDate, this.state.serviceStartTime, this.state.serviceProviderLocation, this.state.bookingStatus, this.state.queueNumber);\n\n                    \n                    document.getElementById(\"divCurrentCitizen\")!!.style.display = \"none\";\n                    document.getElementById(\"divButtonNextPatient\")!!.style.display = \"block\";\n\n\n\n\n                    if (this.state.nextServiceSelection == \"Missed Queue\") {\n                        calledBooking.BookingStatus = this.state.serviceSelection + \"-Missed\"\n                    }\n\n                    else if (this.state.nextServiceSelection == \"Completed\") {\n                        calledBooking.BookingStatus = \"Completed\"\n                    }\n                    else if (this.state.nextServiceSelection != this.state.serviceSelection && this.state.nextServiceSelection != \"Missed Queue\" && this.state.nextServiceSelection != \"Completed\") {\n                        calledBooking.BookingStatus = this.state.nextServiceSelection + \"-Queued\"\n\n                    }\n                    else{\n                        calledBooking.BookingStatus = this.state.serviceSelection + \"-Calling\"\n                    }\n\n                    BaseService.update<Booking>(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + \"api/booking/update/\", this.state._bookingId, calledBooking).then(\n\n                        (rp) => {\n                            if (rp.Status) {\n                                console.log('Booking saved.');\n                            } else {\n                                console.log(rp.Messages);\n                                console.log(\"Messages: \" + rp.Messages);\n                                console.log(\"Exception: \" + rp.Exception);\n                            }\n                        }\n                    );\n\n                }\n\n\n\n\n                return callback(xhr.status);\n            }\n\n            // got something other than 200,\n            // re-initialize and send another GET request\n            xhr.open(method, url, true);\n            xhr.send();\n        }\n        \n        // send the initial GET request\n        xhr.send();\n\n    \n    }\n\n\n}\n\nexport default ServiceCounter;\nfunction typeOf(responseText: string): any {\n    throw new Error('Function not implemented.');\n}\n\n"]},"metadata":{},"sourceType":"module"}