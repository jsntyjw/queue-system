{"ast":null,"code":"var _jsxFileName = \"/Users/lowqilong/Desktop/FYP/queue-system/frontend/src/common/components/form/input.tsx\";\nimport * as React from \"react\";\nimport { Form } from \"react-lifesg-design-system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Input = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: formatWrapperClass(props),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.name,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: /*#__PURE__*/_jsxDEV(Form.Field, {\n        type: \"text\",\n        defaultValue: props.defaultValue,\n        name: props.name,\n        className: \"form-control\",\n        placeholder: props.placeholder,\n        value: props.value,\n        disabled: props.disabled,\n        onChange: onChangeInput(props)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help-block\",\n      children: props.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = Input;\n\nconst formatWrapperClass = props => {\n  const wrapperClass = 'form-group';\n  return props.error ? `${wrapperClass} has-error` : wrapperClass;\n};\n\nconst onChangeInput = props => e => {\n  props.onChange(e.target.name, e.target.value);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/lowqilong/Desktop/FYP/queue-system/frontend/src/common/components/form/input.tsx"],"names":["React","Form","Input","props","formatWrapperClass","name","label","defaultValue","placeholder","value","disabled","onChangeInput","error","wrapperClass","e","onChange","target"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,4BAArB;;AAcA,OAAO,MAAMC,KAAqC,GAAIC,KAAD,IAAW;AAC9D,sBACE;AAAK,IAAA,SAAS,EAAEC,kBAAkB,CAACD,KAAD,CAAlC;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEA,KAAK,CAACE,IAAtB;AAAA,gBAA6BF,KAAK,CAACG;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,IAAI,EAAC,MAAjB;AACA,QAAA,YAAY,EAAEH,KAAK,CAACI,YADpB;AAEE,QAAA,IAAI,EAAEJ,KAAK,CAACE,IAFd;AAGE,QAAA,SAAS,EAAC,cAHZ;AAIE,QAAA,WAAW,EAAEF,KAAK,CAACK,WAJrB;AAKE,QAAA,KAAK,EAAEL,KAAK,CAACM,KALf;AAME,QAAA,QAAQ,EAAEN,KAAK,CAACO,QANlB;AAQE,QAAA,QAAQ,EAAEC,aAAa,CAACR,KAAD;AARzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAcE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BA,KAAK,CAACS;AAAnC;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnBM;KAAMV,K;;AAqBb,MAAME,kBAAkB,GAAID,KAAD,IAAkB;AAC3C,QAAMU,YAAY,GAAG,YAArB;AAEA,SAAOV,KAAK,CAACS,KAAN,GACJ,GAAEC,YAAa,YADX,GAELA,YAFF;AAGD,CAND;;AAQA,MAAMF,aAAa,GAAIR,KAAD,IAAmBW,CAAD,IAA4C;AAClFX,EAAAA,KAAK,CAACY,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASX,IAAxB,EAA8BS,CAAC,CAACE,MAAF,CAASP,KAAvC;AACD,CAFD","sourcesContent":["import * as React from \"react\";\nimport { Form } from \"react-lifesg-design-system\";\n\ninterface Props {\n  name: string;\n  label: string;\n  placeholder?: string;\n  value: string;\n  onChange: (fieldName: string, value: string) => void;\n  error?: string;\n  defaultValue : string;\n  disabled? :boolean\n  \n}\n\nexport const Input: React.FunctionComponent<Props> = (props) => {\n  return (\n    <div className={formatWrapperClass(props)}>\n      <label htmlFor={props.name}>{props.label}</label>\n      <div className=\"field\">\n        <Form.Field type=\"text\"\n        defaultValue={props.defaultValue}\n          name={props.name}\n          className=\"form-control\"\n          placeholder={props.placeholder}\n          value={props.value}\n          disabled={props.disabled}\n          \n          onChange={onChangeInput(props)}\n        />\n      </div>\n      <div className=\"help-block\">{props.error}</div>\n    </div>\n  )\n};\n\nconst formatWrapperClass = (props: Props) => {\n  const wrapperClass = 'form-group';\n\n  return props.error ?\n    `${wrapperClass} has-error` :\n    wrapperClass;\n};\n\nconst onChangeInput = (props: Props) => (e: React.ChangeEvent<HTMLInputElement>) => { \n  props.onChange(e.target.name, e.target.value);\n};\n"]},"metadata":{},"sourceType":"module"}