{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/ServiceCounter.tsx\";\nimport React from 'react';\nimport '../App.css';\nimport { Text, Button, Layout, Breadcrumb, BoxContainer, InputSelect } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\nvar queueObject;\n\nclass ServiceCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nric: \"\",\n      name: \"\",\n      phone: \"\",\n      email: \"\"\n    };\n    this.consumeQueue = this.consumeQueue.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(StyledSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Layout.Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      links: [{\n        title: 'Home',\n        url: 'http://localhost:3000/ServiceCounter'\n      }, {\n        title: 'Service Counter'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divButtonNextPatient\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button.Default, {\n      className: \"buttonsuccess\",\n      onClick: () => this.consumeQueue(this.handle200, \"nextPatient\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, \"Next Patient\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divCurrentCitizen\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Layout.GridContainer, {\n      className: \"column2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Text.H3, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }, \"Currently Serving\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(BoxContainer, {\n      title: \"Citizen Information\",\n      collapsible: false,\n      className: \"textleft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: \"2rem\",\n        minWidth: \"1080px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Layout.GridContainer, {\n      className: \"column4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 45\n      }\n    }, \"NRIC\"), /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 45\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 45\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 45\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 45\n      }\n    }, this.state.nric), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 45\n      }\n    }, this.state.name), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 45\n      }\n    }, this.state.phone), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 45\n      }\n    }, this.state.email)))), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, \"Next service: \"))), /*#__PURE__*/React.createElement(Layout.GridContainer, {\n      className: \"column4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputSelect, {\n      placeholder: \"Select\",\n      options: [{\n        value: \"Payment\",\n        label: \"Payment\"\n      }, {\n        value: \"Medication\",\n        label: \"Medication\"\n      }],\n      valueExtractor: item => item.value,\n      listExtractor: item => item.label,\n      displayValueExtractor: item => item.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button.Default, {\n      onClick: () => this.consumeQueue(this.handle200, \"sendToNextService\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, \"Send to next service\"))));\n  }\n\n  handle200(response) {\n    console.log('handle200 has received:', response);\n  }\n\n  consumeQueue(callback, buttonSelected, bookingId, nric, citizenName, citizenEmail, citizenNumber) {\n    var respectiveURL = \"\";\n\n    if (buttonSelected == \"nextPatient\") {\n      document.getElementById(\"divCurrentCitizen\").style.display = \"block\";\n      document.getElementById(\"divButtonNextPatient\").style.display = \"none\";\n      respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=doctorQueue\";\n    } else {\n      const queueObject = {\n        \"_id\": bookingId,\n        \"nric\": nric,\n        \"citizenName\": citizenName,\n        \"citizenEmail\": citizenEmail,\n        \"citizenNumber\": citizenNumber\n      };\n      var myJSON = encodeURI(JSON.stringify(queueObject));\n      document.getElementById(\"divCurrentCitizen\").style.display = \"none\";\n      document.getElementById(\"divButtonNextPatient\").style.display = \"block\";\n      respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=booking001&exchangeID=hospital&bindingKey=doctor&bookingDetails=\" + myJSON;\n    }\n\n    const xhr = new XMLHttpRequest(),\n          method = \"GET\",\n          url = respectiveURL; // initialize a new GET request\n\n    xhr.open(method, url, true); // respond to every readyState change\n\n    xhr.onreadystatechange = function () {\n      // ignore all readyStates other than \"DONE\"\n      if (xhr.readyState !== XMLHttpRequest.DONE) {\n        return;\n      } // call the callback with status\n\n\n      if (xhr.status === 200) {\n        console.log(xhr.responseText); // this.setState({nric: })\n\n        foundResult(JSON.parse(xhr.responseText)._id, JSON.parse(xhr.responseText).nric, JSON.parse(xhr.responseText).phone, JSON.parse(xhr.responseText).email, JSON.parse(xhr.responseText).name);\n        console.log(JSON.parse(xhr.responseText).nric);\n        return callback(xhr.status);\n      } // got something other than 200,\n      // re-initialize and send another GET request\n\n\n      xhr.open(method, url, true);\n      xhr.send();\n    }; // send the initial GET request\n\n\n    xhr.send();\n  }\n\n  updateInfo(result) {\n    console.log(result);\n    this.setState({\n      nric: queueObject.nric\n    });\n  }\n\n}\n\nexport default ServiceCounter;\n\nfunction foundResult(_id, nric, phone, email, name) {\n  queueObject = {\n    \"_id\": _id,\n    \"nric\": nric,\n    \"citizenName\": name,\n    \"citizenEmail\": email,\n    \"citizenNumber\": phone\n  };\n  console.log(queueObject);\n}","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/ServiceCounter.tsx"],"names":["React","Text","Button","Layout","Breadcrumb","BoxContainer","InputSelect","styled","StyledSection","Section","queueObject","ServiceCounter","Component","constructor","props","state","nric","name","phone","email","consumeQueue","bind","render","title","url","handle200","display","padding","minWidth","value","label","item","response","console","log","callback","buttonSelected","bookingId","citizenName","citizenEmail","citizenNumber","respectiveURL","document","getElementById","style","myJSON","encodeURI","JSON","stringify","xhr","XMLHttpRequest","method","open","onreadystatechange","readyState","DONE","status","responseText","foundResult","parse","_id","send","updateInfo","result","setState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport {\n    Text,\n    Button,\n    Layout,\n    Breadcrumb,\n    BoxContainer,\n    InputSelect\n} from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\n\ninterface Props {\n    onChange: (fieldName: string, value: string) => void;\n    onSave: () => void;\n}\n\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n\ninterface MyState {\n    nric: string,\n    name: string,\n    phone: string,\n    email: string\n}\n\nvar queueObject : object;\n\nclass ServiceCounter extends React.Component<{}, MyState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nric: \"\",\n            name: \"\",\n            phone: \"\",\n            email: \"\"\n        };\n\n        this.consumeQueue = this.consumeQueue.bind(this)\n\n    }\n\n    render() {\n        return (\n            <StyledSection>\n                <Layout.Container>\n                    <Breadcrumb links={[{ title: 'Home', url: 'http://localhost:3000/ServiceCounter' }, { title: 'Service Counter' }]} />\n\n                    <div id='divButtonNextPatient'>\n\n\n                        <Button.Default className='buttonsuccess'\n                            onClick={() => this.consumeQueue(this.handle200, \"nextPatient\")}\n                        >Next Patient</Button.Default>\n\n                    </div>\n                    <div id='divCurrentCitizen' style={{ display: 'none' }}>\n\n                        <Layout.GridContainer className=\"column2\">\n                            <div>\n\n\n\n\n                                <div className='spacer1'></div>\n\n                                <Text.H3>Currently Serving</Text.H3>\n                                <div className='spacer1'></div>\n                                <div className='spacer1'></div>\n\n\n                                <BoxContainer title=\"Citizen Information\" collapsible={false} className=\"textleft\" >\n                                    <div style={{ padding: \"2rem\", minWidth: \"1080px\" }}>\n                                        <Layout.GridContainer className=\"column4\">\n                                            <Text.Body weight=\"semibold\">NRIC</Text.Body>\n                                            <Text.Body weight=\"semibold\">Name</Text.Body>\n                                            <Text.Body weight=\"semibold\">Phone Number</Text.Body>\n                                            <Text.Body weight=\"semibold\">Email</Text.Body>\n                                            <Text.Body>{this.state.nric}</Text.Body>\n                                            <Text.Body>{this.state.name}</Text.Body>\n                                            <Text.Body>{this.state.phone}</Text.Body>\n                                            <Text.Body>{this.state.email}</Text.Body>\n                                        </Layout.GridContainer>\n                                    </div>\n                                </BoxContainer>\n\n\n                                <Text.Body>Next service: </Text.Body>\n\n\n                            </div>\n\n                        </Layout.GridContainer>\n\n\n                        <Layout.GridContainer className=\"column4\">\n\n                            <InputSelect\n                                placeholder=\"Select\"\n                                options={[\n                                    { value: \"Payment\", label: \"Payment\" },\n                                    { value: \"Medication\", label: \"Medication\" }\n                                ]}\n                                valueExtractor={(item) => item.value}\n                                listExtractor={(item) => item.label}\n                                displayValueExtractor={(item) => item.label}\n                            />\n                        </Layout.GridContainer>\n\n\n                        <div className='spacer1'></div>\n\n\n                        <Button.Default\n                            onClick={() => this.consumeQueue(this.handle200, \"sendToNextService\")}\n                        >Send to next service</Button.Default>\n\n                    </div>\n\n                </Layout.Container>\n            </StyledSection>\n        )\n    }\n\n\n     handle200(response) {\n        console.log('handle200 has received:', response);\n    }\n    \n     consumeQueue(callback, buttonSelected: string, bookingId?: string, nric?: string, citizenName?: string, citizenEmail?: string, citizenNumber?: string) {\n    \n        var respectiveURL = \"\"\n        if (buttonSelected == \"nextPatient\") {\n            document.getElementById(\"divCurrentCitizen\")!!.style.display = \"block\";\n            document.getElementById(\"divButtonNextPatient\")!!.style.display = \"none\";\n            respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=doctorQueue\"\n            \n        }\n        else {\n    \n            const queueObject = {\n                \"_id\": bookingId,\n                \"nric\": nric,\n                \"citizenName\": citizenName,\n                \"citizenEmail\": citizenEmail,\n                \"citizenNumber\": citizenNumber\n            }\n    \n            var myJSON = encodeURI(JSON.stringify(queueObject));\n            document.getElementById(\"divCurrentCitizen\")!!.style.display = \"none\";\n            document.getElementById(\"divButtonNextPatient\")!!.style.display = \"block\";\n            respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=booking001&exchangeID=hospital&bindingKey=doctor&bookingDetails=\" + myJSON;\n    \n        }\n    \n    \n    \n        const xhr = new XMLHttpRequest(),\n            method = \"GET\",\n            url = respectiveURL;\n        // initialize a new GET request\n        xhr.open(method, url, true);\n    \n        // respond to every readyState change\n        xhr.onreadystatechange = function () {\n    \n            // ignore all readyStates other than \"DONE\"\n            if (xhr.readyState !== XMLHttpRequest.DONE) { return; }\n    \n            // call the callback with status\n            if (xhr.status === 200) {\n                console.log(xhr.responseText)\n    \n                // this.setState({nric: })\n\n                \n                foundResult(JSON.parse(xhr.responseText)._id, JSON.parse(xhr.responseText).nric,JSON.parse(xhr.responseText).phone,JSON.parse(xhr.responseText).email,JSON.parse(xhr.responseText).name);\n                \n    \n                console.log(JSON.parse(xhr.responseText).nric);\n    \n                return callback(xhr.status);\n            }\n    \n            // got something other than 200,\n            // re-initialize and send another GET request\n            xhr.open(method, url, true);\n            xhr.send();\n        }\n    \n        // send the initial GET request\n        xhr.send();\n    }\n\n    updateInfo(result : object){\n\n        console.log(result)\n        this.setState({\n            nric: queueObject.nric,\n\n        })\n    }\n}\n\nexport default ServiceCounter;\n\n\n\n\n\n\n\n\n\nfunction foundResult(_id: any, nric: any, phone: any, email: any, name: any)  {\n     queueObject = {\n        \"_id\" :_id,\n        \"nric\":nric,\n        \"citizenName\":name,\n        \"citizenEmail\":email,\n        \"citizenNumber\":phone\n    }\n\n    console.log(queueObject)\n}\n\n"]},"metadata":{},"sourceType":"module"}