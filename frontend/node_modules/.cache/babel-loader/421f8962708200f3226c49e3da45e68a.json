{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Appointments.tsx\";\nimport React from 'react';\nimport '../App.css';\nimport { Text, Button, Layout, Breadcrumb, InputGroup, Accordion, Modal } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nimport Booking from \"../models/booking\";\nimport { ModalContent } from \"../models/doc-elements\";\nconst StyledContainer = styled(Layout.GridContainer)`\n    grid-template-rows: 1fr;\n    grid-template-columns: 12fr;\n    grid-template-areas:\n        \"title\"\n        \"button \"\n        \"queue\";\n    grid-gap: 0.25rem;\n    grid-row-gap: 16px;\n`;\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\nconst Main = styled.main`\n  color: white;\n  grid-area: queue;\n  padding: 0.25rem;\n`;\nvar queueNumberArray = [];\n\nclass Appointment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookings: [],\n      inputValue: '',\n      clicked: 'none',\n      showModal: false,\n      showNRIC: 'block',\n      showLocation: 'none',\n      selected: 'A'\n    };\n    this.searchByLocation = this.searchByLocation.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n    setInterval(this.loadData, 10000);\n  }\n\n  async loadData() {\n    try {\n      this.searchByLocation(\"location\"); //   console.log(blocks.data)\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async searchByLocation(searchMethod) {\n    var apiURL;\n\n    if (searchMethod == \"location\") {\n      apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n      document.getElementById(\"divAppointments\").style.display = \"block\";\n    } else {\n      apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/citizen/' + this.state.inputValue;\n      console.log(\"test\" + \"---\" + this.state.inputValue); // if(this.state.inputValue == ''){\n      //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n      // }\n\n      document.getElementById(\"divAppointments\").style.display = \"block\";\n    }\n\n    fetch(apiURL + this.state.inputValue).then(function (response) {\n      return response.json();\n    }).then(myJson => {\n      this.state.bookings.length = 0;\n      myJson.data.forEach(element => {\n        var eachBooking = new Booking(element[\"_id\"], element[\"nric\"], element[\"citizenName\"], element[\"citizenSalutation\"], element[\"citizenEmail\"], element[\"citizenNumber\"], element[\"serviceName\"], element[\"serviceProviderName\"], element[\"serviceProviderEmail\"], element[\"serviceProviderPhone\"], element[\"serviceStartDate\"], element[\"serviceStartTime\"], element[\"serviceProviderLocation\"], element[\"bookingStatus\"], element[\"queueNumber\"]); // const bookings = this.state.bookings.slice(0);\n\n        this.state.bookings.push(eachBooking); // console.log(bookings)\n\n        this.setState({\n          bookings: this.state.bookings,\n          clicked: 'block'\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StyledSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Base, {\n      show: this.state.showModal,\n      animationFrom: \"bottom\",\n      enableOverlayClick: true // onOverlayClick={closeModal()}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Box, {\n      onClose: () => {\n        this.setState({\n          showModal: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ModalContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 33\n      }\n    }, \"Send to queue succesfully\")))), /*#__PURE__*/React.createElement(Layout.Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      links: [{\n        title: 'Home',\n        url: '/Home'\n      }, {\n        title: 'Appointments'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divNRIC\",\n      style: {\n        justifyItems: \"start\",\n        maxWidth: '400px',\n        display: this.state.showNRIC\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        'margin': '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, \"Search by NRIC: \")), /*#__PURE__*/React.createElement(InputGroup, {\n      addon: {\n        type: 'custom'\n      },\n      placeholder: \"Type NRIC here...\",\n      onChange: evt => this.updateInputValue(evt),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        'padding': '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button.Default, {\n      onClick: () => this.searchByLocation(\"NRIC\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 29\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divAppointments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(StyledContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Text.H3, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 29\n      }\n    }, \"Appointments for Tampines\"), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 29\n      }\n    }, \"Government services appointments\"), /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Base, {\n      className: \"base\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 33\n      }\n    }, this.state.bookings.map((input, index) => {\n      var showButton = 'none';\n\n      if (input.BookingStatus == 'New') {\n        showButton = 'block';\n      }\n\n      console.log(this.state.bookings);\n      return /*#__PURE__*/React.createElement(Accordion.Item, {\n        title: input.ServiceName,\n        key: index,\n        expanded: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Text.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 61\n        }\n      }, \"Citizen Name :\"), \"  \", input.CitizenName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 61\n        }\n      }, \"Citizen Number: \"), \" \", input.CitizenNumber), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 61\n        }\n      }, \"Citizen Email: \"), \" \", input.CitizenEmail), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 61\n        }\n      }, \"Service start date:\"), \"  \", input.ServiceStartDate), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 61\n        }\n      }, \"Service start time:\"), \"  \", input.ServiceStartTime), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 61\n        }\n      }, \"Service Name:\"), \"  \", input.ServiceName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 61\n        }\n      }, \"Service Provider Location:\"), \"  \", input.ServiceProviderLocation), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 61\n        }\n      }, \"Service Status:\"), \"  \", input.BookingStatus)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          'display': showButton\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Button.Default, {\n        onClick: () => this.checkPage(this.handle200, input.Id, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 53\n        }\n      }, \"Send to Queue\"))));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 29\n      }\n    }))))));\n  }\n\n  handle200(response) {\n    console.log('handle200 has received:', response);\n  }\n\n  checkPage(callback, bookingId, nric, citizenName, citizenEmail, citizenNumber, booking) {\n    this.state.bookings.forEach(element => queueNumberArray.push(Number(element.QueueNumber.slice(1))));\n    console.log(\"test!!\" + queueNumberArray);\n    var num = Math.max.apply(null, queueNumberArray) + 1;\n    console.log(num);\n    var str = String(num);\n\n    while (str.length < 4) str = \"0\" + str;\n\n    str = \"H\" + str;\n    booking.QueueNumber = str;\n    console.log(str);\n    const queueObject = {\n      \"_id\": bookingId,\n      \"nric\": nric,\n      \"citizenName\": citizenName,\n      \"citizenEmail\": citizenEmail,\n      \"citizenNumber\": booking.CitizenNumber,\n      \"citizenSalutation\": booking.CitizenSalutation,\n      \"serviceName\": booking.ServiceName,\n      \"serviceProviderEmail\": booking.ServiceProviderEmail,\n      \"serviceProviderName\": booking.ServiceProviderName,\n      \"serviceStartDate\": booking.ServiceStartDate,\n      \"serviceProviderPhone\": booking.ServiceProviderPhone,\n      \"serviceStartTime\": booking.ServiceStartTime,\n      \"serviceProviderLocation\": booking.ServiceProviderLocation,\n      \"bookingStatus\": booking.BookingStatus,\n      \"queueNumber\": str\n    };\n    const myJSON = encodeURI(JSON.stringify(queueObject));\n    const xhr = new XMLHttpRequest(),\n          method = \"GET\",\n          url = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId + \"&exchangeID=hospital&bindingKey=doctor&bookingDetails=\" + myJSON; // initialize a new GET request\n\n    xhr.open(method, url, true); // respond to every readyState change\n\n    xhr.onreadystatechange = () => {\n      // ignore all readyStates other than \"DONE\"\n      if (xhr.readyState !== XMLHttpRequest.DONE) {\n        return;\n      } // call the callback with status\n\n\n      if (xhr.status === 200) {\n        this.setState({\n          showModal: true\n        });\n        return callback(xhr.status);\n      } // got something other than 200,\n      // re-initialize and send another GET request\n\n\n      xhr.open(method, url, true);\n      xhr.send();\n    }; // send the initial GET request\n\n\n    xhr.send();\n  }\n\n  updateInputValue(evt) {\n    const val = evt.target.value;\n    this.setState({\n      inputValue: val\n    });\n  }\n\n}\n\nexport default Appointment;\n\nvar pad = function (num) {\n  var str = String(num++);\n\n  while (str.length < 4) str = \"0\" + str;\n\n  return str;\n}; // function closeModalFn(): (() => void) | undefined { \n//     throw new Error('Function not implemented.');\n// }\n// const [show, setShow ] = useState(false)\n// function closeModal(): (() => void) | undefined {\n//     document.getElementById(\"divModal\")!!.style.display = \"none\";\n//     throw new Error('Function not implemented.');\n// }\n// call checkPage once","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Appointments.tsx"],"names":["React","Text","Button","Layout","Breadcrumb","InputGroup","Accordion","Modal","styled","Booking","ModalContent","StyledContainer","GridContainer","StyledSection","Section","Main","main","queueNumberArray","Appointment","Component","constructor","props","state","bookings","inputValue","clicked","showModal","showNRIC","showLocation","selected","searchByLocation","bind","componentDidMount","loadData","setInterval","e","console","log","searchMethod","apiURL","process","env","REACT_APP_MY_EC2_API_ADDRESS","document","getElementById","style","display","fetch","then","response","json","myJson","length","data","forEach","element","eachBooking","push","setState","render","title","url","justifyItems","maxWidth","type","evt","updateInputValue","map","input","index","showButton","BookingStatus","ServiceName","CitizenName","CitizenNumber","CitizenEmail","ServiceStartDate","ServiceStartTime","ServiceProviderLocation","checkPage","handle200","Id","Nric","callback","bookingId","nric","citizenName","citizenEmail","citizenNumber","booking","Number","QueueNumber","slice","num","Math","max","apply","str","String","queueObject","CitizenSalutation","ServiceProviderEmail","ServiceProviderName","ServiceProviderPhone","myJSON","encodeURI","JSON","stringify","xhr","XMLHttpRequest","method","open","onreadystatechange","readyState","DONE","status","send","val","target","value","pad"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../App.css';\nimport { Text, Button, Layout, BoxContainer, Breadcrumb, InputGroup, Accordion, InputSelect, Modal, RadioButton, } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nimport Booking from \"../models/booking\";\n\nimport { Container, Label, ModalContent, OptionContainer } from \"../models/doc-elements\";\nimport BaseService from '../service/base.service';\n\n\nconst StyledContainer = styled(Layout.GridContainer)`\n    grid-template-rows: 1fr;\n    grid-template-columns: 12fr;\n    grid-template-areas:\n        \"title\"\n        \"button \"\n        \"queue\";\n    grid-gap: 0.25rem;\n    grid-row-gap: 16px;\n`;\n\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n\nconst Main = styled.main`\n  color: white;\n  grid-area: queue;\n  padding: 0.25rem;\n`;\n\ninterface MyState {\n    bookings: Booking[],\n    inputValue: string,\n    clicked: string,\n    showModal: boolean,\n    showNRIC: string,\n    showLocation: string,\n    selected: string\n}\n\nvar queueNumberArray : number[] = [];\n\n\n\n\n\nclass Appointment extends React.Component<{}, MyState> {\n\n    \n\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            inputValue: '',\n            clicked: 'none',\n            showModal: false,\n            showNRIC: 'block',\n            showLocation: 'none',\n            selected: 'A'\n\n        };\n        this.searchByLocation = this.searchByLocation.bind(this)\n    }\n\n\n    componentDidMount() {\n        this.loadData();\n        setInterval(this.loadData, 10000);\n      }\n\n      async loadData() {\n        try {\n         this.searchByLocation(\"location\")\n\n        //   console.log(blocks.data)\n        } catch (e) {\n          console.log(e);\n        }\n      }\n\n    public async searchByLocation(searchMethod: string) {\n\n        var apiURL: string\n        if (searchMethod == \"location\") {\n            apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n            document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n\n        }\n        else {\n            apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/citizen/' + this.state.inputValue;\n            console.log(\"test\" + \"---\" + this.state.inputValue)\n            // if(this.state.inputValue == ''){\n            //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n            // }\n            document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n\n        }\n\n        fetch(apiURL + this.state.inputValue)\n            .then(function (response) {\n                \n                return response.json();\n            })\n            .then((myJson) => {\n                this.state.bookings.length = 0;\n                myJson.data.forEach(element => {\n                    var eachBooking = new Booking(\n                        element[\"_id\"],\n                        element[\"nric\"],\n                        element[\"citizenName\"],\n                        element[\"citizenSalutation\"],\n                        element[\"citizenEmail\"],\n                        element[\"citizenNumber\"],\n                        element[\"serviceName\"],\n                        element[\"serviceProviderName\"],\n                        element[\"serviceProviderEmail\"],\n                        element[\"serviceProviderPhone\"],\n                        element[\"serviceStartDate\"],\n                        element[\"serviceStartTime\"],\n                        element[\"serviceProviderLocation\"],\n                        element[\"bookingStatus\"],\n                        element[\"queueNumber\"]\n                    );\n\n                    \n                    // const bookings = this.state.bookings.slice(0);\n                    this.state.bookings.push(eachBooking)\n\n                    \n                    // console.log(bookings)\n\n                    this.setState({\n                        bookings: this.state.bookings,\n                        clicked: 'block'\n                    });\n\n                });\n            });\n    }\n\n    render() {\n\n\n        return (\n\n            <div>\n\n\n\n                <StyledSection>\n\n                    <Modal.Base\n                        show={this.state.showModal}\n                        animationFrom=\"bottom\"\n                        enableOverlayClick={true}\n                    // onOverlayClick={closeModal()}\n                    >\n                        <Modal.Box onClose={() => {\n\n                            this.setState({\n                                showModal: false\n                            });\n\n\n\n                        }}>\n                            <ModalContent>\n                                <span>Send to queue succesfully</span>\n                            </ModalContent>\n                        </Modal.Box>\n                    </Modal.Base>\n\n                    <Layout.Container>\n\n\n\n                        <Breadcrumb links={[{ title: 'Home', url: '/Home' }, { title: 'Appointments' }]} />\n\n                        {/* <Container>\n                            <OptionContainer>\n                                <RadioButton value=\"A\" id=\"multiple-options-a\" name=\"multiple-options\" onChange={() => {\n                                    this.setState({\n                                        selected: 'A',\n                                        showNRIC: 'block',\n                                        showLocation: 'none'\n                                    }\n\n                                    );\n                                }} checked={this.state.selected === \"A\"} />\n                                <Label htmlFor=\"multiple-options-a\">View appointments by NRIC</Label>\n                            </OptionContainer>\n                            <OptionContainer>\n                                <RadioButton value=\"B\" id=\"multiple-options-b\" name=\"multiple-options\" onChange={() => {\n                                    this.setState({\n                                        selected: 'B',\n                                        showLocation: 'block',\n                                        showNRIC: 'none'\n                                    });\n                                }} checked={this.state.selected === \"B\"} />\n                                <Label htmlFor=\"multiple-options-b\">View appointments by Location</Label>\n                            </OptionContainer>\n                        </Container> */}\n\n                        {/* <div className=\"spacer2\"></div> */}\n\n                        <div id='divNRIC' style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showNRIC }}>\n                            <div style={{'margin' : '5px'}}>\n                            <Text.Body >Search by NRIC: </Text.Body>\n                            </div>\n                            <InputGroup addon={{\n                                type: 'custom'\n                            }} placeholder=\"Type NRIC here...\"\n                                \n                                onChange={evt => this.updateInputValue(evt)}\n                            />\n\n                            <div style={{'padding' : '5px'}}></div>\n                            <Button.Default onClick={() => this.searchByLocation(\"NRIC\")} >Search</Button.Default>\n                        </div>\n\n                        {/* <div id='divLocation' className=\"inlinecontent\" style={{ justifyItems: \"start\",maxWidth: '400px', display: this.state.showLocation }}>\n                            <InputSelect\n                                options={[\n                                    { value: \"Tampines\", label: \"Tampines\" },\n                                    { value: \"Woodlands\", label: \"Woodlands\" },\n                                    { value: \"Toa Payoh\", label: \"Toa Payoh\" },\n                                    { value: \"Punggol\", label: \"Punggol\" },\n                                ]}\n                                \n                                valueExtractor={(item) => item.value}\n                                listExtractor={(item) => item.label}\n                                displayValueExtractor={(item) => item.label}\n                                placeholder=\"Select a location\"\n                                onSelectItem={(item, selectedValue) => {\n                                    this.setState({ inputValue: selectedValue }, () => {\n                                        this.searchByLocation('location')\n                                    });\n                                }} />\n\n                        </div>\n                        <div className=\"spacer2\"></div> */}\n                        {/* <div id=\"outsideCitizenInfoDiv\" style={{ display: 'none' }}>\n                            <BoxContainer title=\"Citizen Information\" collapsible={false} className=\"textleft\" >\n                                <div style={{ padding: \"2rem\", minWidth: \"1080px\" }}>\n                                    <Layout.GridContainer className=\"column4\">\n                                        <Text.Body weight=\"semibold\">NRIC</Text.Body>\n                                        <Text.Body weight=\"semibold\">Name</Text.Body>\n                                        <Text.Body weight=\"semibold\">Phone Number</Text.Body>\n                                        <Text.Body weight=\"semibold\">Email</Text.Body>\n                                        <Text.Body>{this.state.bookings[0]?.Nric}</Text.Body>\n                                        <Text.Body>{this.state.bookings[0]?.CitizenName}</Text.Body>\n                                        <Text.Body>{this.state.bookings[0]?.CitizenNumber}</Text.Body>\n                                        <Text.Body>{this.state.bookings[0]?.CitizenEmail}</Text.Body>\n                                    </Layout.GridContainer>\n                                </div>\n                            </BoxContainer>\n                        </div> */}\n\n                        <div className=\"spacer5\"></div>\n\n                        <div id='divAppointments' >\n\n                        {/* <div id='divLocation' className=\"inlinecontent\" style={{ justifyItems: \"start\",maxWidth: '400px', alignContent:'right', display: this.state.showLocation }}>\n                            <InputSelect\n                                options={[\n                                    { value: \"Tampines\", label: \"Tampines\" },\n                                    { value: \"Woodlands\", label: \"Woodlands\" },\n                                    { value: \"Toa Payoh\", label: \"Toa Payoh\" },\n                                    { value: \"Punggol\", label: \"Punggol\" },\n                                ]}\n                                \n                                valueExtractor={(item) => item.value}\n                                listExtractor={(item) => item.label}\n                                displayValueExtractor={(item) => item.label}\n                                placeholder=\"Select a location\"\n                                onSelectItem={(item, selectedValue) => {\n                                    this.setState({ inputValue: selectedValue }, () => {\n                                        this.searchByLocation('location')\n                                    });\n                                }} />\n\n                        </div> */}\n                        <StyledContainer>\n                            <Text.H3>Appointments for Tampines</Text.H3>\n                            <Text.Body>Government services appointments</Text.Body>\n                            <Main>\n\n                           \n\n\n                                <Accordion.Base className='base' >\n                                    {this.state.bookings.map((input, index) => {\n                                        var showButton = 'none';\n                                        if(input.BookingStatus == 'New'){\n                                            showButton = 'block';\n                                        }\n                                        console.log(this.state.bookings)\n                                        return (\n                                            <Accordion.Item title={input.ServiceName} key={index} expanded={false}>\n                                                <Text.Body>\n                                                    <ul>\n                                                        <li>\n                                                            <b>Citizen Name :</b>  {input.CitizenName}\n                                                        </li>\n                                                        <li>\n                                                            <b>Citizen Number: </b> {input.CitizenNumber}\n                                                        </li>\n                                                        <li>\n                                                            <b>Citizen Email: </b> {input.CitizenEmail}\n                                                        </li>\n                                                        <li>\n                                                            <b>Service start date:</b>  {input.ServiceStartDate}\n                                                        </li>\n                                                        <li>\n                                                            <b>Service start time:</b>  {input.ServiceStartTime}\n                                                        </li>\n                                                        <li>\n                                                            <b>Service Name:</b>  {input.ServiceName}\n                                                        </li>\n                                                        <li>\n                                                            <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                        </li>\n                                                        <li>\n                                                            <b>Service Status:</b>  {input.BookingStatus}\n                                                        </li>\n                                                    </ul>\n                                                    <div style={{ 'display':  showButton }}>\n                                                    <Button.Default\n                                                        onClick={() => this.checkPage(this.handle200, input.Id!!, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input)}\n                                                    >Send to Queue</Button.Default>\n                                                    </div>\n                                                    \n                                                </Text.Body>\n                                            </Accordion.Item>\n                                        )\n                                    })}\n                                </Accordion.Base>\n\n                            </Main>\n                            <div className=\"spacer3\"></div>\n                        </StyledContainer>\n\n\n                        \n\n                        </div>\n                    </Layout.Container>\n                </StyledSection>\n            </div>\n        )\n    }\n\n    handle200(response) {\n        console.log('handle200 has received:', response);\n    }\n\n    checkPage(callback, bookingId: string, nric: string, citizenName: string, citizenEmail: string, citizenNumber: string, booking: Booking) {\n        this.state.bookings.forEach(element => queueNumberArray.push(Number(element.QueueNumber.slice(1)) ));\n\n        console.log(\"test!!\" + queueNumberArray)\n\n        var num = Math.max.apply(null, queueNumberArray) + 1;\n\n        console.log(num);\n        \n        var str = String(num);\n\n        while (str.length < 4 ) str = \"0\" + str;\n         \n        str = \"H\" + str;\n        booking.QueueNumber = str;\n\n        console.log(str)\n        \n\n   \n        const queueObject = {\n            \"_id\": bookingId,\n            \"nric\": nric,\n            \"citizenName\": citizenName,\n            \"citizenEmail\": citizenEmail,\n            \"citizenNumber\": booking.CitizenNumber,\n            \"citizenSalutation\": booking.CitizenSalutation,\n            \"serviceName\": booking.ServiceName,\n            \"serviceProviderEmail\": booking.ServiceProviderEmail,\n            \"serviceProviderName\": booking.ServiceProviderName,\n            \"serviceStartDate\": booking.ServiceStartDate,\n            \"serviceProviderPhone\": booking.ServiceProviderPhone,\n            \"serviceStartTime\": booking.ServiceStartTime,\n            \"serviceProviderLocation\": booking.ServiceProviderLocation,\n            \"bookingStatus\": booking.BookingStatus,\n            \"queueNumber\": str,\n        }\n\n        const myJSON = encodeURI(JSON.stringify(queueObject));\n\n\n        const xhr = new XMLHttpRequest(),\n            method = \"GET\",\n            url = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId + \"&exchangeID=hospital&bindingKey=doctor&bookingDetails=\" + myJSON;\n        // initialize a new GET request\n        xhr.open(method, url, true);\n\n        // respond to every readyState change\n        xhr.onreadystatechange = () => {\n\n            // ignore all readyStates other than \"DONE\"\n            if (xhr.readyState !== XMLHttpRequest.DONE) { return; }\n\n            // call the callback with status\n            if (xhr.status === 200) {\n                this.setState({\n                    showModal: true\n                });\n                return callback(xhr.status);\n            }\n\n            // got something other than 200,\n            // re-initialize and send another GET request\n            xhr.open(method, url, true);\n            xhr.send();\n        }\n\n        // send the initial GET request\n        xhr.send();\n    }\n\n    updateInputValue(evt) {\n        const val = evt.target.value;\n        this.setState({\n            inputValue: val\n        });\n        \n\n      \n    }\n}\n\nexport default Appointment;\n\n\n\n\n\nvar pad = function(num) {\n    var str = String(num++);\n    while (str.length < 4) str = \"0\" + str;\n    return str;\n}; \n\n\n// function closeModalFn(): (() => void) | undefined { \n//     throw new Error('Function not implemented.');\n// }\n// const [show, setShow ] = useState(false)\n// function closeModal(): (() => void) | undefined {\n//     document.getElementById(\"divModal\")!!.style.display = \"none\";\n//     throw new Error('Function not implemented.');\n// }\n// call checkPage once\n\n"]},"metadata":{},"sourceType":"module"}