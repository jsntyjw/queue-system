{"ast":null,"code":"// import * as React from \"react\";\n// import {Form} from 'react-lifesg-design-system'\n// import { options } from \"toastr\";\n// interface Props {\n//   name: string;\n//   label: string;\n//   placeholder?: string;\n//   value: any;\n//   onChange: (fieldName: string, value: any) => void;\n//   error?: string;\n//   // options: string[][]; \n// }\n// export const Dropdown: React.FunctionComponent<Props> = (props) => {\n//   return (\n//     <div className={formatWrapperClass(props)}>\n//       <label htmlFor={props.name}>{props.label}</label>\n//       <div className=\"field\">\n//         <Form.Select \n//           name={props.name}\n//           className=\"form-control\"\n//           placeholder={props.placeholder}\n//           options={[\n//             { value: \"A\", label: \"Option A\" },\n//             { value: \"B\", label: \"Option B\" },\n//             { value: \"C\", label: \"Option C\" },\n//             { value: \"D\", label: \"Option D\" },\n//           ]}\n//           // selectedOption = {props.selectedItemValaue}\n//           // selectedOption = {(item) => console.log(item)}\n//           // label={props.value}\n//           // listExtractor={(item) => item.label}\n//           valueExtractor={(item) => item.value}\n//           listExtractor={(item) => item.label}\n//           displayValueExtractor={(item) => item.label}\n//           onSelectItem={ (item) =>\n//             onChangeSelect(props)\n//           }\n//           // onSelectItem = {(item, extractedValue) => {\n//           //   extractedValue = {props.selectedItemValaue}\n//           // } }\n//           // onSelectItem={(item) => console.log(\n//           //    item.value = props.selectedValue\n//           // )}\n//           // selectedOption = {props.selectedValue}\n//           // valueExtractor={(item) => {props.selectedValue = item.value }}\n//           // onSelectItem={(item, extractedValue) => someFn()}\n//           // valueExtractor={(props) => props.value}\n//           // onSelectItem={(item, extractedValue) => {extractedValue = props.value  } }\n//           // onselect ={ props.value}\n//           // valueExtractor={(item) => props.value}\n//           // onChange={onChangeInput(props)}\n//           // onSelectItem={\n//           //   console.log(\"st\")\n//           // }\n//         />\n//       </div>\n//       <div className=\"help-block\">{props.error}</div>\n//     </div>\n//   )\n// };\n// const formatWrapperClass = (props: Props) => {\n//   const wrapperClass = 'form-group';\n//   return props.error ?\n//     `${wrapperClass} has-error` :\n//     wrapperClass;\n// };\n// const onChangeSelect = (props: Props) => (e: React.ChangeEvent<HTMLSelectElement>) => { \n//   console.log(\"test\")\n//   props.onChange(e.target.name, e.target.value);\n// };","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/common/components/form/dropdown.tsx"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA","sourcesContent":["// import * as React from \"react\";\n// import {Form} from 'react-lifesg-design-system'\n// import { options } from \"toastr\";\n\n// interface Props {\n//   name: string;\n//   label: string;\n//   placeholder?: string;\n//   value: any;\n//   onChange: (fieldName: string, value: any) => void;\n//   error?: string;\n//   // options: string[][]; \n// }\n\n// export const Dropdown: React.FunctionComponent<Props> = (props) => {\n//   return (\n//     <div className={formatWrapperClass(props)}>\n//       <label htmlFor={props.name}>{props.label}</label>\n//       <div className=\"field\">\n//         <Form.Select \n//           name={props.name}\n//           className=\"form-control\"\n//           placeholder={props.placeholder}\n//           options={[\n//             { value: \"A\", label: \"Option A\" },\n//             { value: \"B\", label: \"Option B\" },\n//             { value: \"C\", label: \"Option C\" },\n//             { value: \"D\", label: \"Option D\" },\n//           ]}\n\n//           // selectedOption = {props.selectedItemValaue}\n\n//           // selectedOption = {(item) => console.log(item)}\n          \n//           // label={props.value}\n//           // listExtractor={(item) => item.label}\n//           valueExtractor={(item) => item.value}\n//           listExtractor={(item) => item.label}\n//           displayValueExtractor={(item) => item.label}\n//           onSelectItem={ (item) =>\n            \n//             onChangeSelect(props)\n            \n            \n          \n//           }\n\n//           // onSelectItem = {(item, extractedValue) => {\n//           //   extractedValue = {props.selectedItemValaue}\n//           // } }\n\n//           // onSelectItem={(item) => console.log(\n//           //    item.value = props.selectedValue\n//           // )}\n//           // selectedOption = {props.selectedValue}\n//           // valueExtractor={(item) => {props.selectedValue = item.value }}\n          \n//           // onSelectItem={(item, extractedValue) => someFn()}\n\n//           // valueExtractor={(props) => props.value}\n//           // onSelectItem={(item, extractedValue) => {extractedValue = props.value  } }\n//           // onselect ={ props.value}\n//           // valueExtractor={(item) => props.value}\n//           // onChange={onChangeInput(props)}\n//           // onSelectItem={\n//           //   console.log(\"st\")\n//           // }\n//         />\n//       </div>\n//       <div className=\"help-block\">{props.error}</div>\n//     </div>\n//   )\n// };\n\n// const formatWrapperClass = (props: Props) => {\n//   const wrapperClass = 'form-group';\n\n//   return props.error ?\n//     `${wrapperClass} has-error` :\n//     wrapperClass;\n// };\n\n// const onChangeSelect = (props: Props) => (e: React.ChangeEvent<HTMLSelectElement>) => { \n\n//   console.log(\"test\")\n//   props.onChange(e.target.name, e.target.value);\n  \n// };\n"]},"metadata":{},"sourceType":"module"}