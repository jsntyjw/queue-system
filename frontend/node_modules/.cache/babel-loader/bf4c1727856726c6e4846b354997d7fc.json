{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/ServiceCounter.tsx\";\nimport React from 'react';\nimport '../App.css';\nimport { Text, Button, Layout, Breadcrumb, BoxContainer, InputSelect, Modal } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nimport Booking from \"../models/booking\";\nimport { ModalContent } from \"../models/doc-elements\";\nimport BaseService from '../service/base.service';\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n\nclass ServiceCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _bookingId: \"\",\n      nric: \"\",\n      name: \"\",\n      phone: \"\",\n      email: \"\",\n      inputValue: \"\",\n      queueNumber: \"\",\n      showModal: false,\n      appointmentObject: new Booking()\n    };\n    this.consumeQueue = this.consumeQueue.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(StyledSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Base, {\n      show: this.state.showModal,\n      animationFrom: \"bottom\",\n      enableOverlayClick: true // onOverlayClick={closeModal()}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Box, {\n      onClose: () => {\n        this.setState({\n          showModal: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ModalContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, \"Send to queue succesfully\")))), /*#__PURE__*/React.createElement(Layout.Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      links: [{\n        title: 'Home',\n        url: 'http://localhost:3000/ServiceCounter'\n      }, {\n        title: 'Service Counter'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divButtonNextPatient\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button.Default, {\n      className: \"buttonsuccess\",\n      onClick: () => this.consumeQueue(this.handle200, \"nextPatient\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, \"Next Patient\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divCurrentCitizen\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Layout.GridContainer, {\n      className: \"column2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Text.H3, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, \"Currently Serving\"), /*#__PURE__*/React.createElement(Text.H5, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, \"Current Queue Number : \", this.state.queueNumber), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(BoxContainer, {\n      title: \"Citizen Information\",\n      collapsible: false,\n      className: \"textleft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: \"2rem\",\n        minWidth: \"1080px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Layout.GridContainer, {\n      className: \"column4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 45\n      }\n    }, \"NRIC\"), /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 45\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 45\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 45\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 45\n      }\n    }, this.state.nric), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 45\n      }\n    }, this.state.name), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 45\n      }\n    }, this.state.phone), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 45\n      }\n    }, this.state.email)))), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }, \"Next service: \"))), /*#__PURE__*/React.createElement(Layout.GridContainer, {\n      className: \"column4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputSelect, {\n      placeholder: \"Select\",\n      options: [{\n        value: \"payment\",\n        label: \"Payment\"\n      }, {\n        value: \"pharmacy\",\n        label: \"Pharmacy\"\n      }],\n      valueExtractor: item => item.value,\n      listExtractor: item => item.label,\n      displayValueExtractor: item => item.label,\n      onSelectItem: (item, selectedValue) => {\n        this.setState({\n          inputValue: selectedValue\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button.Default, {\n      onClick: () => this.consumeQueue(this.handle200, \"sendtoNextService\", this.state._bookingId, this.state.nric, this.state.name, this.state.email, this.state.phone),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, \"Send to next service\"))));\n  }\n\n  handle200(response) {\n    console.log('handle200 has received:', response);\n  }\n\n  consumeQueue(callback, buttonSelected, bookingId, nric, citizenName, citizenEmail, citizenNumber, queueNumber) {\n    var respectiveURL = \"\";\n\n    if (buttonSelected == \"nextPatient\") {\n      respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=doctorQueue\";\n    } else {\n      const queueObject = {\n        \"_id\": bookingId,\n        \"nric\": nric,\n        \"citizenName\": citizenName,\n        \"citizenEmail\": citizenEmail,\n        \"citizenNumber\": citizenNumber,\n        \"queueNumber\": queueNumber\n      };\n      var myJSON = encodeURI(JSON.stringify(queueObject));\n      console.log(\"---------------\");\n      console.log(queueObject);\n      respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId + \"&exchangeID=hospital&bindingKey=\" + this.state.inputValue + \"&bookingDetails=\" + myJSON; // respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=\" + this.state.inputValue\n      // console.log(respectiveURL + \"--------------\")\n    }\n\n    const xhr = new XMLHttpRequest(),\n          method = \"GET\",\n          url = respectiveURL; // initialize a new GET request\n\n    xhr.open(method, url, true); // respond to every readyState change\n\n    xhr.onreadystatechange = () => {\n      // ignore all readyStates other than \"DONE\"\n      if (xhr.readyState !== XMLHttpRequest.DONE) {\n        return;\n      } // call the callback with status\n\n\n      if (xhr.status === 200) {\n        if (buttonSelected == \"nextPatient\") {\n          document.getElementById(\"divCurrentCitizen\").style.display = \"block\";\n          document.getElementById(\"divButtonNextPatient\").style.display = \"none\";\n          console.log(xhr.responseText);\n          this.setState({\n            _bookingId: JSON.parse(xhr.responseText)._id,\n            nric: JSON.parse(xhr.responseText).nric,\n            name: JSON.parse(xhr.responseText).citizenName,\n            phone: JSON.parse(xhr.responseText).citizenNumber,\n            email: JSON.parse(xhr.responseText).citizenEmail,\n            queueNumber: JSON.parse(xhr.responseText).queueNumber,\n            appointmentObject: JSON.parse(xhr.responseText).appointmentObject\n          });\n          BaseService.update(\"/booking/update/\", this.state._bookingId, appointmentObject).then(rp => {\n            if (rp.Status) {\n              console.log('Booking saved.');\n            } else {\n              console.log(rp.Messages);\n              console.log(\"Messages: \" + rp.Messages);\n              console.log(\"Exception: \" + rp.Exception);\n            }\n          });\n        }\n\n        if (buttonSelected == \"sendtoNextService\") {\n          this.setState({\n            showModal: true\n          });\n          document.getElementById(\"divCurrentCitizen\").style.display = \"none\";\n          document.getElementById(\"divButtonNextPatient\").style.display = \"block\";\n        } // console.log(JSON.parse(xhr.responseText));\n\n\n        return callback(xhr.status);\n      } // got something other than 200,\n      // re-initialize and send another GET request\n\n\n      xhr.open(method, url, true);\n      xhr.send();\n    }; // send the initial GET request\n\n\n    xhr.send();\n  }\n\n}\n\nexport default ServiceCounter; // function foundResult(_id: any, nric: any, phone: any, email: any, name: any)  {\n//      queueObject = {\n//         \"_id\" :_id,\n//         \"nric\":nric,\n//         \"citizenName\":name,\n//         \"citizenEmail\":email,\n//         \"citizenNumber\":phone\n//     }\n//     console.log(queueObject)\n// }","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/ServiceCounter.tsx"],"names":["React","Text","Button","Layout","Breadcrumb","BoxContainer","InputSelect","Modal","styled","Booking","ModalContent","BaseService","StyledSection","Section","ServiceCounter","Component","constructor","props","state","_bookingId","nric","name","phone","email","inputValue","queueNumber","showModal","appointmentObject","consumeQueue","bind","render","setState","title","url","handle200","display","padding","minWidth","value","label","item","selectedValue","response","console","log","callback","buttonSelected","bookingId","citizenName","citizenEmail","citizenNumber","respectiveURL","queueObject","myJSON","encodeURI","JSON","stringify","xhr","XMLHttpRequest","method","open","onreadystatechange","readyState","DONE","status","document","getElementById","style","responseText","parse","_id","update","then","rp","Status","Messages","Exception","send"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport {\n    Text,\n    Button,\n    Layout,\n    Breadcrumb,\n    BoxContainer,\n    InputSelect,\n    Modal\n} from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\n\nimport Booking from \"../models/booking\";\n\n\nimport { ModalContent } from \"../models/doc-elements\";\nimport BaseService from '../service/base.service';\n\n\ninterface Props {\n    onChange: (fieldName: string, value: string) => void;\n    onSave: () => void;\n}\n\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n\ninterface MyState {\n    _bookingId : string,\n    nric: string,\n    name: string,\n    phone: string,\n    email: string,\n    inputValue : string,\n    queueNumber : string,\n    showModal: boolean,\n    appointmentObject: Booking\n\n}\n\n\n\nclass ServiceCounter extends React.Component<{}, MyState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            _bookingId: \"\",\n            nric: \"\",\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            inputValue: \"\",\n            queueNumber: \"\",\n            showModal: false,\n            appointmentObject:  new Booking,\n\n        };\n\n        this.consumeQueue = this.consumeQueue.bind(this)\n\n    }\n\n    render() {\n        return (\n            <StyledSection>\n\n<Modal.Base\n                        show={this.state.showModal}\n                        animationFrom=\"bottom\"\n                        enableOverlayClick={true}\n                    // onOverlayClick={closeModal()}\n                    >\n                        <Modal.Box onClose={() => {\n\n                            this.setState({\n                                showModal: false\n                            });\n\n\n\n                        }}>\n                            <ModalContent>\n                                <span>Send to queue succesfully</span>\n                            </ModalContent>\n                        </Modal.Box>\n                    </Modal.Base>\n                <Layout.Container>\n                    <Breadcrumb links={[{ title: 'Home', url: 'http://localhost:3000/ServiceCounter' }, { title: 'Service Counter' }]} />\n\n                    <div id='divButtonNextPatient'>\n\n\n                        <Button.Default className='buttonsuccess'\n                            onClick={() => this.consumeQueue(this.handle200, \"nextPatient\")}\n                        >Next Patient</Button.Default>\n\n                    </div>\n                    <div id='divCurrentCitizen' style={{ display: 'none' }}>\n\n                        <Layout.GridContainer className=\"column2\">\n                            <div>\n\n\n\n\n                                <div className='spacer1'></div>\n\n                                <Text.H3>Currently Serving</Text.H3>\n\n                                <Text.H5>Current Queue Number : {this.state.queueNumber}</Text.H5>\n                                <div className='spacer1'></div>\n                                <div className='spacer1'></div>\n\n\n                                <BoxContainer title=\"Citizen Information\" collapsible={false} className=\"textleft\" >\n                                    <div style={{ padding: \"2rem\", minWidth: \"1080px\" }}>\n                                        <Layout.GridContainer className=\"column4\">\n                                            <Text.Body weight=\"semibold\">NRIC</Text.Body>\n                                            <Text.Body weight=\"semibold\">Name</Text.Body>\n                                            <Text.Body weight=\"semibold\">Phone Number</Text.Body>\n                                            <Text.Body weight=\"semibold\">Email</Text.Body>\n                                            <Text.Body>{this.state.nric}</Text.Body>\n                                            <Text.Body>{this.state.name}</Text.Body>\n                                            <Text.Body>{this.state.phone}</Text.Body>\n                                            <Text.Body>{this.state.email}</Text.Body>\n                                        </Layout.GridContainer>\n                                    </div>\n                                </BoxContainer>\n\n\n                                <Text.Body>Next service: </Text.Body>\n\n\n                            </div>\n\n                        </Layout.GridContainer>\n\n\n                        <Layout.GridContainer className=\"column4\">\n\n                            <InputSelect\n                                placeholder=\"Select\"\n                                options={[\n                                    { value: \"payment\", label: \"Payment\" },\n                                    { value: \"pharmacy\", label: \"Pharmacy\" }\n                                ]}\n                                valueExtractor={(item) => item.value}\n                                listExtractor={(item) => item.label}\n                                displayValueExtractor={(item) => item.label}\n                                onSelectItem={(item, selectedValue) => {\n\n                                    this.setState({\n                                        inputValue : selectedValue\n                                    })\n                                }} \n                            />\n                        </Layout.GridContainer>\n\n\n                        <div className='spacer1'></div>\n\n\n                        <Button.Default\n                            onClick={() => this.consumeQueue(this.handle200, \"sendtoNextService\", this.state._bookingId, this.state.nric, this.state.name, this.state.email, this.state.phone)}\n                            \n                        >Send to next service</Button.Default>\n\n                    </div>\n\n                </Layout.Container>\n            </StyledSection>\n        )\n    }\n\n\n     handle200(response) {\n        console.log('handle200 has received:', response);\n    }\n\n    \n    \n     consumeQueue(callback, buttonSelected: string, bookingId?: string, nric?: string, citizenName?: string, citizenEmail?: string, citizenNumber?: string, queueNumber?: string) {\n    \n        var respectiveURL = \"\"\n        if (buttonSelected == \"nextPatient\") {\n            \n            respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=doctorQueue\"\n\n        }\n        else {\n    \n            const queueObject = {\n                \"_id\" :bookingId,\n                \"nric\": nric,\n                \"citizenName\": citizenName,\n                \"citizenEmail\": citizenEmail,\n                \"citizenNumber\": citizenNumber,\n                \"queueNumber\": queueNumber,\n            }\n    \n            var myJSON = encodeURI(JSON.stringify(queueObject));\n\n            console.log(\"---------------\")\n            console.log(queueObject)\n\n            respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId + \"&exchangeID=hospital&bindingKey=\" + this.state.inputValue+\"&bookingDetails=\" + myJSON;\n            // respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=\" + this.state.inputValue\n            // console.log(respectiveURL + \"--------------\")\n        }\n    \n    \n    \n        const xhr = new XMLHttpRequest(),\n            method = \"GET\",\n            url = respectiveURL;\n        // initialize a new GET request\n        xhr.open(method, url, true);\n    \n        // respond to every readyState change\n        xhr.onreadystatechange = () => {\n    \n            // ignore all readyStates other than \"DONE\"\n            if (xhr.readyState !== XMLHttpRequest.DONE) { return; }\n    \n            // call the callback with status\n            if (xhr.status === 200) {\n                if (buttonSelected == \"nextPatient\") {\n                    document.getElementById(\"divCurrentCitizen\")!!.style.display = \"block\";\n                    document.getElementById(\"divButtonNextPatient\")!!.style.display = \"none\";\n\n                    console.log(xhr.responseText)\n                    this.setState({\n                        _bookingId : JSON.parse(xhr.responseText)._id,\n                        nric:  JSON.parse(xhr.responseText).nric,\n                        name: JSON.parse(xhr.responseText).citizenName,\n                        phone: JSON.parse(xhr.responseText).citizenNumber,\n                        email: JSON.parse(xhr.responseText).citizenEmail,\n                        queueNumber: JSON.parse(xhr.responseText).queueNumber,\n                        appointmentObject: JSON.parse(xhr.responseText).appointmentObject\n                    })\n\n                    \n\n\n                    BaseService.update<Booking>( \"/booking/update/\", this.state._bookingId, appointmentObject).then(\n                        \n                        (rp) => {\n                            if (rp.Status) {\n                                console.log('Booking saved.');\n                            } else {\n                                console.log(rp.Messages);\n                                console.log(\"Messages: \" + rp.Messages);\n                                console.log(\"Exception: \" + rp.Exception);\n                            }\n                        }\n                    );\n                    \n                    \n                }\n                \n                if(buttonSelected == \"sendtoNextService\"){\n                    this.setState({\n                        showModal: true\n                    });\n\n                    document.getElementById(\"divCurrentCitizen\")!!.style.display = \"none\";\n                    document.getElementById(\"divButtonNextPatient\")!!.style.display = \"block\";\n                }\n\n                // console.log(JSON.parse(xhr.responseText));\n                \n                return callback(xhr.status);\n            }\n    \n            // got something other than 200,\n            // re-initialize and send another GET request\n            xhr.open(method, url, true);\n            xhr.send();\n        }\n    \n        // send the initial GET request\n        xhr.send();\n    } \n\n\n}\n\nexport default ServiceCounter;\n\n\n\n\n\n\n\n\n\n// function foundResult(_id: any, nric: any, phone: any, email: any, name: any)  {\n//      queueObject = {\n//         \"_id\" :_id,\n//         \"nric\":nric,\n//         \"citizenName\":name,\n//         \"citizenEmail\":email,\n//         \"citizenNumber\":phone\n//     }\n\n//     console.log(queueObject)\n// }\n\n"]},"metadata":{},"sourceType":"module"}