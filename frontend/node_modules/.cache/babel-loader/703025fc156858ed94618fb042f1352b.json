{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Appointments.tsx\";\nimport React from 'react';\nimport '../App.css';\nimport { Text, Button, Layout, Breadcrumb, InputGroup, Accordion, InputSelect, Modal, RadioButton } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nimport Booking from \"../models/booking\";\nimport { Container, Label, ModalContent, OptionContainer } from \"../models/doc-elements\";\nconst StyledContainer = styled(Layout.GridContainer)`\n    grid-template-rows: 1fr;\n    grid-template-columns: 12fr;\n    grid-template-areas:\n        \"title\"\n        \"button \"\n        \"queue\";\n    grid-gap: 0.25rem;\n    grid-row-gap: 16px;\n`;\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\nconst Main = styled.main`\n  color: white;\n  grid-area: queue;\n  padding: 0.25rem;\n`;\nvar queueNumberArray = [];\n\nclass Appointment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookings: [],\n      inputValue: '',\n      clicked: 'none',\n      showModal: false,\n      showNRIC: 'none',\n      showGeneralPractioner: 'block',\n      showDivider: 'block',\n      showSpecialist: 'block',\n      showGeneralTypeDropDown: 'none',\n      selected: 'A',\n      showDivCitizenAppoinments: 'none',\n      chooseOtherOptions: false,\n      agencySelection: \"HPB\",\n      showDivHPBView: \"block\",\n      showHospitalView: \"none\",\n      showGeneralTypeDropDownHPB: \"none\",\n      showDIVHPBcomuunityHealth: \"block\",\n      showDIVHPBworkplaceHealth: \"block\",\n      showGeneralServiceDropDown: \"none\",\n      showGeneralServiceDropDownHospital: \"none\"\n    };\n    this.loadData = this.loadData.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData(); // if(this.state.chooseOtherOptions == false){\n    // setInterval(this.loadData, 10000);\n    // }\n  }\n\n  async loadData() {\n    if (this.state.chooseOtherOptions == false) {\n      try {\n        var apiURL;\n        apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines'; // if (searchMethod == \"location\") {\n        //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n        //     document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n        // }\n        // else {\n        //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/citizen/' + this.state.inputValue;\n        //     console.log(apiURL)\n        //     if (this.state.inputValue == '') {\n        //         apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n        //     }\n        //     // document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n        // }\n\n        fetch(apiURL).then(function (response) {\n          return response.json();\n        }).then(myJson => {\n          this.setState({\n            bookings: []\n          });\n          myJson.data.forEach(element => {\n            var eachBooking = new Booking(element[\"_id\"], element[\"nric\"], element[\"citizenName\"], element[\"citizenSalutation\"], element[\"citizenEmail\"], element[\"citizenNumber\"], element[\"generalType\"], element[\"serviceName\"], element[\"serviceProviderName\"], element[\"serviceProviderEmail\"], element[\"serviceProviderPhone\"], element[\"serviceStartDate\"], element[\"serviceStartTime\"], element[\"serviceProviderLocation\"], element[\"bookingStatus\"], element[\"queueNumber\"]); // const bookings = this.state.bookings.slice(0);\n\n            this.state.bookings.push(eachBooking); // console.log(bookings)\n\n            this.setState({\n              bookings: this.state.bookings,\n              clicked: 'block'\n            });\n          });\n        }); //   console.log(blocks.data)\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  async searchByLocation(val) {\n    console.log(val);\n\n    if (val == \"General Practioner\") {\n      this.setState({\n        showSpecialist: 'none',\n        showDivider: 'none',\n        showGeneralPractioner: 'block',\n        showNRIC: 'none',\n        showGeneralTypeDropDown: 'block'\n      });\n    }\n\n    if (val == \"Specialist\") {\n      this.setState({\n        showSpecialist: 'block',\n        showDivider: 'none',\n        showGeneralPractioner: 'none',\n        showNRIC: 'none',\n        showGeneralTypeDropDown: 'block'\n      });\n    }\n\n    if (val == \"communityHealth\") {\n      this.setState({\n        showSpecialist: 'none',\n        showDivider: 'none',\n        showGeneralPractioner: 'none',\n        showNRIC: 'none',\n        showGeneralTypeDropDownHPB: 'block',\n        showDIVHPBcomuunityHealth: \"block\",\n        showDIVHPBworkplaceHealth: \"none\"\n      });\n    }\n\n    if (val == \"workplaceHealth\") {\n      this.setState({\n        showSpecialist: 'none',\n        showDivider: 'none',\n        showGeneralPractioner: 'none',\n        showNRIC: 'none',\n        showGeneralTypeDropDownHPB: 'block',\n        showDIVHPBcomuunityHealth: \"none\",\n        showDIVHPBworkplaceHealth: \"block\"\n      });\n    }\n\n    if (val == \"NRIC\") {\n      var apiURL;\n      apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/citizen/' + this.state.inputValue;\n      fetch(apiURL).then(function (response) {\n        return response.json();\n      }).then(myJson => {\n        this.state.bookings.length = 0;\n        myJson.data.forEach(element => {\n          var eachBooking = new Booking(element[\"_id\"], element[\"nric\"], element[\"citizenName\"], element[\"citizenSalutation\"], element[\"citizenEmail\"], element[\"citizenNumber\"], element[\"generalType\"], element[\"serviceName\"], element[\"serviceProviderName\"], element[\"serviceProviderEmail\"], element[\"serviceProviderPhone\"], element[\"serviceStartDate\"], element[\"serviceStartTime\"], element[\"serviceProviderLocation\"], element[\"bookingStatus\"], element[\"queueNumber\"]); // const bookings = this.state.bookings.slice(0);\n\n          this.state.bookings.push(eachBooking); // console.log(bookings)\n\n          this.setState({\n            bookings: this.state.bookings,\n            clicked: 'block',\n            showDivCitizenAppoinments: 'block'\n          });\n        });\n      });\n    } // if (searchMethod == \"location\") {\n    //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n    //     document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n    // }\n    // else {\n    //     console.log(apiURL)\n    //     if (this.state.inputValue == '') {\n    //         apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n    //     }\n    //     // document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n    // }\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StyledSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Base, {\n      show: this.state.showModal,\n      animationFrom: \"bottom\",\n      enableOverlayClick: true // onOverlayClick={closeModal()}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Box, {\n      onClose: () => {\n        this.setState({\n          showModal: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ModalContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 33\n      }\n    }, \"Send to queue succesfully\")))), /*#__PURE__*/React.createElement(Layout.Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      links: [{\n        title: 'Home',\n        url: '/Home'\n      }, {\n        title: 'Appointments'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 25\n      }\n    }), \"Change Agency View:\", /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divAgency\",\n      className: \"inlinecontent\",\n      style: {\n        justifyItems: \"start\",\n        maxWidth: '400px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputSelect, {\n      options: [{\n        value: \"HPB\",\n        label: \"HPB\"\n      }, {\n        value: \"Hospital\",\n        label: \"Hospital\"\n      }],\n      valueExtractor: item => item.value,\n      listExtractor: item => item.label,\n      displayValueExtractor: item => item.label,\n      placeholder: this.state.agencySelection,\n      onSelectItem: (item, selectedValue) => {\n        this.setState({\n          inputValue: selectedValue\n        }, () => {\n          this.ddlAgency(selectedValue);\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"hpbView\",\n      style: {\n        display: this.state.showDivHPBView\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(OptionContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(RadioButton, {\n      value: \"A\",\n      id: \"multiple-options-a\",\n      name: \"multiple-options\",\n      onChange: () => {\n        this.setState({\n          selected: 'A',\n          showSpecialist: 'block',\n          showDivider: 'block',\n          showGeneralPractioner: 'block',\n          showNRIC: 'none',\n          showGeneralTypeDropDown: 'none',\n          showDivCitizenAppoinments: 'none',\n          chooseOtherOptions: false,\n          showGeneralTypeDropDownHPB: \"none\"\n        });\n        this.loadData();\n      },\n      checked: this.state.selected === \"A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"multiple-options-a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 37\n      }\n    }, \"View All Appointments\")), /*#__PURE__*/React.createElement(OptionContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(RadioButton, {\n      value: \"B\",\n      id: \"multiple-options-b\",\n      name: \"multiple-options\",\n      onChange: () => {\n        this.setState({\n          selected: 'B',\n          showSpecialist: 'none',\n          showDivider: 'none',\n          showGeneralPractioner: 'none',\n          showNRIC: 'block',\n          showGeneralTypeDropDown: 'none',\n          showDivCitizenAppoinments: 'none',\n          chooseOtherOptions: true,\n          showGeneralTypeDropDownHPB: \"none\"\n        });\n      },\n      checked: this.state.selected === \"B\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"multiple-options-b\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 37\n      }\n    }, \"View appointments by NRIC\")), /*#__PURE__*/React.createElement(OptionContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(RadioButton, {\n      value: \"C\",\n      id: \"multiple-options-c\",\n      name: \"multiple-options\",\n      onChange: () => {\n        this.setState({\n          selected: 'C',\n          showSpecialist: 'none',\n          showDivider: 'none',\n          showGeneralPractioner: 'none',\n          showNRIC: 'none',\n          showGeneralTypeDropDown: 'none',\n          showDivCitizenAppoinments: 'none',\n          chooseOtherOptions: true,\n          showGeneralTypeDropDownHPB: \"block\",\n          showDIVHPBworkplaceHealth: \"none\",\n          showDIVHPBcomuunityHealth: \"none\"\n        });\n      },\n      checked: this.state.selected === \"C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"multiple-options-c\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 37\n      }\n    }, \"View appointments by service\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divNRIC\",\n      style: {\n        justifyItems: \"start\",\n        maxWidth: '400px',\n        display: this.state.showNRIC\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        'margin': '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 37\n      }\n    }, \"Search by NRIC: \")), /*#__PURE__*/React.createElement(InputGroup, {\n      addon: {\n        type: 'custom'\n      },\n      placeholder: \"Type NRIC here...\",\n      onChange: evt => this.updateInputValue(evt),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        'padding': '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button.Default, {\n      onClick: () => this.searchByLocation(\"NRIC\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 33\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divLocation\",\n      className: \"inlinecontent\",\n      style: {\n        justifyItems: \"start\",\n        maxWidth: '400px',\n        display: this.state.showGeneralTypeDropDownHPB\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputSelect, {\n      options: [{\n        value: \"communityHealth\",\n        label: \"communityHealth\"\n      }, {\n        value: \"workplaceHealth\",\n        label: \"workplaceHealth\"\n      }],\n      valueExtractor: item => item.value,\n      listExtractor: item => item.label,\n      displayValueExtractor: item => item.label,\n      placeholder: \"Select a service type\",\n      onSelectItem: (item, selectedValue) => {\n        this.setState({\n          inputValue: selectedValue\n        }, () => {\n          this.searchByLocation(selectedValue);\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divAppointments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divGeneralPractioner\",\n      className: \"rcorner2\",\n      style: {\n        'display': this.state.showDIVHPBcomuunityHealth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(StyledContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Text.H3, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 41\n      }\n    }, \"Appointments [HPB Consultation - communityHealth]\"), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 41\n      }\n    }, \"Government services appointments\"), /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Base, {\n      className: \"base\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 45\n      }\n    }, this.state.bookings.filter(element => element.GeneralType == 'HPB Consultation - communityHealth').map((input, index) => {\n      var showButton = 'none';\n\n      if (input.BookingStatus == 'New') {\n        showButton = 'block';\n      }\n\n      console.log(this.state.bookings);\n      return /*#__PURE__*/React.createElement(Accordion.Item, {\n        title: input.CitizenName,\n        key: index,\n        expanded: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Text.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 73\n        }\n      }, \"Citizen Name :\"), \"  \", input.CitizenName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 73\n        }\n      }, \"Citizen Number: \"), \" \", input.CitizenNumber), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 73\n        }\n      }, \"Citizen Email: \"), \" \", input.CitizenEmail), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 73\n        }\n      }, \"Service start date:\"), \"  \", input.ServiceStartDate), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 73\n        }\n      }, \"Service start time:\"), \"  \", input.ServiceStartTime), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 73\n        }\n      }, \"Service Name:\"), \"  \", input.ServiceName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 73\n        }\n      }, \"Service Provider Location:\"), \"  \", input.ServiceProviderLocation), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 73\n        }\n      }, \"Service Status:\"), \"  \", input.BookingStatus)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          'display': showButton\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Button.Default, {\n        onClick: () => this.checkPage(this.handle200, input.Id, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 69\n        }\n      }, \"Send to Queue\"))));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divGeneralPractioner\",\n      className: \"rcorner\",\n      style: {\n        'display': this.state.showDIVHPBworkplaceHealth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(StyledContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Text.H3, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 41\n      }\n    }, \"Appointments [HPB Consultation - workplaceHealth]\"), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 41\n      }\n    }, \"Government services appointments\"), /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Base, {\n      className: \"base\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 45\n      }\n    }, this.state.bookings.filter(element => element.GeneralType == 'HPB Consultation - workplaceHealth').map((input, index) => {\n      var showButton = 'none';\n\n      if (input.BookingStatus == 'New') {\n        showButton = 'block';\n      }\n\n      console.log(this.state.bookings);\n      return /*#__PURE__*/React.createElement(Accordion.Item, {\n        title: input.CitizenName,\n        key: index,\n        expanded: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Text.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 73\n        }\n      }, \"Citizen Name :\"), \"  \", input.CitizenName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 73\n        }\n      }, \"Citizen Number: \"), \" \", input.CitizenNumber), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 73\n        }\n      }, \"Citizen Email: \"), \" \", input.CitizenEmail), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 73\n        }\n      }, \"Service start date:\"), \"  \", input.ServiceStartDate), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 73\n        }\n      }, \"Service start time:\"), \"  \", input.ServiceStartTime), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 73\n        }\n      }, \"Service Name:\"), \"  \", input.ServiceName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 73\n        }\n      }, \"Service Provider Location:\"), \"  \", input.ServiceProviderLocation), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 73\n        }\n      }, \"Service Status:\"), \"  \", input.BookingStatus)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          'display': showButton\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Button.Default, {\n        onClick: () => this.checkPage(this.handle200, input.Id, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 69\n        }\n      }, \"Send to Queue\"))));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divDivider\",\n      className: \"spacer5\",\n      style: {\n        'display': this.state.showDivider\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divCitizenAppointments\",\n      style: {\n        'display': this.state.showDivCitizenAppoinments\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Base, {\n      className: \"base\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 41\n      }\n    }, this.state.bookings.filter(element => element.ServiceProviderLocation == 'Tampines').map((input, index) => {\n      var showButton = 'none';\n\n      if (input.BookingStatus == 'New') {\n        showButton = 'block';\n      }\n\n      return /*#__PURE__*/React.createElement(Accordion.Item, {\n        title: input.CitizenName,\n        key: index,\n        expanded: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Text.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 77\n        }\n      }, \"Citizen Name :\"), \"  \", input.CitizenName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 77\n        }\n      }, \"Citizen Number: \"), \" \", input.CitizenNumber), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 77\n        }\n      }, \"Citizen Email: \"), \" \", input.CitizenEmail), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 77\n        }\n      }, \"Service start date:\"), \"  \", input.ServiceStartDate), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 77\n        }\n      }, \"Service start time:\"), \"  \", input.ServiceStartTime), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 77\n        }\n      }, \"Service Name:\"), \"  \", input.ServiceName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 77\n        }\n      }, \"Service Provider Location:\"), \"  \", input.ServiceProviderLocation), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 77\n        }\n      }, \"Service Status:\"), \"  \", input.BookingStatus)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          'display': showButton\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Button.Default, {\n        onClick: () => this.checkPage(this.handle200, input.Id, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 73\n        }\n      }, \"Send to Queue\"))));\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"hospitalView\",\n      style: {\n        display: this.state.showHospitalView\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(OptionContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(RadioButton, {\n      value: \"A\",\n      id: \"multiple-options-a\",\n      name: \"multiple-options\",\n      onChange: () => {\n        this.setState({\n          selected: 'A',\n          showSpecialist: 'block',\n          showDivider: 'block',\n          showGeneralPractioner: 'block',\n          showNRIC: 'none',\n          showGeneralServiceDropDownHospital: 'none',\n          showDivCitizenAppoinments: 'none',\n          chooseOtherOptions: false\n        });\n        this.loadData();\n      },\n      checked: this.state.selected === \"A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"multiple-options-a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 37\n      }\n    }, \"View All Appointments\")), /*#__PURE__*/React.createElement(OptionContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(RadioButton, {\n      value: \"B\",\n      id: \"multiple-options-b\",\n      name: \"multiple-options\",\n      onChange: () => {\n        this.setState({\n          selected: 'B',\n          showSpecialist: 'none',\n          showDivider: 'none',\n          showGeneralPractioner: 'none',\n          showNRIC: 'block',\n          showGeneralServiceDropDownHospital: 'none',\n          showDivCitizenAppoinments: 'none',\n          chooseOtherOptions: true\n        });\n      },\n      checked: this.state.selected === \"B\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"multiple-options-b\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 37\n      }\n    }, \"View appointments by NRIC\")), /*#__PURE__*/React.createElement(OptionContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(RadioButton, {\n      value: \"C\",\n      id: \"multiple-options-c\",\n      name: \"multiple-options\",\n      onChange: () => {\n        this.setState({\n          showGeneralServiceDropDownHospital: 'block' // selected: 'C',\n          // showSpecialist: 'none',\n          // showDivider: 'none',\n          // showGeneralPractioner: 'none',\n          // showNRIC: 'none',\n          // showGeneralServiceDropDownHospital: 'block',\n          // showDivCitizenAppoinments: 'none',\n          // chooseOtherOptions: true\n\n        });\n      },\n      checked: this.state.selected === \"C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"multiple-options-c\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 37\n      }\n    }, \"View Appointments by Service Type\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divNRIC\",\n      style: {\n        justifyItems: \"start\",\n        maxWidth: '400px',\n        display: this.state.showNRIC\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        'margin': '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 37\n      }\n    }, \"Search by NRIC: \")), /*#__PURE__*/React.createElement(InputGroup, {\n      addon: {\n        type: 'custom'\n      },\n      placeholder: \"Type NRIC here...\",\n      onChange: evt => this.updateInputValue(evt),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        'padding': '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button.Default, {\n      onClick: () => this.searchByLocation(\"NRIC\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 33\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inlinecontent\",\n      style: {\n        justifyItems: \"start\",\n        maxWidth: '400px',\n        display: this.state.showGeneralServiceDropDownHospital\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputSelect, {\n      options: [{\n        value: \"General Practioner\",\n        label: \"General Practioner\"\n      }, {\n        value: \"Specialist\",\n        label: \"Specialist\"\n      }],\n      valueExtractor: item => item.value,\n      listExtractor: item => item.label,\n      displayValueExtractor: item => item.label,\n      placeholder: \"Select a service type\",\n      onSelectItem: (item, selectedValue) => {\n        this.setState({\n          inputValue: selectedValue\n        }, () => {\n          this.searchByLocation(selectedValue);\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divAppointments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divGeneralPractioner\",\n      className: \"rcorner2\",\n      style: {\n        'display': this.state.showGeneralPractioner\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(StyledContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Text.H3, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 41\n      }\n    }, \"Appointments [General Practioner]\"), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 41\n      }\n    }, \"Government services appointments\"), /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Base, {\n      className: \"base\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 45\n      }\n    }, this.state.bookings.filter(element => element.GeneralType == 'General Practionar').map((input, index) => {\n      var showButton = 'none';\n\n      if (input.BookingStatus == 'New') {\n        showButton = 'block';\n      }\n\n      console.log(this.state.bookings);\n      return /*#__PURE__*/React.createElement(Accordion.Item, {\n        title: input.CitizenName,\n        key: index,\n        expanded: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Text.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 73\n        }\n      }, \"Citizen Name :\"), \"  \", input.CitizenName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 73\n        }\n      }, \"Citizen Number: \"), \" \", input.CitizenNumber), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 73\n        }\n      }, \"Citizen Email: \"), \" \", input.CitizenEmail), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 73\n        }\n      }, \"Service start date:\"), \"  \", input.ServiceStartDate), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 73\n        }\n      }, \"Service start time:\"), \"  \", input.ServiceStartTime), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 73\n        }\n      }, \"Service Name:\"), \"  \", input.ServiceName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 73\n        }\n      }, \"Service Provider Location:\"), \"  \", input.ServiceProviderLocation), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 73\n        }\n      }, \"Service Status:\"), \"  \", input.BookingStatus)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          'display': showButton\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Button.Default, {\n        onClick: () => this.checkPage(this.handle200, input.Id, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 69\n        }\n      }, \"Send to Queue\"))));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divDivider\",\n      className: \"spacer5\",\n      style: {\n        'display': this.state.showDivider\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divCitizenAppointments\",\n      style: {\n        'display': this.state.showDivCitizenAppoinments\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Base, {\n      className: \"base\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 41\n      }\n    }, this.state.bookings.filter(element => element.ServiceProviderLocation == 'Tampines').map((input, index) => {\n      var showButton = 'none';\n\n      if (input.BookingStatus == 'New') {\n        showButton = 'block';\n      }\n\n      return /*#__PURE__*/React.createElement(Accordion.Item, {\n        title: input.CitizenName,\n        key: index,\n        expanded: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Text.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 77\n        }\n      }, \"Citizen Name :\"), \"  \", input.CitizenName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 77\n        }\n      }, \"Citizen Number: \"), \" \", input.CitizenNumber), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 77\n        }\n      }, \"Citizen Email: \"), \" \", input.CitizenEmail), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 77\n        }\n      }, \"Service start date:\"), \"  \", input.ServiceStartDate), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 77\n        }\n      }, \"Service start time:\"), \"  \", input.ServiceStartTime), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 77\n        }\n      }, \"Service Name:\"), \"  \", input.ServiceName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 77\n        }\n      }, \"Service Provider Location:\"), \"  \", input.ServiceProviderLocation), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 77\n        }\n      }, \"Service Status:\"), \"  \", input.BookingStatus)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          'display': showButton\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Button.Default, {\n        onClick: () => this.checkPage(this.handle200, input.Id, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 73\n        }\n      }, \"Send to Queue\"))));\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divSpecialist\",\n      className: \"rcorner\",\n      style: {\n        'display': this.state.showSpecialist\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(StyledContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Text.H3, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 41\n      }\n    }, \"Appointments [Specialist]\"), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 41\n      }\n    }, \"Government services appointments\"), /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Base, {\n      className: \"base\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 45\n      }\n    }, this.state.bookings.filter(element => element.GeneralType == 'Specialist').map((input, index) => {\n      var showButton = 'none';\n\n      if (input.BookingStatus == 'New') {\n        showButton = 'block';\n      }\n\n      console.log(this.state.bookings);\n\n      if (input.GeneralType == 'General Practionar') {}\n\n      return /*#__PURE__*/React.createElement(Accordion.Item, {\n        title: input.CitizenName,\n        key: index,\n        expanded: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Text.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 81\n        }\n      }, \"Citizen Name :\"), \"  \", input.CitizenName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 987,\n          columnNumber: 81\n        }\n      }, \"Citizen Number: \"), \" \", input.CitizenNumber), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 81\n        }\n      }, \"Citizen Email: \"), \" \", input.CitizenEmail), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 81\n        }\n      }, \"Service start date:\"), \"  \", input.ServiceStartDate), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 81\n        }\n      }, \"Service start time:\"), \"  \", input.ServiceStartTime), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 81\n        }\n      }, \"Service Name:\"), \"  \", input.ServiceName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 81\n        }\n      }, \"Service Provider Location:\"), \"  \", input.ServiceProviderLocation), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 81\n        }\n      }, \"Service Status:\"), \"  \", input.BookingStatus)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          'display': showButton\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Button.Default, {\n        onClick: () => this.checkPage(this.handle200, input.Id, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 77\n        }\n      }, \"Send to Queue\"))));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1027,\n        columnNumber: 41\n      }\n    }))))))));\n  }\n\n  ddlAgency(selectedValue) {\n    if (selectedValue == \"HPB\") {\n      this.setState({\n        showDivHPBView: \"block\",\n        showHospitalView: \"none\",\n        showDivCitizenAppoinments: \"none\" // showCurrentCitizen: \"none\",\n        // showDivHPBService: \"block\",\n        // showDIVHospitalservice:\"none\",\n        // agencySelection: \"HPB\",\n        // serviceSelection: \"communityHealth\"\n\n      });\n    } else {\n      this.setState({\n        showDivHPBView: \"none\",\n        showHospitalView: \"block\",\n        showDivCitizenAppoinments: \"none\" // showCurrentCitizen: \"none\",\n        // showDivHPBService: \"none\",\n        // showDIVHospitalservice: \"block\",\n        // agencySelection: \"Hospital\",\n        // serviceSelection: \"Doctor\"\n\n      });\n    }\n  }\n\n  handle200(response) {\n    console.log('handle200 has received:', response);\n  }\n\n  checkPage(callback, bookingId, nric, citizenName, citizenEmail, citizenNumber, booking) {\n    this.state.bookings.forEach(element => queueNumberArray.push(Number(element.QueueNumber.slice(1))));\n    console.log(\"test!!\" + queueNumberArray);\n    var num = Math.max.apply(null, queueNumberArray) + 1;\n    console.log(num);\n    var str = String(num);\n\n    while (str.length < 4) str = \"0\" + str;\n\n    str = \"H\" + str;\n    booking.QueueNumber = str;\n    console.log(str);\n    const queueObject = {\n      \"_id\": bookingId,\n      \"nric\": nric,\n      \"citizenName\": citizenName,\n      \"citizenEmail\": citizenEmail,\n      \"citizenNumber\": booking.CitizenNumber,\n      \"citizenSalutation\": booking.CitizenSalutation,\n      \"generalType\": booking.GeneralType,\n      \"serviceName\": booking.ServiceName,\n      \"serviceProviderEmail\": booking.ServiceProviderEmail,\n      \"serviceProviderName\": booking.ServiceProviderName,\n      \"serviceStartDate\": booking.ServiceStartDate,\n      \"serviceProviderPhone\": booking.ServiceProviderPhone,\n      \"serviceStartTime\": booking.ServiceStartTime,\n      \"serviceProviderLocation\": booking.ServiceProviderLocation,\n      \"bookingStatus\": booking.BookingStatus,\n      \"queueNumber\": str\n    };\n    const myJSON = encodeURI(JSON.stringify(queueObject));\n    const xhr = new XMLHttpRequest(),\n          method = \"GET\",\n          url = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId + \"&exchangeID=master&bindingKey=sgh.doctor&bookingDetails=\" + myJSON; // initialize a new GET request\n\n    xhr.open(method, url, true); // respond to every readyState change\n\n    xhr.onreadystatechange = () => {\n      // ignore all readyStates other than \"DONE\"\n      if (xhr.readyState !== XMLHttpRequest.DONE) {\n        return;\n      } // call the callback with status\n\n\n      if (xhr.status === 200) {\n        this.setState({\n          showModal: true\n        });\n        return callback(xhr.status);\n      } // got something other than 200,\n      // re-initialize and send another GET request\n\n\n      xhr.open(method, url, true);\n      xhr.send();\n    }; // send the initial GET request\n\n\n    xhr.send();\n  }\n\n  updateInputValue(evt) {\n    const val = evt.target.value;\n    this.setState({\n      inputValue: val\n    });\n  }\n\n}\n\nexport default Appointment;\n\nvar pad = function (num) {\n  var str = String(num++);\n\n  while (str.length < 4) str = \"0\" + str;\n\n  return str;\n}; // function closeModalFn(): (() => void) | undefined { \n//     throw new Error('Function not implemented.');\n// }\n// const [show, setShow ] = useState(false)\n// function closeModal(): (() => void) | undefined {\n//     document.getElementById(\"divModal\")!!.style.display = \"none\";\n//     throw new Error('Function not implemented.');\n// }\n// call checkPage once","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Appointments.tsx"],"names":["React","Text","Button","Layout","Breadcrumb","InputGroup","Accordion","InputSelect","Modal","RadioButton","styled","Booking","Container","Label","ModalContent","OptionContainer","StyledContainer","GridContainer","StyledSection","Section","Main","main","queueNumberArray","Appointment","Component","constructor","props","state","bookings","inputValue","clicked","showModal","showNRIC","showGeneralPractioner","showDivider","showSpecialist","showGeneralTypeDropDown","selected","showDivCitizenAppoinments","chooseOtherOptions","agencySelection","showDivHPBView","showHospitalView","showGeneralTypeDropDownHPB","showDIVHPBcomuunityHealth","showDIVHPBworkplaceHealth","showGeneralServiceDropDown","showGeneralServiceDropDownHospital","loadData","bind","componentDidMount","apiURL","process","env","REACT_APP_MY_EC2_API_ADDRESS","fetch","then","response","json","myJson","setState","data","forEach","element","eachBooking","push","e","console","log","searchByLocation","val","length","render","title","url","justifyItems","maxWidth","value","label","item","selectedValue","ddlAgency","display","type","evt","updateInputValue","filter","GeneralType","map","input","index","showButton","BookingStatus","CitizenName","CitizenNumber","CitizenEmail","ServiceStartDate","ServiceStartTime","ServiceName","ServiceProviderLocation","checkPage","handle200","Id","Nric","callback","bookingId","nric","citizenName","citizenEmail","citizenNumber","booking","Number","QueueNumber","slice","num","Math","max","apply","str","String","queueObject","CitizenSalutation","ServiceProviderEmail","ServiceProviderName","ServiceProviderPhone","myJSON","encodeURI","JSON","stringify","xhr","XMLHttpRequest","method","open","onreadystatechange","readyState","DONE","status","send","target","pad"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../App.css';\nimport { Text, Button, Layout, BoxContainer, Breadcrumb, InputGroup, Accordion, InputSelect, Modal, RadioButton, LinkList, } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nimport Booking from \"../models/booking\";\n\nimport { Container, Label, ModalContent, OptionContainer } from \"../models/doc-elements\";\nimport BaseService from '../service/base.service';\n\n\nconst StyledContainer = styled(Layout.GridContainer)`\n    grid-template-rows: 1fr;\n    grid-template-columns: 12fr;\n    grid-template-areas:\n        \"title\"\n        \"button \"\n        \"queue\";\n    grid-gap: 0.25rem;\n    grid-row-gap: 16px;\n`;\n\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n\nconst Main = styled.main`\n  color: white;\n  grid-area: queue;\n  padding: 0.25rem;\n`;\n\ninterface MyState {\n    bookings: Booking[],\n    inputValue: string,\n    clicked: string,\n    showModal: boolean,\n    showNRIC: string,\n    showGeneralPractioner: string,\n    showDivider: string,\n    showSpecialist: string,\n    showGeneralTypeDropDown: string,\n    selected: string,\n    showDivCitizenAppoinments: string,\n    chooseOtherOptions: boolean,\n    agencySelection: string,\n    showDivHPBView: string,\n    showHospitalView: string,\n    showGeneralTypeDropDownHPB: string,\n    showDIVHPBcomuunityHealth:string,\n    showDIVHPBworkplaceHealth:string,\n    showGeneralServiceDropDown: string,\n    showGeneralServiceDropDownHospital: string\n}\n\nvar queueNumberArray: number[] = [];\n\n\n\n\n\nclass Appointment extends React.Component<{}, MyState> {\n\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            inputValue: '',\n            clicked: 'none',\n            showModal: false,\n            showNRIC: 'none',\n            showGeneralPractioner: 'block',\n            showDivider: 'block',\n            showSpecialist: 'block',\n            showGeneralTypeDropDown: 'none',\n            selected: 'A',\n            showDivCitizenAppoinments: 'none',\n            chooseOtherOptions: false,\n            agencySelection: \"HPB\",\n            showDivHPBView:\"block\",\n            showHospitalView: \"none\",\n            showGeneralTypeDropDownHPB:\"none\",\n            showDIVHPBcomuunityHealth: \"block\",\n            showDIVHPBworkplaceHealth: \"block\",\n            showGeneralServiceDropDown: \"none\",\n            showGeneralServiceDropDownHospital: \"none\"\n        };\n        this.loadData = this.loadData.bind(this)\n    }\n\n\n    componentDidMount() {\n        this.loadData();\n        // if(this.state.chooseOtherOptions == false){\n        // setInterval(this.loadData, 10000);\n        // }\n    }\n\n    async loadData() {\n        if (this.state.chooseOtherOptions == false) {\n            try {\n                var apiURL: string\n                apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n                // if (searchMethod == \"location\") {\n                //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n                //     document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n\n                // }\n                // else {\n                //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/citizen/' + this.state.inputValue;\n                //     console.log(apiURL)\n                //     if (this.state.inputValue == '') {\n                //         apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n                //     }\n                //     // document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n\n                // }\n\n                fetch(apiURL)\n                    .then(function (response) {\n\n                        return response.json();\n                    })\n                    .then((myJson) => {\n                        this.setState({\n                            bookings: []\n                        })\n                        myJson.data.forEach(element => {\n                            var eachBooking = new Booking(\n                                element[\"_id\"],\n                                element[\"nric\"],\n                                element[\"citizenName\"],\n                                element[\"citizenSalutation\"],\n                                element[\"citizenEmail\"],\n                                element[\"citizenNumber\"],\n                                element[\"generalType\"],\n                                element[\"serviceName\"],\n                                element[\"serviceProviderName\"],\n                                element[\"serviceProviderEmail\"],\n                                element[\"serviceProviderPhone\"],\n                                element[\"serviceStartDate\"],\n                                element[\"serviceStartTime\"],\n                                element[\"serviceProviderLocation\"],\n                                element[\"bookingStatus\"],\n                                element[\"queueNumber\"]\n                            );\n\n\n                            // const bookings = this.state.bookings.slice(0);\n                            this.state.bookings.push(eachBooking)\n\n\n                            // console.log(bookings)\n\n                            this.setState({\n                                bookings: this.state.bookings,\n                                clicked: 'block'\n                            });\n\n                        });\n                    });\n\n                //   console.log(blocks.data)\n            } catch (e) {\n                console.log(e);\n            }\n        }\n\n    }\n\n    public async searchByLocation(val: string) {\n\n        console.log(val)\n\n        if (val == \"General Practioner\") {\n\n            this.setState({\n                showSpecialist: 'none',\n                showDivider: 'none',\n                showGeneralPractioner: 'block',\n                showNRIC: 'none',\n                showGeneralTypeDropDown: 'block'\n            });\n\n\n\n\n        }\n        if (val == \"Specialist\") {\n            this.setState({\n                showSpecialist: 'block',\n                showDivider: 'none',\n                showGeneralPractioner: 'none',\n                showNRIC: 'none',\n                showGeneralTypeDropDown: 'block'\n            });\n\n        }\n\n        if (val == \"communityHealth\") {\n\n            this.setState({\n                showSpecialist: 'none',\n                showDivider: 'none',\n                showGeneralPractioner: 'none',\n                showNRIC: 'none',\n                showGeneralTypeDropDownHPB: 'block',\n                showDIVHPBcomuunityHealth: \"block\",\n                showDIVHPBworkplaceHealth: \"none\"\n            });\n\n\n\n\n        }\n\n        if (val == \"workplaceHealth\") {\n\n            this.setState({\n                showSpecialist: 'none',\n                showDivider: 'none',\n                showGeneralPractioner: 'none',\n                showNRIC: 'none',\n                showGeneralTypeDropDownHPB: 'block',\n                showDIVHPBcomuunityHealth: \"none\",\n                showDIVHPBworkplaceHealth: \"block\"\n            });\n\n\n\n\n        }\n\n       \n\n        if (val == \"NRIC\") {\n            var apiURL: string\n            apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/citizen/' + this.state.inputValue;\n            fetch(apiURL)\n                .then(function (response) {\n\n                    return response.json();\n                })\n                .then((myJson) => {\n                    this.state.bookings.length = 0;\n                    myJson.data.forEach(element => {\n                        var eachBooking = new Booking(\n                            element[\"_id\"],\n                            element[\"nric\"],\n                            element[\"citizenName\"],\n                            element[\"citizenSalutation\"],\n                            element[\"citizenEmail\"],\n                            element[\"citizenNumber\"],\n                            element[\"generalType\"],\n                            element[\"serviceName\"],\n                            element[\"serviceProviderName\"],\n                            element[\"serviceProviderEmail\"],\n                            element[\"serviceProviderPhone\"],\n                            element[\"serviceStartDate\"],\n                            element[\"serviceStartTime\"],\n                            element[\"serviceProviderLocation\"],\n                            element[\"bookingStatus\"],\n                            element[\"queueNumber\"]\n                        );\n\n\n                        // const bookings = this.state.bookings.slice(0);\n                        this.state.bookings.push(eachBooking)\n\n\n                        // console.log(bookings)\n\n                        this.setState({\n                            bookings: this.state.bookings,\n                            clicked: 'block',\n                            showDivCitizenAppoinments: 'block'\n                        });\n\n                    });\n                });\n        }\n        // if (searchMethod == \"location\") {\n        //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n        //     document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n\n        // }\n        // else {\n        //     console.log(apiURL)\n        //     if (this.state.inputValue == '') {\n        //         apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n        //     }\n        //     // document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n\n        // }\n\n\n    }\n\n    render() {\n\n\n        return (\n\n            <div>\n\n\n\n                <StyledSection>\n\n                    <Modal.Base\n                        show={this.state.showModal}\n                        animationFrom=\"bottom\"\n                        enableOverlayClick={true}\n                    // onOverlayClick={closeModal()}\n                    >\n                        <Modal.Box onClose={() => {\n\n                            this.setState({\n                                showModal: false\n                            });\n\n\n\n                        }}>\n                            <ModalContent>\n                                <span>Send to queue succesfully</span>\n                            </ModalContent>\n                        </Modal.Box>\n                    </Modal.Base>\n\n                    <Layout.Container>\n\n\n\n                        <Breadcrumb links={[{ title: 'Home', url: '/Home' }, { title: 'Appointments' }]} />\n\n\n                        Change Agency View:\n                        <div id='divAgency' className=\"inlinecontent\" style={{ justifyItems: \"start\", maxWidth: '400px' }}>\n                            <InputSelect\n                                options={[\n                                    { value: \"HPB\", label: \"HPB\" },\n                                    { value: \"Hospital\", label: \"Hospital\" },\n\n                                ]}\n\n                                valueExtractor={(item) => item.value}\n                                listExtractor={(item) => item.label}\n\n                                displayValueExtractor={(item) => item.label}\n                                placeholder={this.state.agencySelection}\n                                onSelectItem={(item, selectedValue) => {\n                                    this.setState({ inputValue: selectedValue }, () => {\n                                        this.ddlAgency(selectedValue)\n\n                                    });\n                                }} />\n\n                        </div>\n\n                        <br />\n\n                        <div id='hpbView' style={{display: this.state.showDivHPBView}}>\n\n\n                            <Container>\n                                <OptionContainer>\n                                    <RadioButton value=\"A\" id=\"multiple-options-a\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'A',\n                                            showSpecialist: 'block',\n                                            showDivider: 'block',\n                                            showGeneralPractioner: 'block',\n                                            showNRIC: 'none',\n                                            showGeneralTypeDropDown: 'none',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: false,\n                                            showGeneralTypeDropDownHPB: \"none\"\n\n                                        }\n\n                                        );\n\n                                        this.loadData();\n                                    }\n\n                                    } checked={this.state.selected === \"A\"} />\n                                    <Label htmlFor=\"multiple-options-a\">View All Appointments</Label>\n                                </OptionContainer>\n                                <OptionContainer>\n                                    <RadioButton value=\"B\" id=\"multiple-options-b\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'B',\n                                            showSpecialist: 'none',\n                                            showDivider: 'none',\n                                            showGeneralPractioner: 'none',\n                                            showNRIC: 'block',\n                                            showGeneralTypeDropDown: 'none',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: true,\n                                            showGeneralTypeDropDownHPB: \"none\"\n\n                                        }\n\n                                        );\n                                    }} checked={this.state.selected === \"B\"} />\n                                    <Label htmlFor=\"multiple-options-b\">View appointments by NRIC</Label>\n                                </OptionContainer>\n\n\n                                <OptionContainer>\n                                    <RadioButton value=\"C\" id=\"multiple-options-c\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'C',\n                                            showSpecialist: 'none',\n                                            showDivider: 'none',\n                                            showGeneralPractioner: 'none',\n                                            showNRIC: 'none',\n                                            showGeneralTypeDropDown: 'none',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: true,\n                                            showGeneralTypeDropDownHPB: \"block\",\n                                            showDIVHPBworkplaceHealth :\"none\",\n                                            showDIVHPBcomuunityHealth: \"none\"\n\n                                        }\n\n                                        );\n                                    }} checked={this.state.selected === \"C\"} />\n                                    <Label htmlFor=\"multiple-options-c\">View appointments by service</Label>\n                                </OptionContainer>\n                                \n                            </Container>\n\n                            <div className=\"spacer2\"></div>\n\n                            <div id='divNRIC' style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showNRIC }}>\n                                <div style={{ 'margin': '5px' }}>\n                                    <Text.Body >Search by NRIC: </Text.Body>\n                                </div>\n                                <InputGroup addon={{\n                                    type: 'custom'\n                                }} placeholder=\"Type NRIC here...\"\n\n                                    onChange={evt => this.updateInputValue(evt)}\n                                />\n\n                                <div style={{ 'padding': '5px' }}></div>\n                                <Button.Default onClick={() => this.searchByLocation(\"NRIC\")} >Search</Button.Default>\n                            </div>\n\n\n                            <div id='divLocation' className=\"inlinecontent\" style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showGeneralTypeDropDownHPB }}>\n                                <InputSelect\n                                    options={[\n                                        { value: \"communityHealth\", label: \"communityHealth\" },\n                                        { value: \"workplaceHealth\", label: \"workplaceHealth\" },\n\n                                    ]}\n\n                                    valueExtractor={(item) => item.value}\n                                    listExtractor={(item) => item.label}\n                                    displayValueExtractor={(item) => item.label}\n                                    placeholder=\"Select a service type\"\n                                    onSelectItem={(item, selectedValue) => {\n                                        this.setState({ inputValue: selectedValue }, () => {\n                                            this.searchByLocation(selectedValue)\n                                        });\n                                    }} />\n\n                            </div>\n\n                            {/* <div id='divLocation' className=\"inlinecontent\" style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showGeneralTypeDropDown }}>\n                                <InputSelect\n                                    options={[\n                                        { value: \"General Practioner\", label: \"General Practioner\" },\n                                        { value: \"Specialist\", label: \"Specialist\" },\n\n                                    ]}\n\n                                    valueExtractor={(item) => item.value}\n                                    listExtractor={(item) => item.label}\n                                    displayValueExtractor={(item) => item.label}\n                                    placeholder=\"Select a service type\"\n                                    onSelectItem={(item, selectedValue) => {\n                                        this.setState({ inputValue: selectedValue }, () => {\n                                            this.searchByLocation(selectedValue)\n                                        });\n                                    }} />\n\n                            </div> */}\n\n\n\n                            <div className=\"spacer5\"></div>\n\n                            <div id='divAppointments' >\n\n                                <div id='divGeneralPractioner' className='rcorner2' style={{ 'display': this.state.showDIVHPBcomuunityHealth }}>\n\n\n                                    <StyledContainer>\n                                        <Text.H3>Appointments [HPB Consultation - communityHealth]</Text.H3>\n                                        <Text.Body>Government services appointments</Text.Body>\n                                        <Main>\n\n\n\n\n                                            <Accordion.Base className='base' >\n                                                {this.state.bookings.filter((element => element.GeneralType == 'HPB Consultation - communityHealth')).map((input, index) => {\n                                                    var showButton = 'none';\n                                                    if (input.BookingStatus == 'New') {\n                                                        showButton = 'block';\n                                                    }\n                                                    console.log(this.state.bookings)\n                                                    return (\n                                                        <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                            <Text.Body>\n                                                                <ul>\n                                                                    <li>\n                                                                        <b>Citizen Name :</b>  {input.CitizenName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Name:</b>  {input.ServiceName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Status:</b>  {input.BookingStatus}\n                                                                    </li>\n                                                                </ul>\n                                                                <div style={{ 'display': showButton }}>\n                                                                    <Button.Default\n                                                                        onClick={() => this.checkPage(this.handle200, input.Id!!, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input)}\n                                                                    >Send to Queue</Button.Default>\n                                                                </div>\n\n                                                            </Text.Body>\n                                                        </Accordion.Item>\n                                                    )\n                                                })}\n                                            </Accordion.Base>\n\n                                        </Main>\n\n\n                                        <div className=\"spacer3\"></div>\n                                    </StyledContainer>\n                                    </div>\n                                    \n                                    <br />\n                                    \n                                    <div id='divGeneralPractioner' className='rcorner' style={{ 'display': this.state.showDIVHPBworkplaceHealth }}>\n\n                                    <StyledContainer>\n                                        <Text.H3>Appointments [HPB Consultation - workplaceHealth]</Text.H3>\n                                        <Text.Body>Government services appointments</Text.Body>\n                                        <Main>\n\n\n\n\n                                            <Accordion.Base className='base' >\n                                                {this.state.bookings.filter((element => element.GeneralType == 'HPB Consultation - workplaceHealth')).map((input, index) => {\n                                                    var showButton = 'none';\n                                                    if (input.BookingStatus == 'New') {\n                                                        showButton = 'block';\n                                                    }\n                                                    console.log(this.state.bookings)\n                                                    return (\n                                                        <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                            <Text.Body>\n                                                                <ul>\n                                                                    <li>\n                                                                        <b>Citizen Name :</b>  {input.CitizenName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Name:</b>  {input.ServiceName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Status:</b>  {input.BookingStatus}\n                                                                    </li>\n                                                                </ul>\n                                                                <div style={{ 'display': showButton }}>\n                                                                    <Button.Default\n                                                                        onClick={() => this.checkPage(this.handle200, input.Id!!, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input)}\n                                                                    >Send to Queue</Button.Default>\n                                                                </div>\n\n                                                            </Text.Body>\n                                                        </Accordion.Item>\n                                                    )\n                                                })}\n                                            </Accordion.Base>\n\n                                        </Main>\n\n\n                                        <div className=\"spacer3\"></div>\n                                    </StyledContainer>\n\n                                    </div>\n\n                                \n                                <div id='divDivider' className=\"spacer5\" style={{ 'display': this.state.showDivider }}></div>\n\n                                <div id='divCitizenAppointments' style={{ 'display': this.state.showDivCitizenAppoinments }}>\n                                    <Main>\n\n\n\n\n                                        <Accordion.Base className='base' >\n                                            {\n\n                                                this.state.bookings.filter((element => element.ServiceProviderLocation == 'Tampines')).map(\n\n\n                                                    (input, index) => {\n\n                                                        var showButton = 'none';\n                                                        if (input.BookingStatus == 'New') {\n                                                            showButton = 'block';\n                                                        }\n\n                                                        return (\n                                                            <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                                <Text.Body>\n                                                                    <ul>\n                                                                        <li>\n                                                                            <b>Citizen Name :</b>  {input.CitizenName}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Name:</b>  {input.ServiceName}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Status:</b>  {input.BookingStatus}\n                                                                        </li>\n                                                                    </ul>\n                                                                    <div style={{ 'display': showButton }}>\n                                                                        <Button.Default\n                                                                            onClick={() => this.checkPage(this.handle200, input.Id!!, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input)}\n                                                                        >Send to Queue</Button.Default>\n                                                                    </div>\n\n                                                                </Text.Body>\n                                                            </Accordion.Item>\n                                                        )\n\n\n\n\n                                                    })}\n                                        </Accordion.Base>\n\n                                    </Main>\n                                </div>\n\n                            \n\n\n                            </div>\n\n                        </div>\n\n                        <div id='hospitalView' style={{display: this.state.showHospitalView}}>\n\n\n                            <Container>\n                                <OptionContainer>\n                                    <RadioButton value=\"A\" id=\"multiple-options-a\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'A',\n                                            showSpecialist: 'block',\n                                            showDivider: 'block',\n                                            showGeneralPractioner: 'block',\n                                            showNRIC: 'none',\n                                            showGeneralServiceDropDownHospital: 'none',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: false\n                                        }\n\n                                        );\n\n                                        this.loadData();\n                                    }\n\n                                    } checked={this.state.selected === \"A\"} />\n                                    <Label htmlFor=\"multiple-options-a\">View All Appointments</Label>\n                                </OptionContainer>\n                                <OptionContainer>\n                                    <RadioButton value=\"B\" id=\"multiple-options-b\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'B',\n                                            showSpecialist: 'none',\n                                            showDivider: 'none',\n                                            showGeneralPractioner: 'none',\n                                            showNRIC: 'block',\n                                            showGeneralServiceDropDownHospital: 'none',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: true\n\n                                        }\n\n                                        );\n                                    }} checked={this.state.selected === \"B\"} />\n                                    <Label htmlFor=\"multiple-options-b\">View appointments by NRIC</Label>\n                                </OptionContainer>\n                                <OptionContainer>\n                                    <RadioButton value=\"C\" id=\"multiple-options-c\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            showGeneralServiceDropDownHospital: 'block',\n                                            // selected: 'C',\n                                            // showSpecialist: 'none',\n                                            // showDivider: 'none',\n                                            // showGeneralPractioner: 'none',\n                                            // showNRIC: 'none',\n                                            // showGeneralServiceDropDownHospital: 'block',\n                                            // showDivCitizenAppoinments: 'none',\n                                            // chooseOtherOptions: true\n                                        });\n\n                                    }} checked={this.state.selected === \"C\"} />\n                                    <Label htmlFor=\"multiple-options-c\">View Appointments by Service Type</Label>\n                                </OptionContainer>\n                            </Container>\n\n                            <div className=\"spacer2\"></div>\n\n                            <div id='divNRIC' style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showNRIC }}>\n                                <div style={{ 'margin': '5px' }}>\n                                    <Text.Body >Search by NRIC: </Text.Body>\n                                </div>\n                                <InputGroup addon={{\n                                    type: 'custom'\n                                }} placeholder=\"Type NRIC here...\"\n\n                                    onChange={evt => this.updateInputValue(evt)}\n                                />\n\n                                <div style={{ 'padding': '5px' }}></div>\n                                <Button.Default onClick={() => this.searchByLocation(\"NRIC\")} >Search</Button.Default>\n                            </div>\n\n                            <div  className=\"inlinecontent\" style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showGeneralServiceDropDownHospital }}>\n                                <InputSelect\n                                    options={[\n                                        { value: \"General Practioner\", label: \"General Practioner\" },\n                                        { value: \"Specialist\", label: \"Specialist\" },\n\n                                    ]}\n\n                                    valueExtractor={(item) => item.value}\n                                    listExtractor={(item) => item.label}\n                                    displayValueExtractor={(item) => item.label}\n                                    placeholder=\"Select a service type\"\n                                    onSelectItem={(item, selectedValue) => {\n                                        this.setState({ inputValue: selectedValue }, () => {\n                                            this.searchByLocation(selectedValue)\n                                        });\n                                    }} />\n\n                            </div>\n\n\n\n                            <div className=\"spacer5\"></div>\n\n                            <div id='divAppointments' >\n\n                                <div id='divGeneralPractioner' className='rcorner2' style={{ 'display': this.state.showGeneralPractioner }}>\n\n\n                                    <StyledContainer>\n                                        <Text.H3>Appointments [General Practioner]</Text.H3>\n                                        <Text.Body>Government services appointments</Text.Body>\n                                        <Main>\n\n\n\n\n                                            <Accordion.Base className='base' >\n                                                {this.state.bookings.filter((element => element.GeneralType == 'General Practionar')).map((input, index) => {\n                                                    var showButton = 'none';\n                                                    if (input.BookingStatus == 'New') {\n                                                        showButton = 'block';\n                                                    }\n                                                    console.log(this.state.bookings)\n                                                    return (\n                                                        <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                            <Text.Body>\n                                                                <ul>\n                                                                    <li>\n                                                                        <b>Citizen Name :</b>  {input.CitizenName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Name:</b>  {input.ServiceName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Status:</b>  {input.BookingStatus}\n                                                                    </li>\n                                                                </ul>\n                                                                <div style={{ 'display': showButton }}>\n                                                                    <Button.Default\n                                                                        onClick={() => this.checkPage(this.handle200, input.Id!!, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input)}\n                                                                    >Send to Queue</Button.Default>\n                                                                </div>\n\n                                                            </Text.Body>\n                                                        </Accordion.Item>\n                                                    )\n                                                })}\n                                            </Accordion.Base>\n\n                                        </Main>\n\n\n                                        <div className=\"spacer3\"></div>\n                                    </StyledContainer>\n\n\n                                </div>\n                                <div id='divDivider' className=\"spacer5\" style={{ 'display': this.state.showDivider }}></div>\n\n                                <div id='divCitizenAppointments' style={{ 'display': this.state.showDivCitizenAppoinments }}>\n                                    <Main>\n\n\n\n\n                                        <Accordion.Base className='base' >\n                                            {\n\n                                                this.state.bookings.filter((element => element.ServiceProviderLocation == 'Tampines')).map(\n\n\n                                                    (input, index) => {\n\n                                                        var showButton = 'none';\n                                                        if (input.BookingStatus == 'New') {\n                                                            showButton = 'block';\n                                                        }\n\n                                                        return (\n                                                            <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                                <Text.Body>\n                                                                    <ul>\n                                                                        <li>\n                                                                            <b>Citizen Name :</b>  {input.CitizenName}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Name:</b>  {input.ServiceName}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Status:</b>  {input.BookingStatus}\n                                                                        </li>\n                                                                    </ul>\n                                                                    <div style={{ 'display': showButton }}>\n                                                                        <Button.Default\n                                                                            onClick={() => this.checkPage(this.handle200, input.Id!!, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input)}\n                                                                        >Send to Queue</Button.Default>\n                                                                    </div>\n\n                                                                </Text.Body>\n                                                            </Accordion.Item>\n                                                        )\n\n\n\n\n                                                    })}\n                                        </Accordion.Base>\n\n                                    </Main>\n                                </div>\n\n                                <div id='divSpecialist' className='rcorner' style={{ 'display': this.state.showSpecialist }}>\n\n\n                                    <StyledContainer>\n                                        <Text.H3>Appointments [Specialist]</Text.H3>\n                                        <Text.Body>Government services appointments</Text.Body>\n                                        <Main>\n\n\n\n\n                                            <Accordion.Base className='base' >\n                                                {\n\n                                                    this.state.bookings.filter((element => element.GeneralType == 'Specialist')).map(\n\n\n                                                        (input, index) => {\n\n                                                            var showButton = 'none';\n                                                            if (input.BookingStatus == 'New') {\n                                                                showButton = 'block';\n                                                            }\n                                                            console.log(this.state.bookings)\n                                                            if (input.GeneralType == 'General Practionar') {\n                                                            }\n                                                            return (\n                                                                <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                                    <Text.Body>\n                                                                        <ul>\n                                                                            <li>\n                                                                                <b>Citizen Name :</b>  {input.CitizenName}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Service Name:</b>  {input.ServiceName}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Service Status:</b>  {input.BookingStatus}\n                                                                            </li>\n                                                                        </ul>\n                                                                        <div style={{ 'display': showButton }}>\n                                                                            <Button.Default\n                                                                                onClick={() => this.checkPage(this.handle200, input.Id!!, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber, input)}\n                                                                            >Send to Queue</Button.Default>\n                                                                        </div>\n\n                                                                    </Text.Body>\n                                                                </Accordion.Item>\n                                                            )\n\n\n\n\n                                                        })}\n                                            </Accordion.Base>\n\n                                        </Main>\n\n\n                                        <div className=\"spacer3\"></div>\n                                    </StyledContainer>\n                                </div>\n\n\n                            </div>\n\n                        </div>\n                    </Layout.Container>\n                </StyledSection>\n            </div>\n        )\n    }\n\n    ddlAgency(selectedValue: any) {\n        if (selectedValue == \"HPB\") {\n            this.setState({\n                showDivHPBView: \"block\",\n                showHospitalView: \"none\",\n                showDivCitizenAppoinments: \"none\"\n                // showCurrentCitizen: \"none\",\n                // showDivHPBService: \"block\",\n                // showDIVHospitalservice:\"none\",\n                // agencySelection: \"HPB\",\n                // serviceSelection: \"communityHealth\"\n            })\n        }\n        else {\n            this.setState({\n                showDivHPBView: \"none\",\n                showHospitalView: \"block\",\n                showDivCitizenAppoinments: \"none\",\n\n                // showCurrentCitizen: \"none\",\n                // showDivHPBService: \"none\",\n                // showDIVHospitalservice: \"block\",\n                // agencySelection: \"Hospital\",\n                // serviceSelection: \"Doctor\"\n\n            })\n        }\n    }\n\n    handle200(response) {\n        console.log('handle200 has received:', response);\n    }\n\n    checkPage(callback, bookingId: string, nric: string, citizenName: string, citizenEmail: string, citizenNumber: string, booking: Booking) {\n        this.state.bookings.forEach(element => queueNumberArray.push(Number(element.QueueNumber.slice(1))));\n\n        console.log(\"test!!\" + queueNumberArray)\n\n        var num = Math.max.apply(null, queueNumberArray) + 1;\n\n        console.log(num);\n\n        var str = String(num);\n\n        while (str.length < 4) str = \"0\" + str;\n\n        str = \"H\" + str;\n        booking.QueueNumber = str;\n\n        console.log(str)\n\n\n\n        const queueObject = {\n            \"_id\": bookingId,\n            \"nric\": nric,\n            \"citizenName\": citizenName,\n            \"citizenEmail\": citizenEmail,\n            \"citizenNumber\": booking.CitizenNumber,\n            \"citizenSalutation\": booking.CitizenSalutation,\n            \"generalType\": booking.GeneralType,\n            \"serviceName\": booking.ServiceName,\n            \"serviceProviderEmail\": booking.ServiceProviderEmail,\n            \"serviceProviderName\": booking.ServiceProviderName,\n            \"serviceStartDate\": booking.ServiceStartDate,\n            \"serviceProviderPhone\": booking.ServiceProviderPhone,\n            \"serviceStartTime\": booking.ServiceStartTime,\n            \"serviceProviderLocation\": booking.ServiceProviderLocation,\n            \"bookingStatus\": booking.BookingStatus,\n            \"queueNumber\": str,\n        }\n\n        const myJSON = encodeURI(JSON.stringify(queueObject));\n\n\n        const xhr = new XMLHttpRequest(),\n            method = \"GET\",\n            url = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId + \"&exchangeID=master&bindingKey=sgh.doctor&bookingDetails=\" + myJSON;\n\n        // initialize a new GET request\n        xhr.open(method, url, true);\n\n        // respond to every readyState change\n        xhr.onreadystatechange = () => {\n\n            // ignore all readyStates other than \"DONE\"\n            if (xhr.readyState !== XMLHttpRequest.DONE) { return; }\n\n            // call the callback with status\n            if (xhr.status === 200) {\n                this.setState({\n                    showModal: true\n                });\n                return callback(xhr.status);\n            }\n\n            // got something other than 200,\n            // re-initialize and send another GET request\n            xhr.open(method, url, true);\n            xhr.send();\n        }\n\n        // send the initial GET request\n        xhr.send();\n    }\n\n    updateInputValue(evt) {\n        const val = evt.target.value;\n        this.setState({\n            inputValue: val\n        });\n\n\n\n    }\n}\n\nexport default Appointment;\n\n\n\n\n\nvar pad = function (num) {\n    var str = String(num++);\n    while (str.length < 4) str = \"0\" + str;\n    return str;\n};\n\n\n// function closeModalFn(): (() => void) | undefined { \n//     throw new Error('Function not implemented.');\n// }\n// const [show, setShow ] = useState(false)\n// function closeModal(): (() => void) | undefined {\n//     document.getElementById(\"divModal\")!!.style.display = \"none\";\n//     throw new Error('Function not implemented.');\n// }\n// call checkPage once\n\n"]},"metadata":{},"sourceType":"module"}