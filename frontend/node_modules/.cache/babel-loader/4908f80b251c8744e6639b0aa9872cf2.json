{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Appointments.tsx\";\nimport React from 'react';\nimport '../App.css';\nimport { Text, Button, Layout, BoxContainer, Breadcrumb, InputGroup, Accordion, InputSelect, Modal } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nimport Booking from \"../models/booking\";\nconst StyledContainer = styled(Layout.GridContainer)`\n    grid-template-rows: 1fr;\n    grid-template-columns: 12fr;\n    grid-template-areas:\n        \"title\"\n        \"button \"\n        \"queue\";\n    grid-gap: 0.25rem;\n    grid-row-gap: 16px;\n`;\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\nconst Main = styled.main`\n  color: white;\n  grid-area: queue;\n  padding: 0.25rem;\n`;\n\nclass Appointment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookings: [],\n      inputValue: '',\n      clicked: 'none'\n    };\n    this.searchByLocation = this.searchByLocation.bind(this);\n  }\n\n  async searchByLocation(searchMethod) {\n    var apiURL;\n\n    if (searchMethod == \"location\") {\n      apiURL = 'http://localhost:3001/api/booking/location/';\n      document.getElementById(\"outsideCitizenInfoDiv\").style.display = \"none\";\n    } else {\n      apiURL = 'http://localhost:3001/api/booking/citizen/';\n      document.getElementById(\"outsideCitizenInfoDiv\").style.display = \"block\";\n    }\n\n    fetch(apiURL + this.state.inputValue).then(function (response) {\n      return response.json();\n    }).then(myJson => {\n      myJson.data.forEach(element => {\n        var eachBooking = new Booking(element[\"_id\"], element[\"nric\"], element[\"citizenName\"], element[\"citizenSalutation\"], element[\"citizenEmail\"], element[\"citizenNumber\"], element[\"serviceName\"], element[\"serviceProviderName\"], element[\"serviceProviderEmail\"], element[\"serviceProviderPhone\"], element[\"serviceStartDate\"], element[\"serviceStartTime\"], element[\"serviceProviderLocation\"], element[\"bookingStatus\"]);\n        this.state.bookings.length = 0;\n        const bookings = this.state.bookings.slice(0);\n        bookings.push(eachBooking);\n        this.setState({\n          bookings: bookings,\n          clicked: 'block'\n        });\n      });\n    });\n  }\n\n  render() {\n    var _this$state$bookings$, _this$state$bookings$2, _this$state$bookings$3, _this$state$bookings$4;\n\n    return /*#__PURE__*/React.createElement(StyledSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"// Note: maintain the visibility in your state\", /*#__PURE__*/React.createElement(Modal.Base, {\n      show: show,\n      animationFrom: \"bottom\",\n      enableOverlayClick: true,\n      onOverlayClick: closeModalFn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Box, {\n      onClose: closeModalFn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(CustomContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 4\n      }\n    }, \"I am a Modal\")))), /*#__PURE__*/React.createElement(Layout.Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      links: [{\n        title: 'Home',\n        url: '/Home'\n      }, {\n        title: 'Appointments'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(StyledContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text.H3, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, \"View appointments by NRIC:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inlinecontent\",\n      style: {\n        justifyItems: \"start\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      addon: {\n        type: 'custom'\n      },\n      placeholder: \"Type NRIC here...\",\n      onChange: evt => this.updateInputValue(evt),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button.Default, {\n      onClick: () => this.searchByLocation(\"NRIC\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(Text.H3, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, \"View appointments by Location: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inlinecontent\",\n      style: {\n        justifyItems: \"start\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputSelect, {\n      options: [{\n        value: \"Tampines\",\n        label: \"Tampines\"\n      }, {\n        value: \"Woodlands\",\n        label: \"Woodlands\"\n      }, {\n        value: \"Toa Payoh\",\n        label: \"Toa Payoh\"\n      }, {\n        value: \"Punggol\",\n        label: \"Punggol\"\n      }],\n      valueExtractor: item => item.value,\n      listExtractor: item => item.label,\n      displayValueExtractor: item => item.label,\n      onSelectItem: (item, selectedValue) => {\n        this.setState({\n          inputValue: selectedValue\n        }, () => {\n          this.searchByLocation('location');\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"outsideCitizenInfoDiv\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BoxContainer, {\n      title: \"Citizen Information\",\n      collapsible: false,\n      className: \"textleft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: \"2rem\",\n        minWidth: \"1080px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Layout.GridContainer, {\n      className: \"column4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 41\n      }\n    }, \"NRIC\"), /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 41\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 41\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 41\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 41\n      }\n    }, (_this$state$bookings$ = this.state.bookings[0]) === null || _this$state$bookings$ === void 0 ? void 0 : _this$state$bookings$.Nric), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 41\n      }\n    }, (_this$state$bookings$2 = this.state.bookings[0]) === null || _this$state$bookings$2 === void 0 ? void 0 : _this$state$bookings$2.CitizenName), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 41\n      }\n    }, (_this$state$bookings$3 = this.state.bookings[0]) === null || _this$state$bookings$3 === void 0 ? void 0 : _this$state$bookings$3.CitizenNumber), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 41\n      }\n    }, (_this$state$bookings$4 = this.state.bookings[0]) === null || _this$state$bookings$4 === void 0 ? void 0 : _this$state$bookings$4.CitizenEmail)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(StyledContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text.H3, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, \"Appointments\"), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }, \"Government services appointments\"), /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Base, {\n      className: \"base\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }, this.state.bookings.map(function (input, index) {\n      return /*#__PURE__*/React.createElement(Accordion.Item, {\n        title: input.ServiceName,\n        key: index,\n        expanded: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Text.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 57\n        }\n      }, \"Citizen Name :\"), \"  \", input.CitizenName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 57\n        }\n      }, \"Citizen Number: \"), \" \", input.CitizenNumber), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 57\n        }\n      }, \"Citizen Email: \"), \" \", input.CitizenEmail), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 57\n        }\n      }, \"Service start date:\"), \"  \", input.ServiceStartDate), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 57\n        }\n      }, \"Service start time:\"), \"  \", input.ServiceStartTime), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 57\n        }\n      }, \"Service Name:\"), \"  \", input.ServiceName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 57\n        }\n      }, \"Service Provider Location:\"), \"  \", input.ServiceProviderLocation)), /*#__PURE__*/React.createElement(Button.Default, {\n        onClick: () => checkPage(handle200, input.Id, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 49\n        }\n      }, \"Send to Queue\")));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n  updateInputValue(evt) {\n    const val = evt.target.value;\n    this.setState({\n      inputValue: val\n    });\n  }\n\n}\n\nexport default Appointment;\n\nfunction handle200(response) {\n  console.log('handle200 has received:', response);\n}\n\nfunction checkPage(callback, bookingId, nric, citizenName, citizenEmail, citizenNumber) {\n  const queueObject = {\n    \"_id\": bookingId,\n    \"nric\": nric,\n    \"citizenName\": citizenName,\n    \"citizenEmail\": citizenEmail,\n    \"citizenNumber\": citizenNumber\n  };\n  const myJSON = encodeURI(JSON.stringify(queueObject));\n  const xhr = new XMLHttpRequest(),\n        method = \"GET\",\n        url = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId + \"&exchangeID=hospital&bindingKey=doctor&bookingDetails=\" + myJSON; // initialize a new GET request\n\n  xhr.open(method, url, true); // respond to every readyState change\n\n  xhr.onreadystatechange = function () {\n    // ignore all readyStates other than \"DONE\"\n    if (xhr.readyState !== XMLHttpRequest.DONE) {\n      return;\n    } // call the callback with status\n\n\n    if (xhr.status === 200) {\n      return callback(xhr.status);\n    } // got something other than 200,\n    // re-initialize and send another GET request\n\n\n    xhr.open(method, url, true);\n    xhr.send();\n  }; // send the initial GET request\n\n\n  xhr.send();\n} // call checkPage once","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Appointments.tsx"],"names":["React","Text","Button","Layout","BoxContainer","Breadcrumb","InputGroup","Accordion","InputSelect","Modal","styled","Booking","StyledContainer","GridContainer","StyledSection","Section","Main","main","Appointment","Component","constructor","props","state","bookings","inputValue","clicked","searchByLocation","bind","searchMethod","apiURL","document","getElementById","style","display","fetch","then","response","json","myJson","data","forEach","element","eachBooking","length","slice","push","setState","render","show","closeModalFn","title","url","justifyItems","type","evt","updateInputValue","value","label","item","selectedValue","padding","minWidth","Nric","CitizenName","CitizenNumber","CitizenEmail","map","input","index","ServiceName","ServiceStartDate","ServiceStartTime","ServiceProviderLocation","checkPage","handle200","Id","val","target","console","log","callback","bookingId","nric","citizenName","citizenEmail","citizenNumber","queueObject","myJSON","encodeURI","JSON","stringify","xhr","XMLHttpRequest","method","open","onreadystatechange","readyState","DONE","status","send"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport '../App.css';\nimport { Text, Button, Layout, BoxContainer, Breadcrumb, InputGroup, Accordion, InputSelect, Modal,  } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nimport Booking from \"../models/booking\";\n\nconst StyledContainer = styled(Layout.GridContainer)`\n    grid-template-rows: 1fr;\n    grid-template-columns: 12fr;\n    grid-template-areas:\n        \"title\"\n        \"button \"\n        \"queue\";\n    grid-gap: 0.25rem;\n    grid-row-gap: 16px;\n`;\n\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n\nconst Main = styled.main`\n  color: white;\n  grid-area: queue;\n  padding: 0.25rem;\n`;\n\ninterface MyState {\n    bookings: Booking[],\n    inputValue: string,\n    clicked: string\n}\n\n\n\n\nclass Appointment extends React.Component<{}, MyState> {\n\n    \n\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            inputValue: '',\n            clicked: 'none'\n\n        };\n        this.searchByLocation = this.searchByLocation.bind(this)\n    }\n\n    public async searchByLocation(searchMethod: string) {\n\n        var apiURL: string\n        if (searchMethod == \"location\") {\n            apiURL = 'http://localhost:3001/api/booking/location/';\n            document.getElementById(\"outsideCitizenInfoDiv\")!!.style.display = \"none\";\n\n        }\n        else {\n            apiURL = 'http://localhost:3001/api/booking/citizen/';\n            document.getElementById(\"outsideCitizenInfoDiv\")!!.style.display = \"block\";\n\n        }\n\n        fetch(apiURL + this.state.inputValue)\n            .then(function (response) {\n                return response.json();\n            })\n            .then((myJson) => {\n                myJson.data.forEach(element => {\n                    var eachBooking = new Booking(\n                        element[\"_id\"],\n                        element[\"nric\"],\n                        element[\"citizenName\"],\n                        element[\"citizenSalutation\"],\n                        element[\"citizenEmail\"],\n                        element[\"citizenNumber\"],\n                        element[\"serviceName\"],\n                        element[\"serviceProviderName\"],\n                        element[\"serviceProviderEmail\"],\n                        element[\"serviceProviderPhone\"],\n                        element[\"serviceStartDate\"],\n                        element[\"serviceStartTime\"],\n                        element[\"serviceProviderLocation\"],\n                        element[\"bookingStatus\"]\n                    );\n\n                    this.state.bookings.length = 0\n                    const bookings = this.state.bookings.slice(0);\n                    bookings.push(eachBooking)\n\n                    this.setState({\n                        bookings: bookings,\n                        clicked: 'block'\n                    });\n\n                });\n            });\n    }\n\n    render() {\n        return (\n            \n            <StyledSection>\n                // Note: maintain the visibility in your state\n\n<Modal.Base\n\tshow={show}\n\tanimationFrom=\"bottom\"\n\tenableOverlayClick={true}\n\tonOverlayClick={closeModalFn}\n>\n\t<Modal.Box onClose={closeModalFn}>\n\t\t<CustomContent>\n\t\t\t<span>I am a Modal</span>\n\t\t</CustomContent>\n\t</Modal.Box>\n</Modal.Base>\n                <Layout.Container>\n\n                \t\n\n                    <Breadcrumb links={[{ title: 'Home', url: '/Home' }, { title: 'Appointments' }]} />\n                    <StyledContainer>\n                        <Text.H3>View appointments by NRIC:</Text.H3>\n                        <div className=\"inlinecontent\" style={{ justifyItems: \"start\", }}>\n                            <InputGroup addon={{\n                                type: 'custom'\n                            }} placeholder=\"Type NRIC here...\"\n                                onChange={evt => this.updateInputValue(evt)}\n                            />\n                            <Button.Default onClick={() => this.searchByLocation(\"NRIC\")} >Search</Button.Default>\n                        </div>\n\n                        <Text.H3>View appointments by Location: </Text.H3>\n                        <div className=\"inlinecontent\" style={{ justifyItems: \"start\", }}>\n\n                            <InputSelect\n                                options={[\n                                    { value: \"Tampines\", label: \"Tampines\" },\n                                    { value: \"Woodlands\", label: \"Woodlands\" },\n                                    { value: \"Toa Payoh\", label: \"Toa Payoh\" },\n                                    { value: \"Punggol\", label: \"Punggol\" },\n                                ]}\n                                valueExtractor={(item) => item.value}\n                                listExtractor={(item) => item.label}\n                                displayValueExtractor={(item) => item.label}\n                                onSelectItem={(item, selectedValue) => {\n                                    this.setState({ inputValue: selectedValue }, () => {\n                                        this.searchByLocation('location')\n                                    });\n                                }} />\n\n                        </div>\n                        <div className=\"spacer2\"></div>\n                        <div id=\"outsideCitizenInfoDiv\" style={{ display: 'none' }}>\n                            <BoxContainer title=\"Citizen Information\" collapsible={false} className=\"textleft\" >\n                                <div style={{ padding: \"2rem\", minWidth: \"1080px\" }}>\n                                    <Layout.GridContainer className=\"column4\">\n                                        <Text.Body weight=\"semibold\">NRIC</Text.Body>\n                                        <Text.Body weight=\"semibold\">Name</Text.Body>\n                                        <Text.Body weight=\"semibold\">Phone Number</Text.Body>\n                                        <Text.Body weight=\"semibold\">Email</Text.Body>\n                                        <Text.Body>{this.state.bookings[0]?.Nric}</Text.Body>\n                                        <Text.Body>{this.state.bookings[0]?.CitizenName}</Text.Body>\n                                        <Text.Body>{this.state.bookings[0]?.CitizenNumber}</Text.Body>\n                                        <Text.Body>{this.state.bookings[0]?.CitizenEmail}</Text.Body>\n                                    </Layout.GridContainer>\n                                </div>\n                            </BoxContainer>\n                        </div>\n\n                    </StyledContainer>\n                    <div className=\"spacer5\"></div>\n                    <StyledContainer>\n                        <Text.H3>Appointments</Text.H3>\n                        <Text.Body>Government services appointments</Text.Body>\n                        <Main>\n\n\n                            <Accordion.Base className='base' >\n                                {this.state.bookings.map(function (input, index) {\n                                    return (\n                                        <Accordion.Item title={input.ServiceName} key={index} expanded={false}>\n                                            <Text.Body>\n                                                <ul>\n                                                    <li>\n                                                        <b>Citizen Name :</b>  {input.CitizenName}\n                                                    </li>\n                                                    <li>\n                                                        <b>Citizen Number: </b> {input.CitizenNumber}\n                                                    </li>\n                                                    <li>\n                                                        <b>Citizen Email: </b> {input.CitizenEmail}\n                                                    </li>\n                                                    <li>\n                                                        <b>Service start date:</b>  {input.ServiceStartDate}\n                                                    </li>\n                                                    <li>\n                                                        <b>Service start time:</b>  {input.ServiceStartTime}\n                                                    </li>\n                                                    <li>\n                                                        <b>Service Name:</b>  {input.ServiceName}\n                                                    </li>\n                                                    <li>\n                                                        <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                    </li>\n                                                </ul>\n\n                                                <Button.Default\n                                                    onClick={() => checkPage(handle200, input.Id!!, input.Nric, input.CitizenName, input.CitizenEmail, input.CitizenNumber)}\n                                                >Send to Queue</Button.Default>\n                                            </Text.Body>\n                                        </Accordion.Item>\n                                    )\n                                })}\n                            </Accordion.Base>\n\n                        </Main>\n                        <div className=\"spacer3\"></div>\n                    </StyledContainer>\n                </Layout.Container>\n            </StyledSection>\n\n        )\n    }\n\n    updateInputValue(evt) {\n        const val = evt.target.value;\n        this.setState({\n            inputValue: val\n        });\n    }\n}\n\nexport default Appointment;\n\nfunction handle200(response) {\n    console.log('handle200 has received:', response);\n}\n\nfunction checkPage(callback, bookingId : string, nric : string, citizenName : string, citizenEmail : string, citizenNumber : string) {\n    const queueObject = {\n        \"_id\" :bookingId,\n        \"nric\":nric,\n        \"citizenName\":citizenName,\n        \"citizenEmail\":citizenEmail,\n        \"citizenNumber\":citizenNumber\n    }\n\n    const myJSON = encodeURI(JSON.stringify(queueObject));\n\n\n    const xhr = new XMLHttpRequest(),\n        method = \"GET\",\n        url = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId + \"&exchangeID=hospital&bindingKey=doctor&bookingDetails=\" + myJSON;\n    // initialize a new GET request\n    xhr.open(method, url, true);\n\n    // respond to every readyState change\n    xhr.onreadystatechange = function () {\n\n        // ignore all readyStates other than \"DONE\"\n        if (xhr.readyState !== XMLHttpRequest.DONE) { return; }\n\n        // call the callback with status\n        if (xhr.status === 200) {\n            \n            return callback(xhr.status);\n        }\n\n        // got something other than 200,\n        // re-initialize and send another GET request\n        xhr.open(method, url, true);\n        xhr.send();\n    }\n\n    // send the initial GET request\n    xhr.send();\n}\n\n// call checkPage once\n\n"]},"metadata":{},"sourceType":"module"}