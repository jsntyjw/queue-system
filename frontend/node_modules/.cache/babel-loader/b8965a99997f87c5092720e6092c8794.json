{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/CreateNewBooking.tsx\";\nimport React from 'react';\nimport * as toastr from 'toastr';\nimport BaseService from '../service/base.service';\nimport { BookingPage } from './displayBookingForm';\nvar sessionResult = sessionStorage.getItem('data') || '{}';\nvar obj = JSON.parse(sessionResult);\nconsole.log(sessionResult);\nvar nric = obj.NRIC;\nexport default class Create extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSave = () => {\n      BaseService.create(\"/booking/create\", this.state.booking).then(rp => {\n        if (rp.Status) {\n          toastr.success('Booking saved.');\n          this.setState({\n            booking: {\n              Nric: nric,\n              CitizenName: '',\n              CitizenSalutation: '',\n              CitizenEmail: '',\n              CitizenNumber: '',\n              ServiceName: '',\n              ServiceProviderName: '',\n              ServiceProviderEmail: '',\n              ServiceProviderPhone: '',\n              ServiceStartDate: '',\n              ServiceStartTime: '',\n              ServiceProviderLocation: '',\n              BookingStatus: 'New',\n              Id: ''\n            }\n          });\n        } else {\n          toastr.error(rp.Messages);\n          console.log(\"Messages: \" + rp.Messages);\n          console.log(\"Exception: \" + rp.Exception);\n        }\n      });\n    };\n\n    this.state = {\n      booking: {\n        Nric: nric,\n        CitizenName: '',\n        CitizenSalutation: '',\n        CitizenEmail: '',\n        CitizenNumber: '',\n        ServiceName: '',\n        ServiceProviderName: '',\n        ServiceProviderEmail: '',\n        ServiceProviderPhone: '',\n        ServiceStartDate: '',\n        ServiceStartTime: '',\n        ServiceProviderLocation: '',\n        BookingStatus: 'New',\n        queueNumber: ''\n      }\n    };\n    this.onFieldValueChange = this.onFieldValueChange.bind(this);\n  }\n\n  onFieldValueChange(fieldName, value) {\n    const nextState = { ...this.state,\n      booking: { ...this.state.booking,\n        [fieldName]: value\n      }\n    };\n    this.setState(nextState);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(BookingPage, {\n      booking: this.state.booking,\n      onChange: this.onFieldValueChange,\n      onSave: this.onSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/CreateNewBooking.tsx"],"names":["React","toastr","BaseService","BookingPage","sessionResult","sessionStorage","getItem","obj","JSON","parse","console","log","nric","NRIC","Create","Component","constructor","props","onSave","create","state","booking","then","rp","Status","success","setState","Nric","CitizenName","CitizenSalutation","CitizenEmail","CitizenNumber","ServiceName","ServiceProviderName","ServiceProviderEmail","ServiceProviderPhone","ServiceStartDate","ServiceStartTime","ServiceProviderLocation","BookingStatus","Id","error","Messages","Exception","queueNumber","onFieldValueChange","bind","fieldName","value","nextState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as toastr from 'toastr';\nimport Booking from '../models/booking';\nimport BaseService from '../service/base.service';\nimport { BookingPage } from './displayBookingForm';\n \n\n\ninterface IProps { \n    history: History;\n    //Map properties match\n    match:{ \n        isExact: boolean\n        params: {\n            id:string\n        },\n        path: string,\n        url: string,\n    }\n}\ninterface IState {\n    booking: Booking\n}\n\n\nvar sessionResult = sessionStorage.getItem('data') || '{}'\n    var obj = JSON.parse(sessionResult);\n    console.log(sessionResult)\n    \n    var nric = obj.NRIC\n\n\n\nexport default class Create extends  React.Component<IProps, IState> {\n    \n    constructor(props:IProps) {\n        super(props);\n         \n        this.state = {\n            booking: {\n                Nric : nric,\n                CitizenName : '',\n                CitizenSalutation : '',\n                CitizenEmail : '',\n                CitizenNumber : '',\n                ServiceName : '',\n                ServiceProviderName : '',\n                ServiceProviderEmail : '',\n                ServiceProviderPhone : '',\n                ServiceStartDate : '',\n                ServiceStartTime : '',\n                ServiceProviderLocation : '',\n                BookingStatus : 'New',\n                queueNumber : ''\n            }\n        }\n        this.onFieldValueChange = this.onFieldValueChange.bind(this);\n    }\n\n    private onFieldValueChange(fieldName: string, value: string) { \n        const nextState = {\n            ...this.state,\n            booking: {\n                ...this.state.booking,\n                [fieldName]: value,\n            }\n        };\n\n        this.setState(nextState);\n    }\n    private onSave = () => { \n        BaseService.create<Booking>(\"/booking/create\", this.state.booking).then(\n            (rp) => {\n                if (rp.Status) {\n                    toastr.success('Booking saved.'); \n\n\n                    this.setState({\n                        booking: {\n                            Nric : nric,\n                            CitizenName : '',\n                            CitizenSalutation : '',\n                            CitizenEmail : '',\n                            CitizenNumber : '',\n                            ServiceName : '',\n                            ServiceProviderName : '',\n                            ServiceProviderEmail : '',\n                            ServiceProviderPhone : '',\n                            ServiceStartDate : '',\n                            ServiceStartTime : '',\n\n                            ServiceProviderLocation : '',\n                            BookingStatus : 'New',\n                            Id: '',\n                        }\n                    });\n                     \n                } else {\n                    toastr.error(rp.Messages);\n                    console.log(\"Messages: \" + rp.Messages);\n                    console.log(\"Exception: \" + rp.Exception);\n                }\n            }\n        );\n\n    } \n     \n    render() {\n        return (\n            <BookingPage\n                booking={this.state.booking}\n                onChange={this.onFieldValueChange}\n                onSave={this.onSave}\n            />\n        );\n    }     \n     \n}"]},"metadata":{},"sourceType":"module"}