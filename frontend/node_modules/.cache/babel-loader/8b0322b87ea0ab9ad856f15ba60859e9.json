{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/ServiceCounter.tsx\";\nimport React from 'react';\nimport '../App.css';\nimport { Text, Button, Layout, Breadcrumb, BoxContainer, InputSelect, Modal } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nimport Booking from \"../models/booking\";\nimport { ModalContent } from \"../models/doc-elements\";\nimport BaseService from '../service/base.service';\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n\nclass ServiceCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookings: [],\n      _bookingId: \"\",\n      nric: \"\",\n      citizenName: \"\",\n      citizenNumber: \"\",\n      citizenEmail: \"\",\n      inputValue: \"\",\n      queueNumber: \"\",\n      showModal: false,\n      citizenSalutation: \"\",\n      generalType: \"\",\n      serviceName: \"\",\n      serviceProviderEmail: \"\",\n      serviceProviderName: \"\",\n      serviceStartDate: \"\",\n      serviceProviderPhone: \"\",\n      serviceStartTime: \"\",\n      serviceProviderLocation: \"\",\n      bookingStatus: \"\",\n      queueName: \"communityHealthQueue\",\n      elementNobodyInQueue: \"none\",\n      showCurrentCitizen: \"none\",\n      showDivHPBService: \"block\",\n      showDIVHospitalservice: \"none\",\n      agencySelection: \"HPB\",\n      serviceSelection: \"communityHealth\",\n      routingKey: \"sgh.doctor\",\n      showButtonNextNumber: \"block\",\n      showNextServiceHospital: \"none\",\n      showNextServiceHPB: \"none\",\n      nextServiceSelection: \"\"\n    };\n    this.consumeQueue = this.consumeQueue.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData(); // if(this.state.chooseOtherOptions == false){\n    // }\n  }\n\n  async loadData() {\n    // if(this.state.chooseOtherOptions == false){\n    try {\n      var apiURL;\n      apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n      console.log(apiURL); // if (searchMethod == \"location\") {\n      //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n      //     document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n      // }\n      // else {\n      //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/citizen/' + this.state.inputValue;\n      //     console.log(apiURL)\n      //     if (this.state.inputValue == '') {\n      //         apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n      //     }\n      //     // document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n      // }\n\n      fetch(apiURL).then(function (response) {\n        return response.json();\n      }).then(myJson => {\n        this.setState({\n          bookings: []\n        });\n        myJson.data.forEach(element => {\n          if (element[\"bookingStatus\"] == this.state.serviceSelection) {\n            var eachBooking = new Booking(element[\"_id\"], element[\"nric\"], element[\"citizenName\"], element[\"citizenSalutation\"], element[\"citizenEmail\"], element[\"citizenNumber\"], element[\"generalType\"], element[\"serviceName\"], element[\"serviceProviderName\"], element[\"serviceProviderEmail\"], element[\"serviceProviderPhone\"], element[\"serviceStartDate\"], element[\"serviceStartTime\"], element[\"serviceProviderLocation\"], element[\"bookingStatus\"], element[\"queueNumber\"]);\n            this.state.bookings.push(eachBooking);\n          } // const bookings = this.state.bookings.slice(0);\n          // console.log(bookings)\n\n\n          this.setState({\n            bookings: this.state.bookings // clicked: 'block'\n\n          });\n\n          if (this.state.bookings.length > 0) {\n            var _this$state$bookings$;\n\n            this.setState({\n              showCurrentCitizen: \"block\",\n              showButtonNextNumber: \"none\",\n              nric: this.state.bookings[0].Nric,\n              citizenName: this.state.bookings[0].CitizenName,\n              citizenNumber: this.state.bookings[0].CitizenNumber,\n              citizenEmail: this.state.bookings[0].CitizenEmail,\n              citizenSalutation: this.state.bookings[0].CitizenSalutation,\n              _bookingId: ((_this$state$bookings$ = this.state.bookings[0].Id) === null || _this$state$bookings$ === void 0 ? void 0 : _this$state$bookings$.toString()) || '',\n              generalType: this.state.bookings[0].GeneralType,\n              serviceName: this.state.bookings[0].ServiceName,\n              serviceProviderName: this.state.bookings[0].ServiceProviderName,\n              serviceProviderEmail: this.state.bookings[0].ServiceProviderEmail,\n              serviceProviderPhone: this.state.bookings[0].ServiceProviderPhone,\n              serviceProviderPhone: this.state.bookings[0].ServiceProviderPhone,\n              serviceProviderPhone: this.state.bookings[0].ServiceProviderPhone,\n              serviceProviderPhone: this.state.bookings[0].ServiceProviderPhone,\n              serviceProviderPhone: this.state.bookings[0].ServiceProviderPhone\n            });\n\n            if (this.state.agencySelection == \"HPB\") {\n              this.setState({\n                showNextServiceHospital: \"none\",\n                showNextServiceHPB: \"block\"\n              });\n            } else {\n              this.setState({\n                showNextServiceHospital: \"block\",\n                showNextServiceHPB: \"none\"\n              });\n            }\n          } else {\n            this.setState({\n              showCurrentCitizen: \"none\",\n              showButtonNextNumber: \"block\"\n            });\n          }\n        });\n        console.log(this.state.bookings);\n      }); //   console.log(blocks.data)\n    } catch (e) {\n      console.log(e);\n    } // }\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(StyledSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Base, {\n      show: this.state.showModal,\n      animationFrom: \"bottom\",\n      enableOverlayClick: true // onOverlayClick={closeModal()}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Box, {\n      onClose: () => {\n        this.setState({\n          showModal: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ModalContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 29\n      }\n    }, \"Send to queue succesfully\")))), /*#__PURE__*/React.createElement(Layout.Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      links: [{\n        title: 'Home',\n        url: 'http://localhost:3000/ServiceCounter'\n      }, {\n        title: 'Service Counter'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }\n    }), \"Agency:\", /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divAgency\",\n      className: \"inlinecontent\",\n      style: {\n        justifyItems: \"start\",\n        maxWidth: '400px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputSelect, {\n      options: [{\n        value: \"HPB\",\n        label: \"HPB\"\n      }, {\n        value: \"Hospital\",\n        label: \"Hospital\"\n      }],\n      valueExtractor: item => item.value,\n      listExtractor: item => item.label,\n      displayValueExtractor: item => item.label,\n      placeholder: this.state.agencySelection,\n      onSelectItem: (item, selectedValue) => {\n        this.setState({\n          inputValue: selectedValue\n        }, () => {\n          this.ddlAgency(selectedValue);\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    }), \"Service:\", /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divHPBService\",\n      className: \"inlinecontent\",\n      style: {\n        justifyItems: \"start\",\n        maxWidth: '400px',\n        display: this.state.showDivHPBService\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputSelect, {\n      options: [{\n        value: \"communityHealth\",\n        label: \"communityHealth\"\n      }, {\n        value: \"workplaceHealth\",\n        label: \"workplaceHealth\"\n      }],\n      valueExtractor: item => item.value,\n      listExtractor: item => item.label,\n      displayValueExtractor: item => item.label,\n      placeholder: this.state.serviceSelection,\n      onSelectItem: (item, selectedValue) => {\n        this.setState({\n          inputValue: selectedValue\n        }, () => {\n          this.ddlService(selectedValue);\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divHospitalService\",\n      className: \"inlinecontent\",\n      style: {\n        justifyItems: \"start\",\n        maxWidth: '400px',\n        display: this.state.showDIVHospitalservice\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputSelect, {\n      options: [{\n        value: \"Doctor\",\n        label: \"Doctor\"\n      }, {\n        value: \"Payment\",\n        label: \"Payment\"\n      }, {\n        value: \"Pharmacy\",\n        label: \"Pharmacy\"\n      }],\n      valueExtractor: item => item.value,\n      listExtractor: item => item.label,\n      displayValueExtractor: item => item.label,\n      placeholder: this.state.serviceSelection,\n      onSelectItem: (item, selectedValue) => {\n        this.setState({\n          inputValue: selectedValue\n        }, () => {\n          this.ddlService(selectedValue);\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }\n    }), \"Your are selecting agency: \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 48\n      }\n    }, this.state.agencySelection, \",\"), \" and service as \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 100\n      }\n    }, this.state.serviceSelection), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divButtonNextPatient\",\n      style: {\n        display: this.state.showButtonNextNumber\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button.Default, {\n      className: \"buttonsuccess\",\n      onClick: () => this.consumeQueue(this.handle200, \"nextPatient\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 25\n      }\n    }, \"Next Number\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        'color': \"green\",\n        'fontSize': 30,\n        'display': this.state.elementNobodyInQueue\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 25\n      }\n    }, \"There is no one in the queue\\uD83D\\uDE04\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"divCurrentCitizen\",\n      style: {\n        display: this.state.showCurrentCitizen\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Layout.GridContainer, {\n      className: \"column2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Text.H3, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 33\n      }\n    }, \"Currently Serving\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(BoxContainer, {\n      title: \"Citizen Information\",\n      collapsible: false,\n      className: \"textleft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: \"2rem\",\n        minWidth: \"1080px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Layout.GridContainer, {\n      className: \"column4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 45\n      }\n    }, \"NRIC\"), /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 45\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 45\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(Text.Body, {\n      weight: \"semibold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 45\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 45\n      }\n    }, this.state.nric), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 45\n      }\n    }, this.state.citizenName), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 45\n      }\n    }, this.state.citizenNumber), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 45\n      }\n    }, this.state.citizenEmail)))), /*#__PURE__*/React.createElement(Text.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 33\n      }\n    }, \"Next service: \"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: this.state.showNextServiceHPB\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Layout.GridContainer, {\n      className: \"column4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputSelect, {\n      placeholder: \"Select\",\n      options: [{\n        value: \"Doctor\",\n        label: \"Doctor\"\n      }],\n      valueExtractor: item => item.value,\n      listExtractor: item => item.label,\n      displayValueExtractor: item => item.label,\n      onSelectItem: (item, selectedValue) => {\n        this.setState({\n          nextServiceSelection: selectedValue,\n          routingKey: \"sgh.doctor\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: this.state.showNextServiceHospital\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Layout.GridContainer, {\n      className: \"column4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputSelect, {\n      placeholder: \"Select\",\n      options: [{\n        value: \"Payment\",\n        label: \"Payment\"\n      }, {\n        value: \"Pharmacy\",\n        label: \"Pharmacy\"\n      }],\n      valueExtractor: item => item.value,\n      listExtractor: item => item.label,\n      displayValueExtractor: item => item.label,\n      onSelectItem: (item, selectedValue) => {\n        this.setState({\n          nextServiceSelection: selectedValue,\n          routingKey: \"sgh.doctor\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button.Default, {\n      onClick: () => this.consumeQueue(this.handle200, \"sendtoNextService\", this.state._bookingId, this.state.nric, this.state.citizenName, this.state.citizenEmail, this.state.citizenNumber, this.state.queueNumber),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 25\n      }\n    }, \"Send to next service\"))));\n  }\n\n  ddlAgency(selectedValue) {\n    if (selectedValue == \"HPB\") {\n      this.setState({\n        showCurrentCitizen: \"none\",\n        showDivHPBService: \"block\",\n        showDIVHospitalservice: \"none\",\n        agencySelection: \"HPB\",\n        serviceSelection: \"Select a Service\"\n      });\n      this.loadData();\n    } else {\n      this.setState({\n        showCurrentCitizen: \"none\",\n        showDivHPBService: \"none\",\n        showDIVHospitalservice: \"block\",\n        agencySelection: \"Hospital\",\n        serviceSelection: \"Select a Service\"\n      });\n      this.loadData();\n    }\n  }\n\n  ddlService(selectedValue) {\n    if (selectedValue == \"communityHealth\") {\n      this.setState({\n        showCurrentCitizen: \"none\",\n        showDivHPBService: \"block\",\n        showDIVHospitalservice: \"none\",\n        serviceSelection: \"communityHealth\",\n        queueName: \"communityHealthQueue\",\n        routingKey: \"hpb.chq\"\n      });\n      this.loadData();\n    } else if (selectedValue == \"workplaceHealth\") {\n      this.setState({\n        showCurrentCitizen: \"none\",\n        showDivHPBService: \"none\",\n        showDIVHospitalservice: \"block\",\n        serviceSelection: \"workplaceHealth\",\n        queueName: \"workplaceHealthQueue\",\n        routingKey: \"hpb.whq\"\n      });\n      this.loadData();\n    } else if (selectedValue == \"Doctor\") {\n      this.setState({\n        showCurrentCitizen: \"none\",\n        showDivHPBService: \"none\",\n        showDIVHospitalservice: \"block\",\n        serviceSelection: \"Doctor\",\n        queueName: \"doctorQueue\"\n      });\n    } else if (selectedValue == \"Payment\") {\n      this.setState({\n        showCurrentCitizen: \"none\",\n        showDivHPBService: \"none\",\n        showDIVHospitalservice: \"block\",\n        serviceSelection: \"Payment\",\n        queueName: \"paymentQueue\"\n      });\n      this.loadData();\n    } else if (selectedValue == \"Pharmacy\") {\n      this.setState({\n        showCurrentCitizen: \"none\",\n        showDivHPBService: \"none\",\n        showDIVHospitalservice: \"block\",\n        serviceSelection: \"Pharmacy\",\n        queueName: \"pharmacyQueue\"\n      });\n      this.loadData();\n    }\n  }\n\n  handle200(response) {\n    console.log('handle200 has received:', response);\n  }\n\n  consumeQueue(callback, buttonSelected, bookingId, nric, citizenName, citizenEmail, citizenNumber, queueNumber) {\n    var respectiveURL = \"\";\n\n    if (buttonSelected == \"nextPatient\") {\n      respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=\" + this.state.queueName; // respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=PaymentQueue\"\n      // respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=PharmacyQueue\"\n\n      console.log(\"testing:\" + respectiveURL);\n    }\n\n    if (buttonSelected == \"sendtoNextService\") {\n      const queueObject = {\n        \"_id\": bookingId,\n        \"nric\": nric,\n        \"citizenName\": citizenName,\n        \"citizenEmail\": citizenEmail,\n        \"citizenNumber\": citizenNumber,\n        \"queueNumber\": queueNumber\n      };\n      var myJSON = encodeURI(JSON.stringify(queueObject));\n      respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId.toString() + \"&exchangeID=master&bindingKey=\" + this.state.routingKey + \"&bookingDetails=\" + myJSON;\n      console.log(\"jiawei testing now: \" + respectiveURL); // respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId + \"&exchangeID=master&bindingKey=sgh.Payment&bookingDetails=\" + myJSON;\n      // respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId + \"&exchangeID=master&bindingKey=sgh.Pharmacy&bookingDetails=\" + myJSON;\n\n      console.log(\"------- testing here -------\");\n      console.log(respectiveURL);\n    }\n\n    const xhr = new XMLHttpRequest(),\n          method = \"GET\",\n          url = respectiveURL; // initialize a new GET request\n\n    xhr.open(method, url, true); // respond to every readyState change\n\n    xhr.onreadystatechange = () => {\n      // ignore all readyStates other than \"DONE\"\n      if (xhr.readyState !== XMLHttpRequest.DONE) {\n        // console.log(\"placeHolder1\")     \n        // this.setState({\n        //     elementNobodyInQueue : \"block\"\n        // })\n        return;\n      } // call the callback with status\n\n\n      if (xhr.status === 200) {\n        var calledBooking;\n\n        if (buttonSelected == \"nextPatient\") {\n          this.setState({\n            _bookingId: JSON.parse(xhr.responseText)._id,\n            nric: JSON.parse(xhr.responseText).nric,\n            citizenName: JSON.parse(xhr.responseText).citizenName,\n            citizenEmail: JSON.parse(xhr.responseText).citizenEmail,\n            citizenNumber: JSON.parse(xhr.responseText).citizenNumber,\n            citizenSalutation: JSON.parse(xhr.responseText).citizenSalutation,\n            queueNumber: JSON.parse(xhr.responseText).queueNumber,\n            generalType: JSON.parse(xhr.responseText).generalType,\n            serviceName: JSON.parse(xhr.responseText).serviceName,\n            serviceProviderEmail: JSON.parse(xhr.responseText).serviceProviderEmail,\n            serviceProviderName: JSON.parse(xhr.responseText).serviceProviderName,\n            serviceStartDate: JSON.parse(xhr.responseText).serviceStartDate,\n            serviceProviderPhone: JSON.parse(xhr.responseText).serviceProviderPhone,\n            serviceStartTime: JSON.parse(xhr.responseText).serviceStartTime,\n            serviceProviderLocation: JSON.parse(xhr.responseText).serviceProviderLocation,\n            bookingStatus: JSON.parse(xhr.responseText).bookingStatus,\n            elementNobodyInQueue: \"none\",\n            showCurrentCitizen: \"block\"\n          });\n\n          if (this.state.agencySelection == \"HPB\") {\n            this.setState({\n              showNextServiceHPB: 'block',\n              showNextServiceHospital: 'none'\n            });\n          }\n\n          if (this.state.agencySelection == \"Hospital\") {\n            this.setState({\n              showNextServiceHPB: 'none',\n              showNextServiceHospital: 'block'\n            });\n          }\n\n          calledBooking = new Booking(this.state._bookingId, this.state.nric, this.state.citizenName, this.state.citizenSalutation, this.state.citizenEmail, this.state.citizenNumber, this.state.generalType, this.state.serviceName, this.state.serviceProviderName, this.state.serviceProviderEmail, this.state.serviceProviderPhone, this.state.serviceStartDate, this.state.serviceStartTime, this.state.serviceProviderLocation, this.state.bookingStatus, this.state.queueNumber);\n          document.getElementById(\"divCurrentCitizen\").style.display = \"block\";\n          document.getElementById(\"divButtonNextPatient\").style.display = \"none\";\n          calledBooking.BookingStatus = this.state.serviceSelection;\n          BaseService.update(\"/booking/update/\", this.state._bookingId, calledBooking).then(rp => {\n            if (rp.Status) {\n              console.log('Booking saved.');\n            } else {\n              console.log(rp.Messages);\n              console.log(\"Messages: \" + rp.Messages);\n              console.log(\"Exception: \" + rp.Exception);\n            }\n          });\n        }\n\n        if (buttonSelected == \"sendtoNextService\") {\n          this.setState({\n            showModal: true\n          });\n          calledBooking = new Booking(this.state._bookingId, this.state.nric, this.state.citizenName, this.state.citizenSalutation, this.state.citizenEmail, this.state.citizenNumber, this.state.generalType, this.state.serviceName, this.state.serviceProviderName, this.state.serviceProviderEmail, this.state.serviceProviderPhone, this.state.serviceStartDate, this.state.serviceStartTime, this.state.serviceProviderLocation, this.state.bookingStatus, this.state.queueNumber);\n          document.getElementById(\"divCurrentCitizen\").style.display = \"none\";\n          document.getElementById(\"divButtonNextPatient\").style.display = \"block\";\n          calledBooking.BookingStatus = this.state.nextServiceSelection;\n          console.log(this.state);\n          BaseService.update(\"/booking/update/\", this.state._bookingId, calledBooking).then(rp => {\n            if (rp.Status) {\n              console.log('Booking saved.');\n            } else {\n              console.log(rp.Messages);\n              console.log(\"Messages: \" + rp.Messages);\n              console.log(\"Exception: \" + rp.Exception);\n            }\n          });\n        } // console.log(JSON.parse(xhr.responseText));\n\n\n        return callback(xhr.status);\n      } // got something other than 200,\n      // re-initialize and send another GET request\n\n\n      xhr.open(method, url, true);\n      xhr.send();\n    }; // send the initial GET request\n\n\n    xhr.send();\n  }\n\n}\n\nexport default ServiceCounter;","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/ServiceCounter.tsx"],"names":["React","Text","Button","Layout","Breadcrumb","BoxContainer","InputSelect","Modal","styled","Booking","ModalContent","BaseService","StyledSection","Section","ServiceCounter","Component","constructor","props","state","bookings","_bookingId","nric","citizenName","citizenNumber","citizenEmail","inputValue","queueNumber","showModal","citizenSalutation","generalType","serviceName","serviceProviderEmail","serviceProviderName","serviceStartDate","serviceProviderPhone","serviceStartTime","serviceProviderLocation","bookingStatus","queueName","elementNobodyInQueue","showCurrentCitizen","showDivHPBService","showDIVHospitalservice","agencySelection","serviceSelection","routingKey","showButtonNextNumber","showNextServiceHospital","showNextServiceHPB","nextServiceSelection","consumeQueue","bind","componentDidMount","loadData","apiURL","process","env","REACT_APP_MY_EC2_API_ADDRESS","console","log","fetch","then","response","json","myJson","setState","data","forEach","element","eachBooking","push","length","Nric","CitizenName","CitizenNumber","CitizenEmail","CitizenSalutation","Id","toString","GeneralType","ServiceName","ServiceProviderName","ServiceProviderEmail","ServiceProviderPhone","e","render","title","url","justifyItems","maxWidth","value","label","item","selectedValue","ddlAgency","display","ddlService","handle200","padding","minWidth","callback","buttonSelected","bookingId","respectiveURL","queueObject","myJSON","encodeURI","JSON","stringify","xhr","XMLHttpRequest","method","open","onreadystatechange","readyState","DONE","status","calledBooking","parse","responseText","_id","document","getElementById","style","BookingStatus","update","rp","Status","Messages","Exception","send"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SACIC,IADJ,EAEIC,MAFJ,EAGIC,MAHJ,EAIIC,UAJJ,EAKIC,YALJ,EAMIC,WANJ,EAOIC,KAPJ,QAQO,4BARP;AASA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AAGA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAQA,MAAMC,aAAa,GAAGJ,MAAM,CAACL,MAAM,CAACU,OAAR,CAAiB;AAC7C;AACA;AACA,CAHA;;AAyCA,MAAMC,cAAN,SAA6Bd,KAAK,CAACe,SAAnC,CAA0D;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,WAAW,EAAE,EAJJ;AAKTC,MAAAA,aAAa,EAAE,EALN;AAMTC,MAAAA,YAAY,EAAE,EANL;AAOTC,MAAAA,UAAU,EAAE,EAPH;AAQTC,MAAAA,WAAW,EAAE,EARJ;AASTC,MAAAA,SAAS,EAAE,KATF;AAUTC,MAAAA,iBAAiB,EAAE,EAVV;AAWTC,MAAAA,WAAW,EAAE,EAXJ;AAYTC,MAAAA,WAAW,EAAE,EAZJ;AAaTC,MAAAA,oBAAoB,EAAE,EAbb;AAcTC,MAAAA,mBAAmB,EAAE,EAdZ;AAeTC,MAAAA,gBAAgB,EAAE,EAfT;AAgBTC,MAAAA,oBAAoB,EAAE,EAhBb;AAiBTC,MAAAA,gBAAgB,EAAE,EAjBT;AAkBTC,MAAAA,uBAAuB,EAAE,EAlBhB;AAmBTC,MAAAA,aAAa,EAAE,EAnBN;AAoBTC,MAAAA,SAAS,EAAE,sBApBF;AAqBTC,MAAAA,oBAAoB,EAAE,MArBb;AAsBTC,MAAAA,kBAAkB,EAAE,MAtBX;AAuBTC,MAAAA,iBAAiB,EAAC,OAvBT;AAwBTC,MAAAA,sBAAsB,EAAE,MAxBf;AAyBTC,MAAAA,eAAe,EAAE,KAzBR;AA0BTC,MAAAA,gBAAgB,EAAE,iBA1BT;AA2BTC,MAAAA,UAAU,EAAC,YA3BF;AA4BTC,MAAAA,oBAAoB,EAAE,OA5Bb;AA6BTC,MAAAA,uBAAuB,EAAE,MA7BhB;AA8BTC,MAAAA,kBAAkB,EAAE,MA9BX;AA+BTC,MAAAA,oBAAoB,EAAE;AA/Bb,KAAb;AAkCA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAEH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,GADgB,CAEhB;AACA;AACH;;AAEa,QAARA,QAAQ,GAAG;AACb;AACA,QAAI;AACA,UAAIC,MAAJ;AACAA,MAAAA,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,4BAAZ,GAA2C,+BAApD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ,EAHA,CAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAM,MAAAA,KAAK,CAACN,MAAD,CAAL,CACKO,IADL,CACU,UAAUC,QAAV,EAAoB;AAEtB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAJL,EAKKF,IALL,CAKWG,MAAD,IAAY;AACd,aAAKC,QAAL,CAAc;AACV9C,UAAAA,QAAQ,EAAE;AADA,SAAd;AAGA6C,QAAAA,MAAM,CAACE,IAAP,CAAYC,OAAZ,CAAoBC,OAAO,IAAI;AAC3B,cAAIA,OAAO,CAAC,eAAD,CAAP,IAA4B,KAAKlD,KAAL,CAAW0B,gBAA3C,EAA6D;AACzD,gBAAIyB,WAAW,GAAG,IAAI5D,OAAJ,CACd2D,OAAO,CAAC,KAAD,CADO,EAEdA,OAAO,CAAC,MAAD,CAFO,EAGdA,OAAO,CAAC,aAAD,CAHO,EAIdA,OAAO,CAAC,mBAAD,CAJO,EAKdA,OAAO,CAAC,cAAD,CALO,EAMdA,OAAO,CAAC,eAAD,CANO,EAOdA,OAAO,CAAC,aAAD,CAPO,EAQdA,OAAO,CAAC,aAAD,CARO,EASdA,OAAO,CAAC,qBAAD,CATO,EAUdA,OAAO,CAAC,sBAAD,CAVO,EAWdA,OAAO,CAAC,sBAAD,CAXO,EAYdA,OAAO,CAAC,kBAAD,CAZO,EAadA,OAAO,CAAC,kBAAD,CAbO,EAcdA,OAAO,CAAC,yBAAD,CAdO,EAedA,OAAO,CAAC,eAAD,CAfO,EAgBdA,OAAO,CAAC,aAAD,CAhBO,CAAlB;AAmBA,iBAAKlD,KAAL,CAAWC,QAAX,CAAoBmD,IAApB,CAAyBD,WAAzB;AAEH,WAvB0B,CA2B3B;AAGA;;;AAEA,eAAKJ,QAAL,CAAc;AACV9C,YAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QADX,CAEV;;AAFU,WAAd;;AAKA,cAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBoD,MAApB,GAA6B,CAAhC,EAAoC;AAAA;;AAChC,iBAAKN,QAAL,CAAc;AACVzB,cAAAA,kBAAkB,EAAE,OADV;AAEVM,cAAAA,oBAAoB,EAAE,MAFZ;AAIVzB,cAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBqD,IAJnB;AAKVlD,cAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBsD,WAL1B;AAMVlD,cAAAA,aAAa,EAAE,KAAKL,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBuD,aAN5B;AAOVlD,cAAAA,YAAY,EAAE,KAAKN,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBwD,YAP3B;AAQV/C,cAAAA,iBAAiB,EAAE,KAAKV,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuByD,iBARhC;AASVxD,cAAAA,UAAU,EAAE,+BAAKF,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuB0D,EAAvB,gFAA2BC,QAA3B,OAAyC,EAT3C;AAUVjD,cAAAA,WAAW,EAAE,KAAKX,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuB4D,WAV1B;AAWVjD,cAAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuB6D,WAX1B;AAYVhD,cAAAA,mBAAmB,EAAE,KAAKd,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuB8D,mBAZlC;AAaVlD,cAAAA,oBAAoB,EAAE,KAAKb,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuB+D,oBAbnC;AAcVhD,cAAAA,oBAAoB,EAAE,KAAKhB,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBgE,oBAdnC;AAeVjD,cAAAA,oBAAoB,EAAE,KAAKhB,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBgE,oBAfnC;AAgBVjD,cAAAA,oBAAoB,EAAE,KAAKhB,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBgE,oBAhBnC;AAiBVjD,cAAAA,oBAAoB,EAAE,KAAKhB,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBgE,oBAjBnC;AAkBVjD,cAAAA,oBAAoB,EAAE,KAAKhB,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBgE;AAlBnC,aAAd;;AAqBA,gBAAG,KAAKjE,KAAL,CAAWyB,eAAX,IAA8B,KAAjC,EAAuC;AACnC,mBAAKsB,QAAL,CAAc;AACVlB,gBAAAA,uBAAuB,EAAE,MADf;AAEVC,gBAAAA,kBAAkB,EAAE;AAFV,eAAd;AAIH,aALD,MAMI;AACA,mBAAKiB,QAAL,CAAc;AACVlB,gBAAAA,uBAAuB,EAAE,OADf;AAEVC,gBAAAA,kBAAkB,EAAE;AAFV,eAAd;AAIH;AACJ,WAlCD,MAmCI;AACA,iBAAKiB,QAAL,CAAc;AACVzB,cAAAA,kBAAkB,EAAE,MADV;AAEVM,cAAAA,oBAAoB,EAAE;AAFZ,aAAd;AAIH;AAOJ,SApFD;AAqFAY,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzC,KAAL,CAAWC,QAAvB;AACH,OA/FL,EAnBA,CAoHA;AACH,KArHD,CAqHE,OAAOiE,CAAP,EAAU;AACR1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,CAAZ;AACH,KAzHY,CA0Hb;;AAEH;;AAIDC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,KAAD,CAAO,IAAP;AACI,MAAA,IAAI,EAAE,KAAKnE,KAAL,CAAWS,SADrB;AAEI,MAAA,aAAa,EAAC,QAFlB;AAGI,MAAA,kBAAkB,EAAE,IAHxB,CAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,KAAD,CAAO,GAAP;AAAW,MAAA,OAAO,EAAE,MAAM;AACtB,aAAKsC,QAAL,CAAc;AACVtC,UAAAA,SAAS,EAAE;AADD,SAAd;AAGH,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CALJ,CANJ,CAFJ,eAkBI,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,CAAC;AAAE2D,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,GAAG,EAAE;AAAtB,OAAD,EAAiE;AAAED,QAAAA,KAAK,EAAE;AAAT,OAAjE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,0BAMI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAoB,MAAA,SAAS,EAAC,eAA9B;AAA8C,MAAA,KAAK,EAAE;AAAEE,QAAAA,YAAY,EAAE,OAAhB;AAAyBC,QAAAA,QAAQ,EAAE;AAAnC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AACI,MAAA,OAAO,EAAE,CACL;AAAEC,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OADK,EAEL;AAAED,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,KAAK,EAAE;AAA5B,OAFK,CADb;AAOI,MAAA,cAAc,EAAGC,IAAD,IAAUA,IAAI,CAACF,KAPnC;AAQI,MAAA,aAAa,EAAGE,IAAD,IAAUA,IAAI,CAACD,KARlC;AAUI,MAAA,qBAAqB,EAAGC,IAAD,IAAUA,IAAI,CAACD,KAV1C;AAWI,MAAA,WAAW,EAAE,KAAKzE,KAAL,CAAWyB,eAX5B;AAYI,MAAA,YAAY,EAAE,CAACiD,IAAD,EAAOC,aAAP,KAAyB;AACnC,aAAK5B,QAAL,CAAc;AAAExC,UAAAA,UAAU,EAAEoE;AAAd,SAAd,EAA6C,MAAM;AAC/C,eAAKC,SAAL,CAAeD,aAAf;AAEH,SAHD;AAIH,OAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,eA8BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BJ,2BAkCI;AAAK,MAAA,EAAE,EAAC,eAAR;AAAwB,MAAA,SAAS,EAAC,eAAlC;AAAkD,MAAA,KAAK,EAAE;AAAEL,QAAAA,YAAY,EAAE,OAAhB;AAAyBC,QAAAA,QAAQ,EAAE,OAAnC;AAA4CM,QAAAA,OAAO,EAAC,KAAK7E,KAAL,CAAWuB;AAA/D,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AACI,MAAA,OAAO,EAAE,CACL;AAAEiD,QAAAA,KAAK,EAAE,iBAAT;AAA4BC,QAAAA,KAAK,EAAE;AAAnC,OADK,EAEL;AAAED,QAAAA,KAAK,EAAE,iBAAT;AAA4BC,QAAAA,KAAK,EAAE;AAAnC,OAFK,CADb;AAOI,MAAA,cAAc,EAAGC,IAAD,IAAUA,IAAI,CAACF,KAPnC;AAQI,MAAA,aAAa,EAAGE,IAAD,IAAUA,IAAI,CAACD,KARlC;AAUI,MAAA,qBAAqB,EAAGC,IAAD,IAAUA,IAAI,CAACD,KAV1C;AAWI,MAAA,WAAW,EAAE,KAAKzE,KAAL,CAAW0B,gBAX5B;AAYI,MAAA,YAAY,EAAE,CAACgD,IAAD,EAAOC,aAAP,KAAyB;AACnC,aAAK5B,QAAL,CAAc;AAAExC,UAAAA,UAAU,EAAEoE;AAAd,SAAd,EAA6C,MAAM;AAC/C,eAAKG,UAAL,CAAgBH,aAAhB;AAEH,SAHD;AAIH,OAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAlCJ,eAwDI;AAAK,MAAA,EAAE,EAAC,oBAAR;AAA6B,MAAA,SAAS,EAAC,eAAvC;AAAuD,MAAA,KAAK,EAAE;AAAEL,QAAAA,YAAY,EAAE,OAAhB;AAAyBC,QAAAA,QAAQ,EAAE,OAAnC;AAA4CM,QAAAA,OAAO,EAAE,KAAK7E,KAAL,CAAWwB;AAAhE,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AACI,MAAA,OAAO,EAAE,CACL;AAAEgD,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OADK,EAEL;AAAED,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAFK,EAGL;AAAED,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,KAAK,EAAE;AAA5B,OAHK,CADb;AAQI,MAAA,cAAc,EAAGC,IAAD,IAAUA,IAAI,CAACF,KARnC;AASI,MAAA,aAAa,EAAGE,IAAD,IAAUA,IAAI,CAACD,KATlC;AAWI,MAAA,qBAAqB,EAAGC,IAAD,IAAUA,IAAI,CAACD,KAX1C;AAYI,MAAA,WAAW,EAAE,KAAKzE,KAAL,CAAW0B,gBAZ5B;AAaI,MAAA,YAAY,EAAE,CAACgD,IAAD,EAAOC,aAAP,KAAyB;AACnC,aAAK5B,QAAL,CAAc;AAAExC,UAAAA,UAAU,EAAEoE;AAAd,SAAd,EAA6C,MAAM;AAC/C,eAAKG,UAAL,CAAgBH,aAAhB;AAEH,SAHD;AAIH,OAlBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAxDJ,eA+EI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/EJ,8CAiF+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAK3E,KAAL,CAAWyB,eAAf,MAjF/B,mCAiFmF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKzB,KAAL,CAAW0B,gBAAf,CAjFnF,eAmFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnFJ,eAmFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnFV,eAoFI;AAAK,MAAA,EAAE,EAAC,sBAAR;AAA+B,MAAA,KAAK,EAAE;AAACmD,QAAAA,OAAO,EAAE,KAAK7E,KAAL,CAAW4B;AAArB,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,MAAD,CAAQ,OAAR;AAAgB,MAAA,SAAS,EAAC,eAA1B;AACI,MAAA,OAAO,EAAE,MAAM,KAAKI,YAAL,CAAkB,KAAK+C,SAAvB,EAAkC,aAAlC,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,eAMI;AAAG,MAAA,KAAK,EAAE;AAAE,iBAAS,OAAX;AAAoB,oBAAY,EAAhC;AAAoC,mBAAW,KAAK/E,KAAL,CAAWqB;AAA1D,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDANJ,CApFJ,eA4FI;AAAK,MAAA,EAAE,EAAC,mBAAR;AAA4B,MAAA,KAAK,EAAE;AAAEwD,QAAAA,OAAO,EAAE,KAAK7E,KAAL,CAAWsB;AAAtB,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,MAAD,CAAQ,aAAR;AAAsB,MAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI,oBAAC,IAAD,CAAM,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHJ,eAKI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAMI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAQI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,qBAApB;AAA0C,MAAA,WAAW,EAAE,KAAvD;AAA8D,MAAA,SAAS,EAAC,UAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAE0D,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD,CAAQ,aAAR;AAAsB,MAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,MAAM,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,MAAM,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,MAAM,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,MAAM,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,eAKI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,KAAKjF,KAAL,CAAWG,IAAvB,CALJ,eAMI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,KAAKH,KAAL,CAAWI,WAAvB,CANJ,eAOI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,KAAKJ,KAAL,CAAWK,aAAvB,CAPJ,eAQI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,KAAKL,KAAL,CAAWM,YAAvB,CARJ,CADJ,CADJ,CARJ,eAwBI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAxBJ,CADJ,CAFJ,eAkCI;AAAK,MAAA,KAAK,EAAE;AAACuE,QAAAA,OAAO,EAAE,KAAK7E,KAAL,CAAW8B;AAArB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD,CAAQ,aAAR;AAAsB,MAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,WAAD;AACI,MAAA,WAAW,EAAC,QADhB;AAEI,MAAA,OAAO,EAAE,CACL;AAAE0C,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OADK,CAFb;AAKI,MAAA,cAAc,EAAGC,IAAD,IAAUA,IAAI,CAACF,KALnC;AAMI,MAAA,aAAa,EAAGE,IAAD,IAAUA,IAAI,CAACD,KANlC;AAOI,MAAA,qBAAqB,EAAGC,IAAD,IAAUA,IAAI,CAACD,KAP1C;AAQI,MAAA,YAAY,EAAE,CAACC,IAAD,EAAOC,aAAP,KAAyB;AAEnC,aAAK5B,QAAL,CAAc;AACVhB,UAAAA,oBAAoB,EAAE4C,aADZ;AAEVhD,UAAAA,UAAU,EAAE;AAFF,SAAd;AAIH,OAdL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA,CAlCJ,eAyDI;AAAK,MAAA,KAAK,EAAE;AAACkD,QAAAA,OAAO,EAAE,KAAK7E,KAAL,CAAW6B;AAArB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD,CAAQ,aAAR;AAAsB,MAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,WAAD;AACI,MAAA,WAAW,EAAC,QADhB;AAEI,MAAA,OAAO,EAAE,CACL;AAAE2C,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OADK,EAEL;AAAED,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,KAAK,EAAE;AAA5B,OAFK,CAFb;AAMI,MAAA,cAAc,EAAGC,IAAD,IAAUA,IAAI,CAACF,KANnC;AAOI,MAAA,aAAa,EAAGE,IAAD,IAAUA,IAAI,CAACD,KAPlC;AAQI,MAAA,qBAAqB,EAAGC,IAAD,IAAUA,IAAI,CAACD,KAR1C;AASI,MAAA,YAAY,EAAE,CAACC,IAAD,EAAOC,aAAP,KAAyB;AAEnC,aAAK5B,QAAL,CAAc;AACVhB,UAAAA,oBAAoB,EAAE4C,aADZ;AAEVhD,UAAAA,UAAU,EAAE;AAFF,SAAd;AAIH,OAfL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA,CAzDJ,eAgFI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhFJ,eAmFI,oBAAC,MAAD,CAAQ,OAAR;AACI,MAAA,OAAO,EAAE,MAAM,KAAKK,YAAL,CAAkB,KAAK+C,SAAvB,EAAkC,mBAAlC,EAAuD,KAAK/E,KAAL,CAAWE,UAAlE,EAA8E,KAAKF,KAAL,CAAWG,IAAzF,EAA+F,KAAKH,KAAL,CAAWI,WAA1G,EAAuH,KAAKJ,KAAL,CAAWM,YAAlI,EAAgJ,KAAKN,KAAL,CAAWK,aAA3J,EAA0K,KAAKL,KAAL,CAAWQ,WAArL,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAnFJ,CA5FJ,CAlBJ,CADJ;AA4MH;;AACDoE,EAAAA,SAAS,CAACD,aAAD,EAAqB;AAC1B,QAAIA,aAAa,IAAI,KAArB,EAA4B;AACxB,WAAK5B,QAAL,CAAc;AACVzB,QAAAA,kBAAkB,EAAE,MADV;AAEVC,QAAAA,iBAAiB,EAAE,OAFT;AAGVC,QAAAA,sBAAsB,EAAC,MAHb;AAIVC,QAAAA,eAAe,EAAE,KAJP;AAKVC,QAAAA,gBAAgB,EAAE;AALR,OAAd;AAQA,WAAKS,QAAL;AAEH,KAXD,MAYK;AACD,WAAKY,QAAL,CAAc;AACVzB,QAAAA,kBAAkB,EAAE,MADV;AAEVC,QAAAA,iBAAiB,EAAE,MAFT;AAGVC,QAAAA,sBAAsB,EAAE,OAHd;AAIVC,QAAAA,eAAe,EAAE,UAJP;AAKVC,QAAAA,gBAAgB,EAAE;AALR,OAAd;AAQA,WAAKS,QAAL;AAEH;AACJ;;AAED2C,EAAAA,UAAU,CAACH,aAAD,EAAqB;AAC3B,QAAIA,aAAa,IAAI,iBAArB,EAAwC;AACpC,WAAK5B,QAAL,CAAc;AACVzB,QAAAA,kBAAkB,EAAE,MADV;AAEVC,QAAAA,iBAAiB,EAAE,OAFT;AAGVC,QAAAA,sBAAsB,EAAC,MAHb;AAIVE,QAAAA,gBAAgB,EAAE,iBAJR;AAKVN,QAAAA,SAAS,EAAE,sBALD;AAMVO,QAAAA,UAAU,EAAE;AANF,OAAd;AAQA,WAAKQ,QAAL;AACH,KAVD,MAWK,IAAGwC,aAAa,IAAI,iBAApB,EAAuC;AACxC,WAAK5B,QAAL,CAAc;AACVzB,QAAAA,kBAAkB,EAAE,MADV;AAEVC,QAAAA,iBAAiB,EAAE,MAFT;AAGVC,QAAAA,sBAAsB,EAAE,OAHd;AAIVE,QAAAA,gBAAgB,EAAE,iBAJR;AAKVN,QAAAA,SAAS,EAAE,sBALD;AAMVO,QAAAA,UAAU,EAAE;AANF,OAAd;AASA,WAAKQ,QAAL;AAEH,KAZI,MAaA,IAAGwC,aAAa,IAAI,QAApB,EAA8B;AAC/B,WAAK5B,QAAL,CAAc;AACVzB,QAAAA,kBAAkB,EAAE,MADV;AAEVC,QAAAA,iBAAiB,EAAE,MAFT;AAGVC,QAAAA,sBAAsB,EAAE,OAHd;AAIVE,QAAAA,gBAAgB,EAAE,QAJR;AAKVN,QAAAA,SAAS,EAAE;AALD,OAAd;AAQH,KATI,MAUA,IAAGuD,aAAa,IAAI,SAApB,EAA+B;AAChC,WAAK5B,QAAL,CAAc;AACVzB,QAAAA,kBAAkB,EAAE,MADV;AAEVC,QAAAA,iBAAiB,EAAE,MAFT;AAGVC,QAAAA,sBAAsB,EAAE,OAHd;AAIVE,QAAAA,gBAAgB,EAAE,SAJR;AAKVN,QAAAA,SAAS,EAAE;AALD,OAAd;AAQA,WAAKe,QAAL;AAEH,KAXI,MAYA,IAAGwC,aAAa,IAAI,UAApB,EAAgC;AACjC,WAAK5B,QAAL,CAAc;AACVzB,QAAAA,kBAAkB,EAAE,MADV;AAEVC,QAAAA,iBAAiB,EAAE,MAFT;AAGVC,QAAAA,sBAAsB,EAAE,OAHd;AAIVE,QAAAA,gBAAgB,EAAE,UAJR;AAKVN,QAAAA,SAAS,EAAE;AALD,OAAd;AAQA,WAAKe,QAAL;AAEH;AACJ;;AAGD4C,EAAAA,SAAS,CAACnC,QAAD,EAAW;AAChBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCG,QAAvC;AACH;;AAIDZ,EAAAA,YAAY,CAACkD,QAAD,EAAWC,cAAX,EAAmCC,SAAnC,EAAuDjF,IAAvD,EAAsEC,WAAtE,EAA4FE,YAA5F,EAAmHD,aAAnH,EAA2IG,WAA3I,EAAiK;AAEzK,QAAI6E,aAAa,GAAG,EAApB;;AACA,QAAIF,cAAc,IAAI,aAAtB,EAAqC;AAEjCE,MAAAA,aAAa,GAAG,uFAAuF,KAAKrF,KAAL,CAAWoB,SAAlH,CAFiC,CAGjC;AACA;;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAa4C,aAAzB;AAEH;;AACD,QAAIF,cAAc,IAAI,mBAAtB,EAA2C;AAEvC,YAAMG,WAAW,GAAG;AAChB,eAAOF,SADS;AAEhB,gBAAQjF,IAFQ;AAGhB,uBAAeC,WAHC;AAIhB,wBAAgBE,YAJA;AAKhB,yBAAiBD,aALD;AAMhB,uBAAeG;AANC,OAApB;AASA,UAAI+E,MAAM,GAAGC,SAAS,CAACC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAAD,CAAtB;AACAD,MAAAA,aAAa,GAAG,qFAAqFD,SAAS,CAAGxB,QAAZ,EAArF,GAA8G,gCAA9G,GAAkJ,KAAK5D,KAAL,CAAW2B,UAA7J,GAA0K,kBAA1K,GAA+L4D,MAA/M;AACA/C,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAwB4C,aAApC,EAbuC,CAcvC;AACA;;AAEA7C,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY4C,aAAZ;AAEH;;AAKD,UAAMM,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AAAA,UACIC,MAAM,GAAG,KADb;AAAA,UAEIxB,GAAG,GAAGgB,aAFV,CApCyK,CAuCzK;;AACAM,IAAAA,GAAG,CAACG,IAAJ,CAASD,MAAT,EAAiBxB,GAAjB,EAAsB,IAAtB,EAxCyK,CA0CzK;;AACAsB,IAAAA,GAAG,CAACI,kBAAJ,GAAyB,MAAM;AAE3B;AACA,UAAIJ,GAAG,CAACK,UAAJ,KAAmBJ,cAAc,CAACK,IAAtC,EAA4C;AACxC;AACA;AACA;AACA;AAEA;AACH,OAV0B,CAY3B;;;AACA,UAAIN,GAAG,CAACO,MAAJ,KAAe,GAAnB,EAAwB;AAEpB,YAAIC,aAAJ;;AACA,YAAIhB,cAAc,IAAI,aAAtB,EAAqC;AACjC,eAAKpC,QAAL,CAAc;AACV7C,YAAAA,UAAU,EAAEuF,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6BC,GAD/B;AAEVnG,YAAAA,IAAI,EAAEsF,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6BlG,IAFzB;AAGVC,YAAAA,WAAW,EAAEqF,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6BjG,WAHhC;AAIVE,YAAAA,YAAY,EAAEmF,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6B/F,YAJjC;AAKVD,YAAAA,aAAa,EAAEoF,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6BhG,aALlC;AAMVK,YAAAA,iBAAiB,EAAE+E,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6B3F,iBANtC;AAOVF,YAAAA,WAAW,EAAEiF,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6B7F,WAPhC;AAQVG,YAAAA,WAAW,EAAE8E,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6B1F,WARhC;AAUVC,YAAAA,WAAW,EAAE6E,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6BzF,WAVhC;AAYVC,YAAAA,oBAAoB,EAAE4E,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6BxF,oBAZzC;AAaVC,YAAAA,mBAAmB,EAAE2E,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6BvF,mBAbxC;AAcVC,YAAAA,gBAAgB,EAAE0E,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6BtF,gBAdrC;AAeVC,YAAAA,oBAAoB,EAAEyE,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6BrF,oBAfzC;AAgBVC,YAAAA,gBAAgB,EAAEwE,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6BpF,gBAhBrC;AAiBVC,YAAAA,uBAAuB,EAAEuE,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6BnF,uBAjB5C;AAkBVC,YAAAA,aAAa,EAAEsE,IAAI,CAACW,KAAL,CAAWT,GAAG,CAACU,YAAf,EAA6BlF,aAlBlC;AAmBVE,YAAAA,oBAAoB,EAAE,MAnBZ;AAoBVC,YAAAA,kBAAkB,EAAE;AApBV,WAAd;;AAuBA,cAAG,KAAKtB,KAAL,CAAWyB,eAAX,IAA8B,KAAjC,EAAuC;AACnC,iBAAKsB,QAAL,CAAc;AACVjB,cAAAA,kBAAkB,EAAE,OADV;AAEVD,cAAAA,uBAAuB,EAAE;AAFf,aAAd;AAIH;;AAED,cAAG,KAAK7B,KAAL,CAAWyB,eAAX,IAA8B,UAAjC,EAA4C;AACxC,iBAAKsB,QAAL,CAAc;AACVjB,cAAAA,kBAAkB,EAAE,MADV;AAEVD,cAAAA,uBAAuB,EAAE;AAFf,aAAd;AAIH;;AAGDsE,UAAAA,aAAa,GAAG,IAAI5G,OAAJ,CAAY,KAAKS,KAAL,CAAWE,UAAvB,EAAmC,KAAKF,KAAL,CAAWG,IAA9C,EAAoD,KAAKH,KAAL,CAAWI,WAA/D,EAA4E,KAAKJ,KAAL,CAAWU,iBAAvF,EAA0G,KAAKV,KAAL,CAAWM,YAArH,EAAmI,KAAKN,KAAL,CAAWK,aAA9I,EAA6J,KAAKL,KAAL,CAAWW,WAAxK,EAAqL,KAAKX,KAAL,CAAWY,WAAhM,EAA6M,KAAKZ,KAAL,CAAWc,mBAAxN,EAA6O,KAAKd,KAAL,CAAWa,oBAAxP,EAA8Q,KAAKb,KAAL,CAAWgB,oBAAzR,EAA+S,KAAKhB,KAAL,CAAWe,gBAA1T,EAA4U,KAAKf,KAAL,CAAWiB,gBAAvV,EAAyW,KAAKjB,KAAL,CAAWkB,uBAApX,EAA6Y,KAAKlB,KAAL,CAAWmB,aAAxZ,EAAua,KAAKnB,KAAL,CAAWQ,WAAlb,CAAhB;AAEA+F,UAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA+CC,KAA/C,CAAqD5B,OAArD,GAA+D,OAA/D;AACA0B,UAAAA,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,EAAkDC,KAAlD,CAAwD5B,OAAxD,GAAkE,MAAlE;AACAsB,UAAAA,aAAa,CAACO,aAAd,GAA8B,KAAK1G,KAAL,CAAW0B,gBAAzC;AAEAjC,UAAAA,WAAW,CAACkH,MAAZ,CAA4B,kBAA5B,EAAgD,KAAK3G,KAAL,CAAWE,UAA3D,EAAuEiG,aAAvE,EAAsFxD,IAAtF,CAEKiE,EAAD,IAAQ;AACJ,gBAAIA,EAAE,CAACC,MAAP,EAAe;AACXrE,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,aAFD,MAEO;AACHD,cAAAA,OAAO,CAACC,GAAR,CAAYmE,EAAE,CAACE,QAAf;AACAtE,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAemE,EAAE,CAACE,QAA9B;AACAtE,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBmE,EAAE,CAACG,SAA/B;AACH;AACJ,WAVL;AAaH;;AAED,YAAI5B,cAAc,IAAI,mBAAtB,EAA2C;AACvC,eAAKpC,QAAL,CAAc;AACVtC,YAAAA,SAAS,EAAE;AADD,WAAd;AAIA0F,UAAAA,aAAa,GAAG,IAAI5G,OAAJ,CAAY,KAAKS,KAAL,CAAWE,UAAvB,EAAmC,KAAKF,KAAL,CAAWG,IAA9C,EAAoD,KAAKH,KAAL,CAAWI,WAA/D,EAA4E,KAAKJ,KAAL,CAAWU,iBAAvF,EAA0G,KAAKV,KAAL,CAAWM,YAArH,EAAmI,KAAKN,KAAL,CAAWK,aAA9I,EAA6J,KAAKL,KAAL,CAAWW,WAAxK,EAAqL,KAAKX,KAAL,CAAWY,WAAhM,EAA6M,KAAKZ,KAAL,CAAWc,mBAAxN,EAA6O,KAAKd,KAAL,CAAWa,oBAAxP,EAA8Q,KAAKb,KAAL,CAAWgB,oBAAzR,EAA+S,KAAKhB,KAAL,CAAWe,gBAA1T,EAA4U,KAAKf,KAAL,CAAWiB,gBAAvV,EAAyW,KAAKjB,KAAL,CAAWkB,uBAApX,EAA6Y,KAAKlB,KAAL,CAAWmB,aAAxZ,EAAua,KAAKnB,KAAL,CAAWQ,WAAlb,CAAhB;AAGA+F,UAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA+CC,KAA/C,CAAqD5B,OAArD,GAA+D,MAA/D;AACA0B,UAAAA,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,EAAkDC,KAAlD,CAAwD5B,OAAxD,GAAkE,OAAlE;AAGAsB,UAAAA,aAAa,CAACO,aAAd,GAA8B,KAAK1G,KAAL,CAAW+B,oBAAzC;AAEAS,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzC,KAAjB;AAEAP,UAAAA,WAAW,CAACkH,MAAZ,CAA4B,kBAA5B,EAAgD,KAAK3G,KAAL,CAAWE,UAA3D,EAAuEiG,aAAvE,EAAsFxD,IAAtF,CAEKiE,EAAD,IAAQ;AACJ,gBAAIA,EAAE,CAACC,MAAP,EAAe;AACXrE,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,aAFD,MAEO;AACHD,cAAAA,OAAO,CAACC,GAAR,CAAYmE,EAAE,CAACE,QAAf;AACAtE,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAemE,EAAE,CAACE,QAA9B;AACAtE,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBmE,EAAE,CAACG,SAA/B;AACH;AACJ,WAVL;AAaH,SA5FmB,CAgGpB;;;AAEA,eAAO7B,QAAQ,CAACS,GAAG,CAACO,MAAL,CAAf;AACH,OAhH0B,CAkH3B;AACA;;;AACAP,MAAAA,GAAG,CAACG,IAAJ,CAASD,MAAT,EAAiBxB,GAAjB,EAAsB,IAAtB;AACAsB,MAAAA,GAAG,CAACqB,IAAJ;AACH,KAtHD,CA3CyK,CAmKzK;;;AACArB,IAAAA,GAAG,CAACqB,IAAJ;AACH;;AAjoBqD;;AAsoB1D,eAAepH,cAAf","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport {\n    Text,\n    Button,\n    Layout,\n    Breadcrumb,\n    BoxContainer,\n    InputSelect,\n    Modal\n} from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\n\nimport Booking from \"../models/booking\";\n\n\nimport { ModalContent } from \"../models/doc-elements\";\nimport BaseService from '../service/base.service';\n\n\ninterface Props {\n    onChange: (fieldName: string, value: string) => void;\n    onSave: () => void;\n}\n\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n\ninterface MyState {\n    bookings: Booking[],\n    _bookingId: string,\n    nric: string,\n    citizenName: string,\n    citizenNumber: string,\n    citizenEmail: string,\n    inputValue: string,\n    queueNumber: string,\n    showModal: boolean,\n    citizenSalutation: string,\n    generalType: string,\n    serviceName: string,\n    serviceProviderEmail: string,\n    serviceProviderName: string,\n    serviceStartDate: string,\n    serviceProviderPhone: string,\n    serviceStartTime: string,\n    serviceProviderLocation: string,\n    bookingStatus: string,\n    queueName: string,\n    elementNobodyInQueue: string,\n    showCurrentCitizen: string,\n    showDivHPBService: string,\n    showDIVHospitalservice: string,\n    agencySelection: string,\n    serviceSelection: string,\n    routingKey:string,\n    showButtonNextNumber: string,\n    showNextServiceHospital: string,\n    showNextServiceHPB: string,\n    nextServiceSelection: string\n}\n\n\n\nclass ServiceCounter extends React.Component<{}, MyState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            _bookingId: \"\",\n            nric: \"\",\n            citizenName: \"\",\n            citizenNumber: \"\",\n            citizenEmail: \"\",\n            inputValue: \"\",\n            queueNumber: \"\",\n            showModal: false,\n            citizenSalutation: \"\",\n            generalType: \"\",\n            serviceName: \"\",\n            serviceProviderEmail: \"\",\n            serviceProviderName: \"\",\n            serviceStartDate: \"\",\n            serviceProviderPhone: \"\",\n            serviceStartTime: \"\",\n            serviceProviderLocation: \"\",\n            bookingStatus: \"\",\n            queueName: \"communityHealthQueue\",\n            elementNobodyInQueue: \"none\",\n            showCurrentCitizen: \"none\",\n            showDivHPBService:\"block\",\n            showDIVHospitalservice: \"none\",\n            agencySelection: \"HPB\",\n            serviceSelection: \"communityHealth\",\n            routingKey:\"sgh.doctor\",\n            showButtonNextNumber: \"block\",\n            showNextServiceHospital: \"none\",\n            showNextServiceHPB: \"none\",\n            nextServiceSelection: \"\"\n        };\n\n        this.consumeQueue = this.consumeQueue.bind(this)\n\n    }\n\n    componentDidMount() {\n        this.loadData();\n        // if(this.state.chooseOtherOptions == false){\n        // }\n    }\n\n    async loadData() {\n        // if(this.state.chooseOtherOptions == false){\n        try {\n            var apiURL: string\n            apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n            console.log(apiURL)\n            // if (searchMethod == \"location\") {\n            //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n            //     document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n\n            // }\n            // else {\n            //     apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/citizen/' + this.state.inputValue;\n            //     console.log(apiURL)\n            //     if (this.state.inputValue == '') {\n            //         apiURL = process.env.REACT_APP_MY_EC2_API_ADDRESS + 'api/booking/location/Tampines';\n            //     }\n            //     // document.getElementById(\"divAppointments\")!!.style.display = \"block\";\n\n            // }\n\n            fetch(apiURL)\n                .then(function (response) {\n\n                    return response.json();\n                })\n                .then((myJson) => {\n                    this.setState({\n                        bookings: []\n                    })\n                    myJson.data.forEach(element => {\n                        if (element[\"bookingStatus\"] == this.state.serviceSelection) {\n                            var eachBooking = new Booking(\n                                element[\"_id\"],\n                                element[\"nric\"],\n                                element[\"citizenName\"],\n                                element[\"citizenSalutation\"],\n                                element[\"citizenEmail\"],\n                                element[\"citizenNumber\"],\n                                element[\"generalType\"],\n                                element[\"serviceName\"],\n                                element[\"serviceProviderName\"],\n                                element[\"serviceProviderEmail\"],\n                                element[\"serviceProviderPhone\"],\n                                element[\"serviceStartDate\"],\n                                element[\"serviceStartTime\"],\n                                element[\"serviceProviderLocation\"],\n                                element[\"bookingStatus\"],\n                                element[\"queueNumber\"]\n                            );\n\n                            this.state.bookings.push(eachBooking)\n\n                        }\n\n\n\n                        // const bookings = this.state.bookings.slice(0);\n\n\n                        // console.log(bookings)\n\n                        this.setState({\n                            bookings: this.state.bookings,\n                            // clicked: 'block'\n                        });\n\n                        if(this.state.bookings.length > 0)  {\n                            this.setState({\n                                showCurrentCitizen: \"block\",\n                                showButtonNextNumber: \"none\",\n                                \n                                nric: this.state.bookings[0].Nric,\n                                citizenName: this.state.bookings[0].CitizenName,\n                                citizenNumber: this.state.bookings[0].CitizenNumber,\n                                citizenEmail: this.state.bookings[0].CitizenEmail,\n                                citizenSalutation: this.state.bookings[0].CitizenSalutation,\n                                _bookingId: this.state.bookings[0].Id?.toString() || '',\n                                generalType: this.state.bookings[0].GeneralType,\n                                serviceName: this.state.bookings[0].ServiceName,\n                                serviceProviderName: this.state.bookings[0].ServiceProviderName,\n                                serviceProviderEmail: this.state.bookings[0].ServiceProviderEmail,\n                                serviceProviderPhone: this.state.bookings[0].ServiceProviderPhone,\n                                serviceProviderPhone: this.state.bookings[0].ServiceProviderPhone,\n                                serviceProviderPhone: this.state.bookings[0].ServiceProviderPhone,\n                                serviceProviderPhone: this.state.bookings[0].ServiceProviderPhone,\n                                serviceProviderPhone: this.state.bookings[0].ServiceProviderPhone,\n\n                            })\n                            if(this.state.agencySelection == \"HPB\"){\n                                this.setState({\n                                    showNextServiceHospital: \"none\",\n                                    showNextServiceHPB: \"block\"\n                                })\n                            }\n                            else{\n                                this.setState({\n                                    showNextServiceHospital: \"block\",\n                                    showNextServiceHPB: \"none\"\n                                })\n                            }\n                        }\n                        else{\n                            this.setState({\n                                showCurrentCitizen: \"none\",\n                                showButtonNextNumber: \"block\",\n                            })\n                        }\n\n                        \n\n\n\n\n                    });\n                    console.log(this.state.bookings)\n                });\n\n            //   console.log(blocks.data)\n        } catch (e) {\n            console.log(e);\n        }\n        // }\n\n    }\n\n\n\n    render() {\n        return (\n            <StyledSection>\n\n                <Modal.Base\n                    show={this.state.showModal}\n                    animationFrom=\"bottom\"\n                    enableOverlayClick={true}\n                // onOverlayClick={closeModal()}\n                >\n                    <Modal.Box onClose={() => {\n                        this.setState({\n                            showModal: false\n                        });\n                    }}>\n                        <ModalContent>\n                            <span>Send to queue succesfully</span>\n                        </ModalContent>\n                    </Modal.Box>\n                </Modal.Base>\n                <Layout.Container>\n\n\n                    <Breadcrumb links={[{ title: 'Home', url: 'http://localhost:3000/ServiceCounter' }, { title: 'Service Counter' }]} />\n\n                    Agency:\n                    <div id='divAgency' className=\"inlinecontent\" style={{ justifyItems: \"start\", maxWidth: '400px' }}>\n                        <InputSelect\n                            options={[\n                                { value: \"HPB\", label: \"HPB\" },\n                                { value: \"Hospital\", label: \"Hospital\" },\n\n                            ]}\n\n                            valueExtractor={(item) => item.value}\n                            listExtractor={(item) => item.label}\n\n                            displayValueExtractor={(item) => item.label}\n                            placeholder={this.state.agencySelection}\n                            onSelectItem={(item, selectedValue) => {\n                                this.setState({ inputValue: selectedValue }, () => {\n                                    this.ddlAgency(selectedValue)\n\n                                });\n                            }} />\n\n                    </div>\n\n\n\n                    <br />\n\n                    Service:\n\n                    <div id='divHPBService' className=\"inlinecontent\" style={{ justifyItems: \"start\", maxWidth: '400px', display:this.state.showDivHPBService }}>\n                        <InputSelect\n                            options={[\n                                { value: \"communityHealth\", label: \"communityHealth\" },\n                                { value: \"workplaceHealth\", label: \"workplaceHealth\" },\n\n                            ]}\n                            \n                            valueExtractor={(item) => item.value}\n                            listExtractor={(item) => item.label}\n\n                            displayValueExtractor={(item) => item.label}\n                            placeholder={this.state.serviceSelection}\n                            onSelectItem={(item, selectedValue) => {\n                                this.setState({ inputValue: selectedValue }, () => {\n                                    this.ddlService(selectedValue)\n\n                                });\n                            }} />\n\n                    </div>\n\n                    <div id='divHospitalService' className=\"inlinecontent\" style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showDIVHospitalservice }}>\n                        <InputSelect\n                            options={[\n                                { value: \"Doctor\", label: \"Doctor\" },\n                                { value: \"Payment\", label: \"Payment\" },\n                                { value: \"Pharmacy\", label: \"Pharmacy\" },\n\n                            ]}\n\n                            valueExtractor={(item) => item.value}\n                            listExtractor={(item) => item.label}\n\n                            displayValueExtractor={(item) => item.label}\n                            placeholder={this.state.serviceSelection}\n                            onSelectItem={(item, selectedValue) => {\n                                this.setState({ inputValue: selectedValue }, () => {\n                                    this.ddlService(selectedValue)\n\n                                });\n                            }} />\n\n                    </div>\n\n                    <br></br>\n\n                    Your are selecting agency: <b>{this.state.agencySelection},</b> and service as <b>{this.state.serviceSelection}</b>\n\n                    <br /><br />\n                    <div id='divButtonNextPatient' style={{display: this.state.showButtonNextNumber}}>\n\n\n                        <Button.Default className='buttonsuccess'\n                            onClick={() => this.consumeQueue(this.handle200, \"nextPatient\")}\n                        >Next Number</Button.Default>\n                        <p style={{ 'color': \"green\", 'fontSize': 30, 'display': this.state.elementNobodyInQueue }}>There is no one in the queue😄</p>\n                    </div>\n                    <div id='divCurrentCitizen' style={{ display: this.state.showCurrentCitizen }}>\n\n                        <Layout.GridContainer className=\"column2\">\n                            <div>\n                                <div className='spacer1'></div>\n\n                                <Text.H3>Currently Serving</Text.H3>\n\n                                <div className='spacer1'></div>\n                                <div className='spacer1'></div>\n\n                                <BoxContainer title=\"Citizen Information\" collapsible={false} className=\"textleft\" >\n                                    <div style={{ padding: \"2rem\", minWidth: \"1080px\" }}>\n                                        <Layout.GridContainer className=\"column4\">\n                                            <Text.Body weight=\"semibold\">NRIC</Text.Body>\n                                            <Text.Body weight=\"semibold\">Name</Text.Body>\n                                            <Text.Body weight=\"semibold\">Phone Number</Text.Body>\n                                            <Text.Body weight=\"semibold\">Email</Text.Body>\n                                            <Text.Body>{this.state.nric}</Text.Body>\n                                            <Text.Body>{this.state.citizenName}</Text.Body>\n                                            <Text.Body>{this.state.citizenNumber}</Text.Body>\n                                            <Text.Body>{this.state.citizenEmail}</Text.Body>\n                                        </Layout.GridContainer>\n                                    </div>\n                                </BoxContainer>\n\n\n                                <Text.Body>Next service: </Text.Body>\n\n\n                            </div>\n\n                        </Layout.GridContainer>\n\n                        <div style={{display: this.state.showNextServiceHPB}}>\n                        <Layout.GridContainer className=\"column4\">\n\n                            <InputSelect\n                                placeholder=\"Select\"\n                                options={[\n                                    { value: \"Doctor\", label: \"Doctor\" },\n                                ]}\n                                valueExtractor={(item) => item.value}\n                                listExtractor={(item) => item.label}\n                                displayValueExtractor={(item) => item.label}\n                                onSelectItem={(item, selectedValue) => {\n\n                                    this.setState({\n                                        nextServiceSelection: selectedValue,\n                                        routingKey: \"sgh.doctor\"\n                                    })\n                                }}\n                            />\n                        </Layout.GridContainer>\n\n                        </div>\n\n                        <div style={{display: this.state.showNextServiceHospital}}>\n                        <Layout.GridContainer className=\"column4\">\n\n                            <InputSelect\n                                placeholder=\"Select\"\n                                options={[\n                                    { value: \"Payment\", label: \"Payment\" },\n                                    { value: \"Pharmacy\", label: \"Pharmacy\" }\n                                ]}\n                                valueExtractor={(item) => item.value}\n                                listExtractor={(item) => item.label}\n                                displayValueExtractor={(item) => item.label}\n                                onSelectItem={(item, selectedValue) => {\n\n                                    this.setState({\n                                        nextServiceSelection: selectedValue,\n                                        routingKey: \"sgh.doctor\"\n                                    })\n                                }}\n                            />\n                        </Layout.GridContainer>\n\n                        </div>\n                        <div className='spacer1'></div>\n\n\n                        <Button.Default\n                            onClick={() => this.consumeQueue(this.handle200, \"sendtoNextService\", this.state._bookingId, this.state.nric, this.state.citizenName, this.state.citizenEmail, this.state.citizenNumber, this.state.queueNumber)}\n\n                        >Send to next service</Button.Default>\n\n                    </div>\n\n                </Layout.Container>\n            </StyledSection>\n        )\n    }\n    ddlAgency(selectedValue: any) {\n        if (selectedValue == \"HPB\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"block\",\n                showDIVHospitalservice:\"none\",\n                agencySelection: \"HPB\",\n                serviceSelection: \"Select a Service\"\n            })\n\n            this.loadData();\n\n        }\n        else {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"none\",\n                showDIVHospitalservice: \"block\",\n                agencySelection: \"Hospital\",\n                serviceSelection: \"Select a Service\"\n\n            })\n            this.loadData();\n\n        }\n    }\n\n    ddlService(selectedValue: any) {\n        if (selectedValue == \"communityHealth\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"block\",\n                showDIVHospitalservice:\"none\",\n                serviceSelection: \"communityHealth\",\n                queueName: \"communityHealthQueue\",\n                routingKey: \"hpb.chq\"\n            })\n            this.loadData();\n        }\n        else if(selectedValue == \"workplaceHealth\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"none\",\n                showDIVHospitalservice: \"block\",\n                serviceSelection: \"workplaceHealth\",\n                queueName: \"workplaceHealthQueue\",\n                routingKey: \"hpb.whq\"\n\n            })\n            this.loadData();\n\n        }\n        else if(selectedValue == \"Doctor\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"none\",\n                showDIVHospitalservice: \"block\",\n                serviceSelection: \"Doctor\",\n                queueName: \"doctorQueue\",\n                \n            })\n        }\n        else if(selectedValue == \"Payment\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"none\",\n                showDIVHospitalservice: \"block\",\n                serviceSelection: \"Payment\",\n                queueName: \"paymentQueue\",\n\n            })\n            this.loadData();\n\n        }\n        else if(selectedValue == \"Pharmacy\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"none\",\n                showDIVHospitalservice: \"block\",\n                serviceSelection: \"Pharmacy\",\n                queueName: \"pharmacyQueue\",\n\n            })\n            this.loadData();\n\n        }\n    }\n\n\n    handle200(response) {\n        console.log('handle200 has received:', response);\n    }\n\n\n\n    consumeQueue(callback, buttonSelected: string, bookingId?: string, nric?: string, citizenName?: string, citizenEmail?: string, citizenNumber?: string, queueNumber?: string) {\n\n        var respectiveURL = \"\"\n        if (buttonSelected == \"nextPatient\") {\n        \n            respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=\" + this.state.queueName\n            // respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=PaymentQueue\"\n            // respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=PharmacyQueue\"\n            console.log(\"testing:\" + respectiveURL)\n\n        }\n        if (buttonSelected == \"sendtoNextService\") {\n\n            const queueObject = {\n                \"_id\": bookingId,\n                \"nric\": nric,\n                \"citizenName\": citizenName,\n                \"citizenEmail\": citizenEmail,\n                \"citizenNumber\": citizenNumber,\n                \"queueNumber\": queueNumber,\n            }\n\n            var myJSON = encodeURI(JSON.stringify(queueObject));\n            respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId!!.toString() + \"&exchangeID=master&bindingKey=\" +  this.state.routingKey + \"&bookingDetails=\" + myJSON;\n            console.log(\"jiawei testing now: \" +respectiveURL)\n            // respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId + \"&exchangeID=master&bindingKey=sgh.Payment&bookingDetails=\" + myJSON;\n            // respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId + \"&exchangeID=master&bindingKey=sgh.Pharmacy&bookingDetails=\" + myJSON;\n\n            console.log(\"------- testing here -------\")\n            console.log(respectiveURL)\n\n        }\n\n\n\n\n        const xhr = new XMLHttpRequest(),\n            method = \"GET\",\n            url = respectiveURL;\n        // initialize a new GET request\n        xhr.open(method, url, true);\n\n        // respond to every readyState change\n        xhr.onreadystatechange = () => {\n\n            // ignore all readyStates other than \"DONE\"\n            if (xhr.readyState !== XMLHttpRequest.DONE) {\n                // console.log(\"placeHolder1\")     \n                // this.setState({\n                //     elementNobodyInQueue : \"block\"\n                // })\n\n                return;\n            }\n\n            // call the callback with status\n            if (xhr.status === 200) {\n\n                var calledBooking: Booking;\n                if (buttonSelected == \"nextPatient\") {\n                    this.setState({\n                        _bookingId: JSON.parse(xhr.responseText)._id,\n                        nric: JSON.parse(xhr.responseText).nric,\n                        citizenName: JSON.parse(xhr.responseText).citizenName,\n                        citizenEmail: JSON.parse(xhr.responseText).citizenEmail,\n                        citizenNumber: JSON.parse(xhr.responseText).citizenNumber,\n                        citizenSalutation: JSON.parse(xhr.responseText).citizenSalutation,\n                        queueNumber: JSON.parse(xhr.responseText).queueNumber,\n                        generalType: JSON.parse(xhr.responseText).generalType,\n\n                        serviceName: JSON.parse(xhr.responseText).serviceName,\n\n                        serviceProviderEmail: JSON.parse(xhr.responseText).serviceProviderEmail,\n                        serviceProviderName: JSON.parse(xhr.responseText).serviceProviderName,\n                        serviceStartDate: JSON.parse(xhr.responseText).serviceStartDate,\n                        serviceProviderPhone: JSON.parse(xhr.responseText).serviceProviderPhone,\n                        serviceStartTime: JSON.parse(xhr.responseText).serviceStartTime,\n                        serviceProviderLocation: JSON.parse(xhr.responseText).serviceProviderLocation,\n                        bookingStatus: JSON.parse(xhr.responseText).bookingStatus,\n                        elementNobodyInQueue: \"none\",\n                        showCurrentCitizen: \"block\"\n                    })\n\n                    if(this.state.agencySelection == \"HPB\"){\n                        this.setState({\n                            showNextServiceHPB: 'block',\n                            showNextServiceHospital: 'none'\n                        })\n                    }\n\n                    if(this.state.agencySelection == \"Hospital\"){\n                        this.setState({\n                            showNextServiceHPB: 'none',\n                            showNextServiceHospital: 'block'\n                        })\n                    }\n\n\n                    calledBooking = new Booking(this.state._bookingId, this.state.nric, this.state.citizenName, this.state.citizenSalutation, this.state.citizenEmail, this.state.citizenNumber, this.state.generalType, this.state.serviceName, this.state.serviceProviderName, this.state.serviceProviderEmail, this.state.serviceProviderPhone, this.state.serviceStartDate, this.state.serviceStartTime, this.state.serviceProviderLocation, this.state.bookingStatus, this.state.queueNumber);\n\n                    document.getElementById(\"divCurrentCitizen\")!!.style.display = \"block\";\n                    document.getElementById(\"divButtonNextPatient\")!!.style.display = \"none\";\n                    calledBooking.BookingStatus = this.state.serviceSelection\n\n                    BaseService.update<Booking>(\"/booking/update/\", this.state._bookingId, calledBooking).then(\n\n                        (rp) => {\n                            if (rp.Status) {\n                                console.log('Booking saved.');\n                            } else {\n                                console.log(rp.Messages);\n                                console.log(\"Messages: \" + rp.Messages);\n                                console.log(\"Exception: \" + rp.Exception);\n                            }\n                        }\n                    );\n\n                }\n\n                if (buttonSelected == \"sendtoNextService\") {\n                    this.setState({\n                        showModal: true\n                    });\n\n                    calledBooking = new Booking(this.state._bookingId, this.state.nric, this.state.citizenName, this.state.citizenSalutation, this.state.citizenEmail, this.state.citizenNumber, this.state.generalType, this.state.serviceName, this.state.serviceProviderName, this.state.serviceProviderEmail, this.state.serviceProviderPhone, this.state.serviceStartDate, this.state.serviceStartTime, this.state.serviceProviderLocation, this.state.bookingStatus, this.state.queueNumber);\n\n\n                    document.getElementById(\"divCurrentCitizen\")!!.style.display = \"none\";\n                    document.getElementById(\"divButtonNextPatient\")!!.style.display = \"block\";\n\n\n                    calledBooking.BookingStatus = this.state.nextServiceSelection\n\n                    console.log(this.state)\n\n                    BaseService.update<Booking>(\"/booking/update/\", this.state._bookingId, calledBooking).then(\n\n                        (rp) => {\n                            if (rp.Status) {\n                                console.log('Booking saved.');\n                            } else {\n                                console.log(rp.Messages);\n                                console.log(\"Messages: \" + rp.Messages);\n                                console.log(\"Exception: \" + rp.Exception);\n                            }\n                        }\n                    );\n\n                }\n\n\n\n                // console.log(JSON.parse(xhr.responseText));\n\n                return callback(xhr.status);\n            }\n\n            // got something other than 200,\n            // re-initialize and send another GET request\n            xhr.open(method, url, true);\n            xhr.send();\n        }\n\n        // send the initial GET request\n        xhr.send();\n    }\n\n\n}\n\nexport default ServiceCounter;\n"]},"metadata":{},"sourceType":"module"}