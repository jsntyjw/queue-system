{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\junjie\\\\Documents\\\\GitHub\\\\queue-system\\\\frontend\\\\src\\\\common\\\\components\\\\form\\\\input.tsx\";\nimport * as React from \"react\";\nexport const Input = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: formatWrapperClass(props),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, props.label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: props.name,\n    className: \"form-control\",\n    placeholder: props.placeholder,\n    value: props.value,\n    onChange: onChangeInput(props),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"help-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, props.error));\n};\n\nconst formatWrapperClass = props => {\n  const wrapperClass = 'form-group';\n  return props.error ? `${wrapperClass} has-error` : wrapperClass;\n};\n\nconst onChangeInput = props => e => {\n  props.onChange(e.target.name, e.target.value);\n};","map":{"version":3,"sources":["C:/Users/junjie/Documents/GitHub/queue-system/frontend/src/common/components/form/input.tsx"],"names":["React","Input","props","formatWrapperClass","name","label","placeholder","value","onChangeInput","error","wrapperClass","e","onChange","target"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAWA,OAAO,MAAMC,KAAqC,GAAIC,KAAD,IAAW;AAC9D,sBACE;AAAK,IAAA,SAAS,EAAEC,kBAAkB,CAACD,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAEA,KAAK,CAACE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BF,KAAK,CAACG,KAAnC,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AACE,IAAA,IAAI,EAAEH,KAAK,CAACE,IADd;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,WAAW,EAAEF,KAAK,CAACI,WAHrB;AAIE,IAAA,KAAK,EAAEJ,KAAK,CAACK,KAJf;AAKE,IAAA,QAAQ,EAAEC,aAAa,CAACN,KAAD,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAWE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,KAAK,CAACO,KAAnC,CAXF,CADF;AAeD,CAhBM;;AAkBP,MAAMN,kBAAkB,GAAID,KAAD,IAAkB;AAC3C,QAAMQ,YAAY,GAAG,YAArB;AAEA,SAAOR,KAAK,CAACO,KAAN,GACJ,GAAEC,YAAa,YADX,GAELA,YAFF;AAGD,CAND;;AAQA,MAAMF,aAAa,GAAIN,KAAD,IAAmBS,CAAD,IAA4C;AAClFT,EAAAA,KAAK,CAACU,QAAN,CAAeD,CAAC,CAACE,MAAF,CAAST,IAAxB,EAA8BO,CAAC,CAACE,MAAF,CAASN,KAAvC;AACD,CAFD","sourcesContent":["import * as React from \"react\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  label: string;\r\n  placeholder?: string;\r\n  value: string;\r\n  onChange: (fieldName: string, value: string) => void;\r\n  error?: string;\r\n}\r\n\r\nexport const Input: React.FunctionComponent<Props> = (props) => {\r\n  return (\r\n    <div className={formatWrapperClass(props)}>\r\n      <label htmlFor={props.name}>{props.label}</label>\r\n      <div className=\"field\">\r\n        <input type=\"text\"\r\n          name={props.name}\r\n          className=\"form-control\"\r\n          placeholder={props.placeholder}\r\n          value={props.value}\r\n          onChange={onChangeInput(props)}\r\n        />\r\n      </div>\r\n      <div className=\"help-block\">{props.error}</div>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst formatWrapperClass = (props: Props) => {\r\n  const wrapperClass = 'form-group';\r\n\r\n  return props.error ?\r\n    `${wrapperClass} has-error` :\r\n    wrapperClass;\r\n};\r\n\r\nconst onChangeInput = (props: Props) => (e: React.ChangeEvent<HTMLInputElement>) => { \r\n  props.onChange(e.target.name, e.target.value);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}