{"ast":null,"code":"var _jsxFileName = \"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/common/components/form/dropdown.tsx\";\nimport * as React from \"react\";\nimport { Form } from 'react-lifesg-design-system';\nexport const Dropdown = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: formatWrapperClass(props),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, props.label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Select, {\n    name: props.name,\n    className: \"form-control\",\n    placeholder: props.placeholder,\n    options: [{\n      value: \"A\",\n      label: \"Option A\"\n    }, {\n      value: \"B\",\n      label: \"Option B\"\n    }, {\n      value: \"C\",\n      label: \"Option C\"\n    }, {\n      value: \"D\",\n      label: \"Option D\"\n    }] // selectedOption = {(item) => console.log(item)}\n    // label={props.value}\n    // listExtractor={(item) => item.label}\n    ,\n    valueExtractor: item => item.value,\n    listExtractor: item => item.label,\n    displayValueExtractor: item => item.label,\n    onSelectItem: (item, extractedValue) => {// extractedValue = {props.extractedValue,}\n    } // onSelectItem={(item) => console.log(\n    //    item.value = props.selectedValue\n    // )}\n    // selectedOption = {props.selectedValue}\n    // valueExtractor={(item) => {props.selectedValue = item.value }}\n    // onSelectItem={(item, extractedValue) => someFn()}\n    // valueExtractor={(props) => props.value}\n    // onSelectItem={(item, extractedValue) => {extractedValue = props.value  } }\n    // onselect ={ props.value}\n    // valueExtractor={(item) => props.value}\n    // onChange={onChangeInput(props)}\n    // onSelectItem={\n    //   console.log(\"st\")\n    // }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"help-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, props.error));\n};\n\nconst formatWrapperClass = props => {\n  const wrapperClass = 'form-group';\n  return props.error ? `${wrapperClass} has-error` : wrapperClass;\n};\n\nconst onChangeInput = props => e => {\n  props.onChange(e.target.name, e.target.value);\n};","map":{"version":3,"sources":["/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/common/components/form/dropdown.tsx"],"names":["React","Form","Dropdown","props","formatWrapperClass","name","label","placeholder","value","item","extractedValue","error","wrapperClass","onChangeInput","e","onChange","target"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,IAAR,QAAmB,4BAAnB;AAaA,OAAO,MAAMC,QAAwC,GAAIC,KAAD,IAAW;AACjE,sBACE;AAAK,IAAA,SAAS,EAAEC,kBAAkB,CAACD,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAEA,KAAK,CAACE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BF,KAAK,CAACG,KAAnC,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAEH,KAAK,CAACE,IADd;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,WAAW,EAAEF,KAAK,CAACI,WAHrB;AAIE,IAAA,OAAO,EAAE,CACP;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcF,MAAAA,KAAK,EAAE;AAArB,KADO,EAEP;AAAEE,MAAAA,KAAK,EAAE,GAAT;AAAcF,MAAAA,KAAK,EAAE;AAArB,KAFO,EAGP;AAAEE,MAAAA,KAAK,EAAE,GAAT;AAAcF,MAAAA,KAAK,EAAE;AAArB,KAHO,EAIP;AAAEE,MAAAA,KAAK,EAAE,GAAT;AAAcF,MAAAA,KAAK,EAAE;AAArB,KAJO,CAJX,CAWE;AAEA;AACA;AAdF;AAeE,IAAA,cAAc,EAAGG,IAAD,IAAUA,IAAI,CAACD,KAfjC;AAgBE,IAAA,aAAa,EAAGC,IAAD,IAAUA,IAAI,CAACH,KAhBhC;AAiBE,IAAA,qBAAqB,EAAGG,IAAD,IAAUA,IAAI,CAACH,KAjBxC;AAkBE,IAAA,YAAY,EAAE,CAACG,IAAD,EAAOC,cAAP,KAA0B,CAEtC;AACD,KArBH,CAuBE;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eA4CE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BP,KAAK,CAACQ,KAAnC,CA5CF,CADF;AAgDD,CAjDM;;AAmDP,MAAMP,kBAAkB,GAAID,KAAD,IAAkB;AAC3C,QAAMS,YAAY,GAAG,YAArB;AAEA,SAAOT,KAAK,CAACQ,KAAN,GACJ,GAAEC,YAAa,YADX,GAELA,YAFF;AAGD,CAND;;AAQA,MAAMC,aAAa,GAAIV,KAAD,IAAmBW,CAAD,IAA4C;AAClFX,EAAAA,KAAK,CAACY,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASX,IAAxB,EAA8BS,CAAC,CAACE,MAAF,CAASR,KAAvC;AACD,CAFD","sourcesContent":["import * as React from \"react\";\nimport {Form} from 'react-lifesg-design-system'\nimport { options } from \"toastr\";\n\ninterface Props {\n  name: string;\n  label: string;\n  placeholder?: string;\n  selectedItemValaue: string;\n  onChange: (fieldName: string, value: string) => void;\n  error?: string;\n  // options: string[][]; \n}\n\nexport const Dropdown: React.FunctionComponent<Props> = (props) => {\n  return (\n    <div className={formatWrapperClass(props)}>\n      <label htmlFor={props.name}>{props.label}</label>\n      <div className=\"field\">\n        <Form.Select \n          name={props.name}\n          className=\"form-control\"\n          placeholder={props.placeholder}\n          options={[\n            { value: \"A\", label: \"Option A\" },\n            { value: \"B\", label: \"Option B\" },\n            { value: \"C\", label: \"Option C\" },\n            { value: \"D\", label: \"Option D\" },\n          ]}\n\n          // selectedOption = {(item) => console.log(item)}\n          \n          // label={props.value}\n          // listExtractor={(item) => item.label}\n          valueExtractor={(item) => item.value}\n          listExtractor={(item) => item.label}\n          displayValueExtractor={(item) => item.label}\n          onSelectItem={(item, extractedValue) => {\n            \n            // extractedValue = {props.extractedValue,}\n          }}\n\n          // onSelectItem={(item) => console.log(\n          //    item.value = props.selectedValue\n          // )}\n          // selectedOption = {props.selectedValue}\n          // valueExtractor={(item) => {props.selectedValue = item.value }}\n          \n          // onSelectItem={(item, extractedValue) => someFn()}\n\n          // valueExtractor={(props) => props.value}\n          // onSelectItem={(item, extractedValue) => {extractedValue = props.value  } }\n          // onselect ={ props.value}\n          // valueExtractor={(item) => props.value}\n          // onChange={onChangeInput(props)}\n          // onSelectItem={\n          //   console.log(\"st\")\n          // }\n        />\n      </div>\n      <div className=\"help-block\">{props.error}</div>\n    </div>\n  )\n};\n\nconst formatWrapperClass = (props: Props) => {\n  const wrapperClass = 'form-group';\n\n  return props.error ?\n    `${wrapperClass} has-error` :\n    wrapperClass;\n};\n\nconst onChangeInput = (props: Props) => (e: React.ChangeEvent<HTMLInputElement>) => { \n  props.onChange(e.target.name, e.target.value);\n};\n"]},"metadata":{},"sourceType":"module"}