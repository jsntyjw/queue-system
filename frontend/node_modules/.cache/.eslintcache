[{"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/index.tsx":"1","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/serviceWorker.ts":"2","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/App.tsx":"3","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Dashboard.tsx":"4","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/CreateNewBooking.tsx":"5","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/ServiceCounter.tsx":"6","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Appointments.tsx":"7","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Home.tsx":"8","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/displayBookingForm.tsx":"9","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/DashboardHPB.tsx":"10","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/DashboardHospital.tsx":"11","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/service/base.service.tsx":"12","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/models/booking.tsx":"13","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/models/doc-elements.tsx":"14","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/bookingsForm.tsx":"15","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/models/response.tsx":"16","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/common/components/form/index.ts":"17","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/common/components/form/input.tsx":"18","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/common/components/form/button.tsx":"19","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/common/components/form/dateinput.tsx":"20"},{"size":344,"mtime":1650176851993,"results":"21","hashOfConfig":"22"},{"size":5201,"mtime":1650176851994,"results":"23","hashOfConfig":"22"},{"size":4478,"mtime":1650176851988,"results":"24","hashOfConfig":"22"},{"size":2596,"mtime":1650176851993,"results":"25","hashOfConfig":"22"},{"size":3305,"mtime":1650176851992,"results":"26","hashOfConfig":"22"},{"size":38255,"mtime":1650179884636,"results":"27","hashOfConfig":"22"},{"size":67578,"mtime":1650458889471,"results":"28","hashOfConfig":"22"},{"size":1518,"mtime":1650176851993,"results":"29","hashOfConfig":"22"},{"size":491,"mtime":1650176851993,"results":"30","hashOfConfig":"22"},{"size":9200,"mtime":1650178171414,"results":"31","hashOfConfig":"22"},{"size":12615,"mtime":1650178166919,"results":"32","hashOfConfig":"22"},{"size":3765,"mtime":1650176851994,"results":"33","hashOfConfig":"22"},{"size":1785,"mtime":1650176851993,"results":"34","hashOfConfig":"22"},{"size":393,"mtime":1650176851993,"results":"35","hashOfConfig":"22"},{"size":8252,"mtime":1650176851993,"results":"36","hashOfConfig":"22"},{"size":351,"mtime":1650176851993,"results":"37","hashOfConfig":"22"},{"size":80,"mtime":1650176851992,"results":"38","hashOfConfig":"22"},{"size":1211,"mtime":1650176851992,"results":"39","hashOfConfig":"22"},{"size":402,"mtime":1650176851992,"results":"40","hashOfConfig":"22"},{"size":787,"mtime":1650176851992,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pljplk",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/index.tsx",[],[],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/serviceWorker.ts",[],[],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/App.tsx",[],[],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Dashboard.tsx",["107"],[],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/CreateNewBooking.tsx",[],[],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/ServiceCounter.tsx",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],[],"import React from 'react';\nimport '../App.css';\nimport '../index.css';\nimport {\n    Text,\n    Button,\n    Layout,\n    Breadcrumb,\n    BoxContainer,\n    InputSelect,\n    Modal\n} from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\n\nimport Booking from \"../models/booking\";\n\n\nimport { ModalContent } from \"../models/doc-elements\";\nimport BaseService from '../service/base.service';\n\n\n\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n\n\ninterface MyState {\n    bookings: Booking[],\n    _bookingId: string,\n    nric: string,\n    citizenName: string,\n    citizenNumber: string,\n    citizenEmail: string,\n    inputValue: string,\n    queueNumber: string,\n    showModal: boolean,\n    citizenSalutation: string,\n    generalType: string,\n    serviceName: string,\n    serviceProviderEmail: string,\n    serviceProviderName: string,\n    serviceStartDate: string,\n    serviceProviderPhone: string,\n    serviceStartTime: string,\n    serviceProviderLocation: string,\n    bookingStatus: string,\n    queueName: string,\n    elementNobodyInQueue: string,\n    showCurrentCitizen: string,\n    showDivHPBService: string,\n    showDIVHospitalservice: string,\n    agencySelection: string,\n    serviceSelection: string,\n    routingKey: string,\n    showNextServiceHospitalDoctor: string,\n    showNextServiceHospitalPharmacy: string,\n    showNextServiceHospitalPayment: string,\n    showNextServiceHPB: string,\n    nextServiceSelection: string,\n    displayNextPatient: string\n}\n\n\n\nclass ServiceCounter extends React.Component<{}, MyState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            _bookingId: \"\",\n            nric: \"\",\n            citizenName: \"\",\n            citizenNumber: \"\",\n            citizenEmail: \"\",\n            inputValue: \"\",\n            queueNumber: \"\",\n            showModal: false,\n            citizenSalutation: \"\",\n            generalType: \"\",\n            serviceName: \"\",\n            serviceProviderEmail: \"\",\n            serviceProviderName: \"\",\n            serviceStartDate: \"\",\n            serviceProviderPhone: \"\",\n            serviceStartTime: \"\",\n            serviceProviderLocation: \"\",\n            bookingStatus: \"\",\n            queueName: \"communityHealthQueue\",\n            elementNobodyInQueue: \"none\",\n            showCurrentCitizen: \"none\",\n            showDivHPBService: \"block\",\n            showDIVHospitalservice: \"none\",\n            agencySelection: \"HPB\",\n            serviceSelection: \"communityHealth\",\n            routingKey: \"sgh.doctor\",\n            showNextServiceHospitalDoctor: \"block\",\n            showNextServiceHospitalPharmacy: \"block\",\n            showNextServiceHospitalPayment: \"block\",\n            showNextServiceHPB: \"none\",\n            nextServiceSelection: \"\",\n            displayNextPatient: \"block\"\n        };\n\n        this.consumeQueue = this.consumeQueue.bind(this)\n\n    }\n\n    componentDidMount() {\n        this.loadData();\n        console.log(\"current service selection:\"  + this.state.serviceSelection)\n    }\n\n    async loadData() {\n        try {\n            this.setState({\n                elementNobodyInQueue : \"none\"\n            })\n            var apiURL: string\n            apiURL = process.env.REACT_APP_APPOINTMENT_API_ADDRESS + 'api/booking/location/Tampines';\n\n            fetch(apiURL)\n                .then(function (response) {\n\n                    return response.json();\n                })\n                .then((myJson) => {\n                    this.setState({\n                        bookings: []\n                    })\n                    console.log(myJson)\n                    myJson.data.forEach(element => {\n\n                        if (element[\"bookingStatus\"] == this.state.serviceSelection + \"-Calling\") {\n                            console.log(\"have\")\n                            var eachBooking = new Booking(\n                                element[\"_id\"],\n                                element[\"nric\"],\n                                element[\"citizenName\"],\n                                element[\"citizenSalutation\"],\n                                element[\"citizenEmail\"],\n                                element[\"citizenNumber\"],\n                                element[\"generalType\"],\n                                element[\"serviceName\"],\n                                element[\"serviceProviderName\"],\n                                element[\"serviceProviderEmail\"],\n                                element[\"serviceProviderPhone\"],\n                                element[\"serviceStartDate\"],\n                                element[\"serviceStartTime\"],\n                                element[\"serviceProviderLocation\"],\n                                element[\"bookingStatus\"],\n                                element[\"queueNumber\"]\n                            );\n\n                            this.state.bookings.push(eachBooking)\n\n                            if(this.state.bookings.length > 0){\n                                this.setState({displayNextPatient: \"none\"})\n                            }\n\n                        }\n\n                        this.setState({\n                            bookings: this.state.bookings,\n                        });\n\n                        if (this.state.bookings.length > 0) {\n\n                            console.log(\"hello testing here\")\n                            this.setState({\n                                showCurrentCitizen: \"block\",\n\n                                nric: this.state.bookings[0].Nric,\n                                citizenName: this.state.bookings[0].CitizenName,\n                                citizenNumber: this.state.bookings[0].CitizenNumber,\n                                citizenEmail: this.state.bookings[0].CitizenEmail,\n                                citizenSalutation: this.state.bookings[0].CitizenSalutation,\n                                _bookingId: this.state.bookings[0].Id?.toString() || '',\n                                generalType: this.state.bookings[0].GeneralType,\n                                serviceName: this.state.bookings[0].ServiceName,\n                                serviceProviderName: this.state.bookings[0].ServiceProviderName,\n                                serviceProviderEmail: this.state.bookings[0].ServiceProviderEmail,\n                                serviceProviderPhone: this.state.bookings[0].ServiceProviderPhone,\n                                serviceStartDate: this.state.bookings[0].ServiceStartDate,\n                                serviceStartTime: this.state.bookings[0].ServiceStartTime,\n                                serviceProviderLocation: this.state.bookings[0].ServiceProviderLocation,\n                                bookingStatus: this.state.bookings[0].BookingStatus,\n                                queueNumber: this.state.bookings[0].QueueNumber\n                            })\n\n                            console.log(\"testing here!!! : \" + this.state.bookings[0].Id)\n\n\n                            if (this.state.agencySelection == \"HPB\") {\n                                this.setState({\n                                    showNextServiceHospitalDoctor: \"none\",\n                                    showNextServiceHospitalPharmacy: \"none\",\n                                    showNextServiceHospitalPayment: \"none\",\n                                    showNextServiceHPB: \"block\",\n                                })\n                            }\n                            else {\n                                this.setState({\n                                    showNextServiceHospitalDoctor: \"none\",\n                                    showNextServiceHospitalPharmacy: \"none\",\n                                    showNextServiceHospitalPayment: \"none\",\n                                    showNextServiceHPB: \"none\",\n                                })\n                                console.log(this.state.queueName)\n\n\n                                if(this.state.serviceSelection == \"Doctor\"){\n                                    this.setState({\n                                        showNextServiceHospitalDoctor: \"block\",\n                                        showNextServiceHospitalPharmacy: \"none\",\n                                        showNextServiceHospitalPayment: \"none\",\n                                        showNextServiceHPB: \"none\"\n                                    })\n                                }\n\n                                else if(this.state.serviceSelection == \"Payment\"){\n                                    this.setState({\n                                        showNextServiceHospitalDoctor: \"none\",\n                                        showNextServiceHospitalPharmacy: \"none\",\n                                        showNextServiceHospitalPayment: \"block\",\n                                        showNextServiceHPB: \"none\"\n                                    })\n                                }\n\n                                else{\n                                    this.setState({\n                                        showNextServiceHospitalDoctor: \"none\",\n                                        showNextServiceHospitalPharmacy: \"block\",\n                                        showNextServiceHospitalPayment: \"none\",\n                                        showNextServiceHPB: \"none\"\n                                    })\n                                }\n                            }\n                        }\n                        else {\n                            this.setState({\n                                showCurrentCitizen: \"none\",\n                            })\n                        }\n                    });\n                });\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    render() {\n        return (\n            <StyledSection>\n\n                <Modal.Base\n                    show={this.state.showModal}\n                    animationFrom=\"bottom\"\n                    enableOverlayClick={true}\n                >\n                    <Modal.Box onClose={() => {\n                        this.setState({\n                            showModal: false\n                        });\n                    }}>\n                        <ModalContent>\n                            <span>Send to queue succesfully</span>\n                        </ModalContent>\n                    </Modal.Box>\n                </Modal.Base>\n                <Layout.Container>\n\n\n                    <Breadcrumb links={[{ title: 'Home', url: 'http://localhost:3000/ServiceCounter' }, { title: 'Service Counter' }]} />\n\n                    Agency:\n                    <div id='divAgency' className=\"inlinecontent\" style={{ justifyItems: \"start\" }}>\n                        <InputSelect\n                            options={[\n                                { value: \"HPB\", label: \"HPB\" },\n                                { value: \"Hospital\", label: \"Hospital\" },\n\n                            ]}\n\n                            valueExtractor={(item) => item.value}\n                            listExtractor={(item) => item.label}\n\n                            displayValueExtractor={(item) => item.label}\n                            placeholder={this.state.agencySelection}\n                            onSelectItem={(item, selectedValue) => {\n                                this.setState({ inputValue: selectedValue }, () => {\n                                    this.ddlAgency(selectedValue)\n\n                                });\n                            }} />\n\n                    </div>\n\n\n\n                    <br />\n\n                    Service:\n\n                    <div id='divHPBService' className=\"inlinecontent\" style={{ justifyItems: \"start\", display: this.state.showDivHPBService }}>\n                        <InputSelect\n                            options={[\n                                { value: \"communityHealth\", label: \"communityHealth\" },\n                                { value: \"workplaceHealth\", label: \"workplaceHealth\" },\n\n                            ]}\n\n                            valueExtractor={(item) => item.value}\n                            listExtractor={(item) => item.label}\n\n                            displayValueExtractor={(item) => item.label}\n                            placeholder={this.state.serviceSelection}\n                            onSelectItem={(item, selectedValue) => {\n                                this.setState({ inputValue: selectedValue }, () => {\n                                    this.ddlService(selectedValue)\n\n                                });\n                            }} />\n\n                    </div>\n\n                    <div id='divHospitalService' className=\"inlinecontent\" style={{ justifyItems: \"start\", display: this.state.showDIVHospitalservice }}>\n                        <InputSelect\n                            options={[\n                                { value: \"Doctor\", label: \"Doctor\" },\n                                { value: \"Payment\", label: \"Payment\" },\n                                { value: \"Pharmacy\", label: \"Pharmacy\" }\n\n                            ]}\n\n                            valueExtractor={(item) => item.value}\n                            listExtractor={(item) => item.label}\n\n                            displayValueExtractor={(item) => item.label}\n                            placeholder={this.state.serviceSelection}\n                            onSelectItem={(item, selectedValue) => {\n                                this.setState({ inputValue: selectedValue }, () => {\n                                    this.ddlService(selectedValue)\n\n                                });\n                            }} />\n\n                    </div>\n\n\n\n                    <br /><br />\n                    <div id='divButtonNextPatient' >\n\n\n                        <Button.Default className='buttonsuccess' style={{'display' : this.state.displayNextPatient}}\n                            onClick={() => this.consumeQueue(this.handle200, \"nextPatient\")}\n                        >Next Number</Button.Default>\n                        <p style={{ 'color': \"green\", 'fontSize': 30, 'display': this.state.elementNobodyInQueue }}>There is no one in the queue😄</p>\n                    </div>\n                    <div id='divCurrentCitizen' style={{ display: this.state.showCurrentCitizen }}>\n\n                        <Layout.GridContainer className=\"column2\">\n                            <div>\n                                <div className='spacer1'></div>\n\n                                <Text.H3>Currently Serving</Text.H3>\n\n                                <BoxContainer title=\"Citizen Information\" collapsible={false} className=\"textleft\" >\n                                    <div className=\"servicecountergrid\">\n                                        <Layout.GridContainer className=\"column4\">\n                                            <Text.Body weight=\"semibold\">NRIC</Text.Body>\n                                            <Text.Body weight=\"semibold\">Name</Text.Body>\n                                            <Text.Body weight=\"semibold\">Phone Number</Text.Body>\n                                            <Text.Body weight=\"semibold\">Email</Text.Body>\n                                            <Text.Body>{this.state.nric}</Text.Body>\n                                            <Text.Body>{this.state.citizenName}</Text.Body>\n                                            <Text.Body>{this.state.citizenNumber}</Text.Body>\n                                            <Text.Body>{this.state.citizenEmail}</Text.Body>\n                                        </Layout.GridContainer>\n                                    </div>\n                                </BoxContainer>\n\n\n                                <Text.Body>Next service: </Text.Body>\n\n\n                            </div>\n\n                        </Layout.GridContainer>\n\n                        <div style={{ display: this.state.showNextServiceHPB }}>\n\n                                <InputSelect\n                                    placeholder=\"Select\"\n                                    options={[\n                                        { value: \"Doctor\", label: \"Doctor\" },\n                                        { value: \"Missed Queue\", label: \"Missed Queue\" }\n\n                                    ]}\n                                    valueExtractor={(item) => item.value}\n                                    listExtractor={(item) => item.label}\n                                    displayValueExtractor={(item) => item.label}\n                                    onSelectItem={(item, selectedValue) => {\n\n                                        if (selectedValue != \"Missed Queue\") {\n                                            this.setState({\n                                                routingKey: \"sgh.doctor\"\n                                            })\n                                        }\n\n                                        this.setState({\n                                            nextServiceSelection: selectedValue,\n                                        })\n\n\n                                    }}\n                                />\n\n                        </div>\n\n                        <div style={{ display: this.state.showNextServiceHospitalDoctor }}>\n\n                                <InputSelect\n                                    placeholder=\"Select\"\n                                    options={[\n                                        { value: \"Payment\", label: \"Payment\" },\n                                        { value: \"Pharmacy\", label: \"Pharmacy\" },\n                                        { value: \"Missed Queue\", label: \"Missed Queue\" }\n\n                                    ]}\n                                    valueExtractor={(item) => item.value}\n                                    listExtractor={(item) => item.label}\n                                    displayValueExtractor={(item) => item.label}\n                                    onSelectItem={(item, selectedValue) => {\n                                        if (selectedValue == \"Payment\") {\n                                            this.setState({\n                                                routingKey: \"sgh.payment\"\n                                            })\n                                        }\n                                        else if (selectedValue == \"Pharmacy\") {\n                                            this.setState({\n                                                routingKey: \"sgh.pharmacy\"\n                                            })\n                                        }\n                                        else {\n                                        }\n                                        this.setState({\n                                            nextServiceSelection: selectedValue,\n                                        })\n                                    }}\n                                />\n\n                        </div>\n\n\n                        <div style={{ display: this.state.showNextServiceHospitalPayment }}>\n                                <InputSelect\n                                    placeholder=\"Select\"\n                                    options={[\n                                        { value: \"Pharmacy\", label: \"Pharmacy\" },\n                                        { value: \"Missed Queue\", label: \"Missed Queue\" }\n\n                                    ]}\n                                    valueExtractor={(item) => item.value}\n                                    listExtractor={(item) => item.label}\n                                    displayValueExtractor={(item) => item.label}\n                                    onSelectItem={(item, selectedValue) => {\n                                        if (selectedValue == \"Pharmacy\") {\n                                            this.setState({\n                                                routingKey: \"sgh.pharmacy\"\n                                            })\n                                        }\n                                        else {\n                                        }\n                                        this.setState({\n                                            nextServiceSelection: selectedValue,\n                                        })\n                                    }}\n                                />\n\n                        </div>\n\n\n                        <div style={{ display: this.state.showNextServiceHospitalPharmacy }}>\n\n                                <InputSelect\n                                    placeholder=\"Select\"\n                                    options={[\n                                        { value: \"Completed\", label: \"Completed\" },\n                                        { value: \"Missed Queue\", label: \"Missed Queue\" }\n\n                                    ]}\n                                    valueExtractor={(item) => item.value}\n                                    listExtractor={(item) => item.label}\n                                    displayValueExtractor={(item) => item.label}\n                                    onSelectItem={(item, selectedValue) => {\n                                        if (selectedValue == \"Missed Queue\") {\n                                        }\n                                        else{\n                                        }\n\n                                        this.setState({\n                                            nextServiceSelection: selectedValue,\n                                        })\n                                    }}\n                                />\n\n                        </div>\n\n                        <div className='spacer1'></div>\n\n\n                        <Button.Default\n                            onClick={() => this.consumeQueue(this.handle200, \"sendtoNextService\",\n                                this.state._bookingId,\n                                this.state.nric,\n                                this.state.citizenName,\n                                this.state.citizenSalutation,\n                                this.state.citizenEmail,\n                                this.state.citizenNumber,\n                                this.state.generalType,\n                                this.state.serviceName,\n                                this.state.serviceProviderName,\n                                this.state.serviceProviderEmail,\n                                this.state.serviceProviderPhone,\n                                this.state.serviceStartDate,\n                                this.state.serviceStartTime,\n                                this.state.serviceProviderLocation,\n                                this.state.bookingStatus,\n                                this.state.queueNumber\n\n\n                            )} \n\n                            style={{marginBottom: \"50px\"}}\n\n                        >Send to next service</Button.Default>\n\n                    </div>\n\n                </Layout.Container>\n            </StyledSection>\n        )\n    }\n    ddlAgency(selectedValue: any) {\n\n   \n        if (selectedValue == \"HPB\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"block\",\n                showDIVHospitalservice: \"none\",\n                agencySelection: \"HPB\",\n                serviceSelection: \"communityHealth\",\n                queueName: \"communityHealthQueue\",\n                displayNextPatient: \"block\"\n            })\n            \n            this.loadData();\n\n        }\n        else {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"none\",\n                showDIVHospitalservice: \"block\",\n                agencySelection: \"Hospital\",\n                serviceSelection: \"Doctor\",\n                queueName: \"doctorQueue\",\n                displayNextPatient: \"block\"\n\n            })\n            this.loadData();\n\n        }\n    }\n\n    ddlService(selectedValue: any) {\n        if (selectedValue == \"communityHealth\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"block\",\n                showDIVHospitalservice: \"none\",\n                serviceSelection: \"communityHealth\",\n                queueName: \"communityHealthQueue\",\n                displayNextPatient: \"block\"\n\n            })\n\n            this.loadData()\n        }\n        else if (selectedValue == \"workplaceHealth\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"block\",\n                showDIVHospitalservice: \"none\",\n                serviceSelection: \"workplaceHealth\",\n                queueName: \"workplaceHealthQueue\",\n                displayNextPatient: \"block\"\n\n            })\n            this.loadData()\n\n        }\n        else if (selectedValue == \"Doctor\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"none\",\n                showDIVHospitalservice: \"block\",\n                serviceSelection: \"Doctor\",\n                queueName: \"doctorQueue\",\n                displayNextPatient: \"block\"\n\n            })\n            this.loadData()\n\n        }\n        else if (selectedValue == \"Payment\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"none\",\n                showDIVHospitalservice: \"block\",\n                serviceSelection: \"Payment\",\n                queueName: \"paymentQueue\",\n                displayNextPatient: \"block\"\n\n            })\n            this.loadData()\n\n        }\n        else if (selectedValue == \"Pharmacy\") {\n            this.setState({\n                showCurrentCitizen: \"none\",\n                showDivHPBService: \"none\",\n                showDIVHospitalservice: \"block\",\n                serviceSelection: \"Pharmacy\",\n                queueName: \"pharmacyQueue\",\n                displayNextPatient: \"block\"\n\n            })\n            this.loadData()\n\n        }\n    }\n\n\n    handle200(response) {\n        console.log('handle200 has received:', response);\n    }\n\n\n\n    consumeQueue(callback, buttonSelected: string,\n        bookingId?: string,\n        nric?: string,\n        citizenName?: string,\n        citizenSalutation?: string,\n        citizenEmail?: string,\n        citizenNumber?: string,\n        generalType?: string,\n        serviceName?: string,\n        serviceProviderName?: string,\n        serviceProviderEmail?: string,\n        serviceProviderPhone?: string,\n        serviceStartDate?: string,\n        serviceStartTime?: string,\n        serviceProviderLocation?: string,\n        bookingStatus?: string,\n        queueNumber?:string\n    ) {\n\n        var respectiveURL = \"\"\n        if (buttonSelected == \"nextPatient\") {\n\n            respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/receiver?queueName=\" + this.state.queueName\n            console.log(respectiveURL)\n            console.log(\"---------------\")\n        }\n        if (buttonSelected == \"sendtoNextService\") {\n\n \n\n\n\n            const queueObject = {\n                \"Id\": bookingId,\n                \"Nric\": nric,\n                \"CitizenName\": citizenName,\n                \"CitizenSalutation\": citizenSalutation,\n                \"CitizenEmail\": citizenEmail,\n                \"CitizenNumber\": citizenNumber,\n\n                \"GeneralType\": generalType,\n                \"ServiceName\": serviceName,\n                \"ServiceProviderName\": serviceProviderName,\n                \"ServiceProviderEmail\": serviceProviderEmail,\n                \"ServiceProviderPhone\": serviceProviderPhone,\n                \"ServiceStartDate\": serviceStartDate,\n                \"ServiceStartTime\": serviceStartTime,\n                \"ServiceProviderLocation\": serviceProviderLocation,\n                \"BookingStatus\": bookingStatus,\n                \"QueueNumber\": queueNumber\n            }\n\n            console.log(queueObject)\n\n            var myJSON = encodeURI(JSON.stringify(queueObject));\n            respectiveURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + bookingId!!.toString() + \"&exchangeID=master&bindingKey=\" + this.state.routingKey + \"&bookingDetails=\" + myJSON;\n            console.log(\"testing payment: \" + respectiveURL)\n        }\n\n\n\n\n        const xhr = new XMLHttpRequest(),\n            method = \"GET\",\n            url = respectiveURL;\n        // initialize a new GET request\n        xhr.open(method, url, true);\n        // xhr.onload = function (e) {\n        // respond to every readyState change\n        xhr.onreadystatechange = () => {\n            // ignore all readyStates other than \"DONE\"\n            if (xhr.readyState !== XMLHttpRequest.DONE) {\n                return;\n            }\n\n            // call the callback with status\n            if (xhr.status === 200) {\n                // console.log(typeof(xhr.responseText))\n                if(xhr.responseText == \"no messages\"){\n                    this.setState({\n                        elementNobodyInQueue: \"block\"\n                    })\n                    return;\n                }\n                var calledBooking: Booking;\n                if (buttonSelected == \"nextPatient\") {\n\n                    // if(xhr.responseText == \"no messages\"){\n                    //     this.setState({\n                    //         elementNobodyInQueue : \"block\"\n                    //     })\n\n                    //     return;\n                    // }\n                    console.log(\"testing todayyyyyyyyy\")\n                    console.log(xhr.responseText)\n                    this.setState({\n                        _bookingId: JSON.parse(xhr.responseText).Id,\n                        nric: JSON.parse(xhr.responseText).Nric,\n                        citizenName: JSON.parse(xhr.responseText).CitizenName,\n                        citizenEmail: JSON.parse(xhr.responseText).CitizenEmail,\n                        citizenNumber: JSON.parse(xhr.responseText).CitizenNumber,\n                        citizenSalutation: JSON.parse(xhr.responseText).CitizenSalutation,\n                        generalType: JSON.parse(xhr.responseText).GeneralType,\n\n                        serviceName: JSON.parse(xhr.responseText).ServiceName,\n\n                        serviceProviderEmail: JSON.parse(xhr.responseText).ServiceProviderEmail,\n                        serviceProviderName: JSON.parse(xhr.responseText).ServiceProviderName,\n                        serviceStartDate: JSON.parse(xhr.responseText).ServiceStartDate,\n                        serviceProviderPhone: JSON.parse(xhr.responseText).ServiceProviderPhone,\n                        serviceStartTime: JSON.parse(xhr.responseText).ServiceStartTime,\n                        serviceProviderLocation: JSON.parse(xhr.responseText).ServiceProviderLocation,\n                        bookingStatus: JSON.parse(xhr.responseText).BookingStatus,\n                        queueNumber : JSON.parse(xhr.responseText).QueueNumber,\n                        elementNobodyInQueue: \"none\",\n                        showCurrentCitizen: \"block\"\n                    })\n                \n                    if (this.state.agencySelection == \"HPB\") {\n                        this.setState({\n                            showNextServiceHospitalDoctor: \"none\",\n                            showNextServiceHospitalPharmacy: \"none\",\n                            showNextServiceHospitalPayment: \"none\",\n                            showNextServiceHPB: \"block\",\n                            serviceSelection :\"communityHealth\"\n                        })\n                    }\n                    else {\n\n                        \n                        this.setState({\n                            showNextServiceHospitalDoctor: \"none\",\n                            showNextServiceHospitalPharmacy: \"none\",\n                            showNextServiceHospitalPayment: \"none\",\n                            showNextServiceHPB: \"none\",\n                            serviceSelection :\"Doctor\"\n                        })\n\n                        if(this.state.serviceSelection == \"Doctor\"){\n                            this.setState({\n                                showNextServiceHospitalDoctor: \"block\",\n                                showNextServiceHospitalPharmacy: \"none\",\n                                showNextServiceHospitalPayment: \"none\",\n                                showNextServiceHPB: \"none\"\n                            })\n                        }\n\n                        else if(this.state.serviceSelection == \"Payment\"){\n                            this.setState({\n                                showNextServiceHospitalDoctor: \"none\",\n                                showNextServiceHospitalPharmacy: \"none\",\n                                showNextServiceHospitalPayment: \"block\",\n                                showNextServiceHPB: \"none\"\n                            })\n                        }\n\n                        else{\n                            this.setState({\n                                showNextServiceHospitalDoctor: \"none\",\n                                showNextServiceHospitalPharmacy: \"block\",\n                                showNextServiceHospitalPayment: \"none\",\n                                showNextServiceHPB: \"none\"\n                            })\n                        }\n                    }\n\n                    calledBooking = new Booking(this.state._bookingId, this.state.nric, this.state.citizenName, this.state.citizenSalutation, this.state.citizenEmail, this.state.citizenNumber, this.state.generalType, this.state.serviceName, this.state.serviceProviderName, this.state.serviceProviderEmail, this.state.serviceProviderPhone, this.state.serviceStartDate, this.state.serviceStartTime, this.state.serviceProviderLocation, this.state.bookingStatus, this.state.queueNumber);\n\n                    document.getElementById(\"divCurrentCitizen\")!!.style.display = \"block\";\n                    document.getElementById(\"divButtonNextPatient\")!!.style.display = \"none\";\n                    calledBooking.BookingStatus = this.state.serviceSelection + \"-Calling\"\n\n                    console.log(\"called booking: \" + calledBooking)\n\n                    BaseService.update<Booking>(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + \"api/booking/update/\", this.state._bookingId, calledBooking).then(\n\n                        (rp) => {\n                            if (rp.Status) {\n                                console.log('Booking saved.');\n                            } else {\n                                console.log(rp.Messages);\n                                console.log(\"Messages: \" + rp.Messages);\n                                console.log(\"Exception: \" + rp.Exception);\n                            }\n                        }\n                    );\n\n\n\n                }\n\n                if (buttonSelected == \"sendtoNextService\") {\n                    this.setState({\n                        showModal: true\n                    });\n\n                    calledBooking = new Booking(this.state._bookingId, this.state.nric, this.state.citizenName, this.state.citizenSalutation, this.state.citizenEmail, this.state.citizenNumber, this.state.generalType, this.state.serviceName, this.state.serviceProviderName, this.state.serviceProviderEmail, this.state.serviceProviderPhone, this.state.serviceStartDate, this.state.serviceStartTime, this.state.serviceProviderLocation, this.state.bookingStatus, this.state.queueNumber);\n\n                    \n                    document.getElementById(\"divCurrentCitizen\")!!.style.display = \"none\";\n                    document.getElementById(\"divButtonNextPatient\")!!.style.display = \"block\";\n\n\n\n                    // console.log(this.state)\n\n                    if (this.state.nextServiceSelection == \"Missed Queue\") {\n                    //     this.getQueue(calledBooking.Id!!, this.state.serviceSelection + \"-Missed\", true);\n                        calledBooking.BookingStatus = this.state.serviceSelection + \"-Missed\"\n\n                    }\n\n                    else if (this.state.nextServiceSelection == \"Completed\") {\n                        calledBooking.BookingStatus = \"Completed\"\n\n                    }\n                    else if (this.state.nextServiceSelection != this.state.serviceSelection && this.state.nextServiceSelection != \"Missed Queue\" && this.state.nextServiceSelection != \"Completed\") {\n                    //     this.getQueue(calledBooking.Id!!, this.state.serviceSelection + \"-Queued\", false);\n                        calledBooking.BookingStatus = this.state.nextServiceSelection + \"-Queued\"\n\n                    }\n                    else{\n                        calledBooking.BookingStatus = this.state.serviceSelection + \"-Calling\"\n\n                    }\n\n                    \n\n                    console.log(calledBooking)\n\n\n                    BaseService.update<Booking>(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + \"api/booking/update/\", this.state._bookingId, calledBooking).then(\n\n                        (rp) => {\n                            if (rp.Status) {\n                                console.log('Booking saved.');\n                            } else {\n                                console.log(rp.Messages);\n                                console.log(\"Messages: \" + rp.Messages);\n                                console.log(\"Exception: \" + rp.Exception);\n                            }\n                        }\n                    );\n\n                }\n\n\n\n                // console.log(JSON.parse(xhr.responseText));\n\n                return callback(xhr.status);\n            }\n\n            // got something other than 200,\n            // re-initialize and send another GET request\n            xhr.open(method, url, true);\n            xhr.send();\n        }\n        \n        // send the initial GET request\n        xhr.send();\n\n    \n    }\n\n\n}\n\nexport default ServiceCounter;\nfunction typeOf(responseText: string): any {\n    throw new Error('Function not implemented.');\n}\n\n",["137","138"],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Appointments.tsx",["139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],[],"import React from 'react';\nimport '../App.css';\nimport { Text, Button, Layout, BoxContainer, Breadcrumb, InputGroup, Accordion, InputSelect, Modal, RadioButton, LinkList, } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\nimport Booking from \"../models/booking\";\n\n\nimport { Container, Label, ModalContent, OptionContainer } from \"../models/doc-elements\";\nimport BaseService from '../service/base.service';\n\n\nconst StyledContainer = styled(Layout.GridContainer)`\n    grid-template-rows: 1fr;\n    grid-template-columns: 12fr;\n    grid-template-areas:\n        \"title\"\n        \"button \"\n        \"queue\";\n    grid-gap: 0.25rem;\n    grid-row-gap: 16px;\n`;\n\nconst StyledSection = styled(Layout.Section)`\n    margin-top: 8%;\n    min-height: 600px;\n`;\n\nconst Main = styled.main`\n  color: white;\n  grid-area: queue;\n  padding: 0.25rem;\n`;\n\ninterface MyState {\n    bookings: Booking[],\n    // booking: Booking,    \n    inputValue: string,\n    clicked: string,\n    showModal: boolean,\n    showNRIC: string,\n    showGeneralPractioner: string,\n    showDivider: string,\n    showSpecialist: string,\n    showGeneralTypeDropDown: string,\n    selected: string,\n    showDivCitizenAppoinments: string,\n    chooseOtherOptions: boolean,\n    agencySelection: string,\n    showDivHPBView: string,\n    showHospitalView: string,\n    showGeneralTypeDropDownHPB: string,\n    showDIVHPBcomuunityHealth: string,\n    showDIVHPBworkplaceHealth: string,\n    showGeneralServiceDropDown: string,\n    showGeneralServiceDropDownHospital: string,\n    dropDownHint: string,\n    generatedNumber: string,\n}\n\nvar queueNumberArray: number[] = [];\n\n\n\n\n\nclass Appointment extends React.Component<{}, MyState> {\n\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            inputValue: '',\n            clicked: 'none',\n            showModal: false,\n            showNRIC: 'none',\n            showGeneralPractioner: 'block',\n            showDivider: 'block',\n            showSpecialist: 'block',\n            showGeneralTypeDropDown: 'none',\n            selected: 'A',\n            showDivCitizenAppoinments: 'none',\n            chooseOtherOptions: false,\n            agencySelection: \"HPB\",\n            showDivHPBView: \"block\",\n            showHospitalView: \"none\",\n            showGeneralTypeDropDownHPB: \"none\",\n            showDIVHPBcomuunityHealth: \"block\",\n            showDIVHPBworkplaceHealth: \"block\",\n            showGeneralServiceDropDown: \"none\",\n            showGeneralServiceDropDownHospital: \"none\",\n            dropDownHint: \"Select a service\",\n            generatedNumber: \"\",\n\n        };\n        this.loadData = this.loadData.bind(this);\n\n    }\n\n\n    componentDidMount() {\n        this.loadData();\n        // setInterval(this.loadData, 1000);\n    }\n\n    async loadData() {\n        // if (this.state.chooseOtherOptions == false) {\n        try {\n            var apiURL: string\n            apiURL = process.env.REACT_APP_APPOINTMENT_API_ADDRESS + 'api/booking/location/Tampines';\n\n            fetch(apiURL)\n                .then(function (response) {\n\n                    return response.json();\n                })\n                .then((myJson) => {\n                    this.setState({\n                        bookings: []\n                    })\n                    myJson.data.forEach(element => {\n                        var eachBooking = new Booking(\n                            element[\"_id\"],\n                            element[\"nric\"],\n                            element[\"citizenName\"],\n                            element[\"citizenSalutation\"],\n                            element[\"citizenEmail\"],\n                            element[\"citizenNumber\"],\n                            element[\"generalType\"],\n                            element[\"serviceName\"],\n                            element[\"serviceProviderName\"],\n                            element[\"serviceProviderEmail\"],\n                            element[\"serviceProviderPhone\"],\n                            element[\"serviceStartDate\"],\n                            element[\"serviceStartTime\"],\n                            element[\"serviceProviderLocation\"],\n                            element[\"bookingStatus\"],\n                            element[\"queueNumber\"]\n                        );\n\n                        this.state.bookings.push(eachBooking)\n                        this.setState({\n                            bookings: this.state.bookings,\n                            clicked: 'block'\n                        });\n\n                    });\n                });\n\n        } catch (e) {\n            console.log(e);\n        }\n        // }\n\n\n    }\n\n\n\n    public async searchByLocation(val: string) {\n\n\n\n        console.log(val)\n\n        if (val == \"General Practioner\") {\n            this.loadData();\n\n            this.setState({\n                showSpecialist: 'none',\n                showDivider: 'none',\n                showGeneralPractioner: 'block',\n                showNRIC: 'none',\n                showGeneralTypeDropDown: 'block',\n                showGeneralServiceDropDownHospital: 'none'\n            });\n\n\n\n        }\n        if (val == \"Specialist\") {\n            this.loadData();\n\n            this.setState({\n                showSpecialist: 'block',\n                showDivider: 'none',\n                showGeneralPractioner: 'none',\n                showNRIC: 'none',\n                showGeneralTypeDropDown: 'block',\n                showGeneralServiceDropDownHospital: 'none'\n\n            });\n            window.location.reload()\n\n            this.loadData();\n\n\n        }\n\n        if (val == \"communityHealth\") {\n            this.loadData();\n\n            this.setState({\n                showSpecialist: 'none',\n                showDivider: 'none',\n                showGeneralPractioner: 'none',\n                showNRIC: 'none',\n                showGeneralTypeDropDownHPB: 'block',\n                showDIVHPBcomuunityHealth: \"block\",\n                showDIVHPBworkplaceHealth: \"none\",\n                showGeneralServiceDropDownHospital: 'none'\n\n            });\n\n\n\n        }\n\n        if (val == \"workplaceHealth\") {\n            this.loadData();\n\n            this.setState({\n                showSpecialist: 'none',\n                showDivider: 'none',\n                showGeneralPractioner: 'none',\n                showNRIC: 'none',\n                showGeneralTypeDropDownHPB: 'block',\n                showDIVHPBcomuunityHealth: \"none\",\n                showDIVHPBworkplaceHealth: \"block\",\n                showGeneralServiceDropDownHospital: 'none'\n\n            });\n\n\n\n\n        }\n\n\n\n        if (val == \"NRIC\") {\n            // this.loadData();\n\n            this.setState({\n                showGeneralServiceDropDownHospital: 'none'\n            })\n\n            if (this.state.inputValue == '' || this.state.inputValue == null) {\n                return;\n            }\n\n            var apiURL: string\n            apiURL = process.env.REACT_APP_APPOINTMENT_API_ADDRESS + 'api/booking/citizen/' + this.state.inputValue;\n            console.log(\"testing::: \" + apiURL)\n            fetch(apiURL)\n                .then(function (response) {\n\n                    return response.json();\n                })\n                .then((myJson) => {\n                    this.state.bookings.length = 0;\n                    myJson.data.forEach(element => {\n                        var eachBooking = new Booking(\n                            element[\"_id\"],\n                            element[\"nric\"],\n                            element[\"citizenName\"],\n                            element[\"citizenSalutation\"],\n                            element[\"citizenEmail\"],\n                            element[\"citizenNumber\"],\n                            element[\"generalType\"],\n                            element[\"serviceName\"],\n                            element[\"serviceProviderName\"],\n                            element[\"serviceProviderEmail\"],\n                            element[\"serviceProviderPhone\"],\n                            element[\"serviceStartDate\"],\n                            element[\"serviceStartTime\"],\n                            element[\"serviceProviderLocation\"],\n                            element[\"bookingStatus\"],\n                            element[\"queueNumber\"]\n                        );\n\n\n                        // const bookings = this.state.bookings.slice(0);\n                        this.state.bookings.push(eachBooking)\n\n\n                        // console.log(bookings)\n\n                        this.setState({\n                            bookings: this.state.bookings,\n                            clicked: 'block',\n                            showDivCitizenAppoinments: 'block'\n                        });\n\n                    });\n                });\n        }\n\n\n    }\n\n    render() {\n\n\n        return (\n\n            <div>\n\n\n\n                <StyledSection>\n\n                    <Modal.Base\n                        show={this.state.showModal}\n                        animationFrom=\"bottom\"\n                        enableOverlayClick={true}\n                    // onOverlayClick={closeModal()}\n                    >\n                        <Modal.Box onClose={() => {\n\n                            this.setState({\n                                showModal: false\n                            });\n\n\n\n                        }}>\n                            <ModalContent>\n                                Send to queue successfully\n                                <b> {this.state.generatedNumber}</b>\n                            </ModalContent>\n                        </Modal.Box>\n                    </Modal.Base>\n\n                    <Layout.Container>\n\n\n\n                        <Breadcrumb links={[{ title: 'Home', url: '/Home' }, { title: 'Appointments' }]} />\n\n\n                        Change Agency View:\n                        <div id='divAgency' className=\"inlinecontent\" style={{ justifyItems: \"start\", maxWidth: '400px' }}>\n                            <InputSelect\n                                options={[\n                                    { value: \"HPB\", label: \"HPB\" },\n                                    { value: \"Hospital\", label: \"Hospital\" },\n\n                                ]}\n\n                                valueExtractor={(item) => item.value}\n                                listExtractor={(item) => item.label}\n\n                                displayValueExtractor={(item) => item.label}\n                                placeholder={this.state.agencySelection}\n                                onSelectItem={(item, selectedValue) => {\n                                    this.setState({ inputValue: selectedValue }, () => {\n                                        this.ddlAgency(selectedValue)\n\n                                    });\n                                }} />\n\n                        </div>\n\n                        <br />\n\n                        <div id='hpbView' style={{ display: this.state.showDivHPBView }}>\n\n\n                            <Container>\n                                <OptionContainer>\n                                    <RadioButton value=\"A\" id=\"multiple-options-a\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'A',\n                                            showSpecialist: 'block',\n                                            showDivider: 'block',\n                                            showGeneralPractioner: 'block',\n                                            showNRIC: 'none',\n                                            showGeneralTypeDropDown: 'none',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: false,\n                                            showGeneralTypeDropDownHPB: \"none\",\n                                            showDIVHPBcomuunityHealth: \"block\",\n                                            showDIVHPBworkplaceHealth: \"block\"\n\n                                        }\n\n                                        );\n\n                                        this.loadData();\n                                    }\n\n                                    } checked={this.state.selected === \"A\"} />\n                                    <Label htmlFor=\"multiple-options-a\">View All Appointments</Label>\n                                </OptionContainer>\n                                <OptionContainer>\n                                    <RadioButton value=\"B\" id=\"multiple-options-b\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'B',\n                                            showSpecialist: 'none',\n                                            showDivider: 'none',\n                                            showGeneralPractioner: 'none',\n                                            showNRIC: 'block',\n                                            showGeneralTypeDropDown: 'none',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: true,\n                                            showGeneralTypeDropDownHPB: \"none\",\n                                            showDIVHPBcomuunityHealth: \"none\",\n                                            showDIVHPBworkplaceHealth: \"none\"\n                                        }\n\n                                        );\n                                    }} checked={this.state.selected === \"B\"} />\n                                    <Label htmlFor=\"multiple-options-b\">View appointments by NRIC</Label>\n                                </OptionContainer>\n\n\n                                <OptionContainer>\n                                    <RadioButton value=\"C\" id=\"multiple-options-c\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'C',\n                                            showSpecialist: 'none',\n                                            showDivider: 'none',\n                                            showGeneralPractioner: 'none',\n                                            showNRIC: 'none',\n                                            showGeneralTypeDropDown: 'none',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: true,\n                                            showGeneralTypeDropDownHPB: \"block\",\n                                            showDIVHPBworkplaceHealth: \"none\",\n                                            showDIVHPBcomuunityHealth: \"none\",\n                                            showGeneralServiceDropDownHospital: \"block\",\n                                            dropDownHint: \"Select a service\"\n                                        }\n\n                                        );\n                                    }} checked={this.state.selected === \"C\"} />\n                                    <Label htmlFor=\"multiple-options-c\">View appointments by service</Label>\n                                </OptionContainer>\n\n                            </Container>\n\n                            <div className=\"spacer2\"></div>\n\n                            <div id='divNRIC' style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showNRIC }}>\n                                <div style={{ 'margin': '5px' }}>\n                                    <Text.Body >Search by NRIC: </Text.Body>\n                                </div>\n                                <InputGroup addon={{\n                                    type: 'custom'\n                                }} placeholder=\"Type NRIC here...\"\n\n                                    onChange={evt => this.updateInputValue(evt)}\n                                />\n\n                                <div style={{ 'padding': '5px' }}></div>\n                                <Button.Default onClick={() => this.searchByLocation(\"NRIC\")} >Search</Button.Default>\n                            </div>\n\n\n                            <div id='divLocation' className=\"inlinecontent\" style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showGeneralTypeDropDownHPB }}>\n                                <InputSelect\n                                    options={[\n                                        { value: \"communityHealth\", label: \"communityHealth\" },\n                                        { value: \"workplaceHealth\", label: \"workplaceHealth\" },\n\n                                    ]}\n\n                                    valueExtractor={(item) => item.value}\n                                    listExtractor={(item) => item.label}\n                                    displayValueExtractor={(item) => item.label}\n                                    placeholder={this.state.dropDownHint}\n                                    onSelectItem={(item, selectedValue) => {\n                                        this.setState({ inputValue: selectedValue }, () => {\n                                            this.searchByLocation(selectedValue)\n                                        });\n                                    }} />\n\n                            </div>\n\n\n                            <div className=\"spacer5\"></div>\n\n                            <div id='divAppointments' >\n\n                                <div id='divGeneralPractioner' className='rcorner2' style={{ 'display': this.state.showDIVHPBcomuunityHealth }}>\n\n\n                                    <StyledContainer>\n                                        <Text.H3>Appointments [HPB Consultation - communityHealth]</Text.H3>\n                                        <Text.Body>Government services appointments</Text.Body>\n                                        <Main>\n\n\n\n\n                                            <Accordion.Base className='base' >\n                                                {this.state.bookings.filter((element => \n                                                \n                                                (\n                                                    (element.GeneralType == 'HPB Consultation - communityHealth' && element.BookingStatus.includes('New')) \n                                                    || element.BookingStatus.includes(\"communityHealth\")\n                                                    \n                                                    ))).map((input, index) => {\n                                                    var showButton = 'none';\n                                                    if ((input.BookingStatus == 'New' && input.ServiceProviderName.includes(\"HPB\")  ) ){\n                                                        showButton = 'block';\n                                                    }\n                                                    console.log(this.state.bookings)\n                                                    return (\n                                                        <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                            <Text.Body>\n                                                                <ul>\n                                                                    <li>\n                                                                        <b>Citizen Name :</b>  {input.CitizenName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Name:</b>  {input.ServiceName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Status:</b>  {input.BookingStatus}\n                                                                    </li>\n                                                                </ul>\n                                                                <div style={{ 'display': showButton }}>\n                                                                    <Button.Default\n                                                                        onClick={() => this.checkPage(this.handle200, input)}\n                                                                    >Send to Queue</Button.Default>\n                                                                </div>\n\n                                                            </Text.Body>\n                                                        </Accordion.Item>\n                                                    )\n                                                })}\n                                            </Accordion.Base>\n\n                                        </Main>\n\n\n                                        <div className=\"spacer3\"></div>\n                                    </StyledContainer>\n                                </div>\n\n                                <br />\n\n                                <div id='divGeneralPractioner' className='rcorner' style={{ 'display': this.state.showDIVHPBworkplaceHealth }}>\n\n                                    <StyledContainer>\n                                        <Text.H3>Appointments [HPB Consultation - workplaceHealth]</Text.H3>\n                                        <Text.Body>Government services appointments</Text.Body>\n                                        <Main>\n\n\n\n\n                                            <Accordion.Base className='base' >\n                                                {this.state.bookings.filter(\n                                                    \n                                                    (\n                                                        \n                                                        element => (element.GeneralType == 'HPB Consultation - workplaceHealth' && element.BookingStatus.includes('New')) \n                                                        || element.BookingStatus.includes(\"workplaceHealth\"))\n    \n                                                    \n                                                    ).map((input, index) => {\n                                                    var showButton = 'none';\n                                                    if ((input.BookingStatus == 'New' && input.ServiceProviderName.includes(\"HPB\")  ) ){\n                                                        showButton = 'block';\n                                                    }\n                                                    console.log(this.state.bookings)\n                                                    return (\n                                                        <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                            <Text.Body>\n                                                                <ul>\n                                                                    <li>\n                                                                        <b>Citizen Name :</b>  {input.CitizenName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Name:</b>  {input.ServiceName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Status:</b>  {input.BookingStatus}\n                                                                    </li>\n                                                                </ul>\n                                                                <div style={{ 'display': showButton }}>\n                                                                    <Button.Default\n                                                                        onClick={() => this.checkPage(this.handle200, input)}\n                                                                    >Send to Queue</Button.Default>\n                                                                </div>\n\n                                                            </Text.Body>\n                                                        </Accordion.Item>\n                                                    )\n                                                })}\n                                            </Accordion.Base>\n\n                                        </Main>\n\n\n                                        <div className=\"spacer3\"></div>\n                                    </StyledContainer>\n\n                                </div>\n\n\n                                <div id='divDivider' className=\"spacer5\" style={{ 'display': this.state.showDivider }}></div>\n\n                                <div id='divCitizenAppointments' style={{ 'display': this.state.showDivCitizenAppoinments }}>\n                                    <Main>\n\n\n\n\n                                        <Accordion.Base className='base' >\n                                            {\n\n                                                this.state.bookings.filter((element => element.ServiceProviderLocation == 'Tampines')).map(\n\n\n                                                    (input, index) => {\n\n                                                        var showButton = 'none';\n                                                        if ((input.BookingStatus == 'New' && input.ServiceProviderName.includes(\"HPB\") || input.BookingStatus.includes ('workplaceHealth') || input.BookingStatus.includes ('communityHealth') ) ){\n                                                            showButton = 'block';\n                                                        }\n\n                                                        return (\n                                                            <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                                <Text.Body>\n                                                                    <ul>\n                                                                        <li>\n                                                                            <b>Citizen Name :</b>  {input.CitizenName}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Name:</b>  {input.ServiceName}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Status:</b>  {input.BookingStatus}\n                                                                        </li>\n                                                                    </ul>\n                                                                    <div style={{ 'display': showButton }}>\n                                                                        <Button.Default\n                                                                            onClick={() => this.checkPage(this.handle200, input)}\n                                                                        >Send to Queue</Button.Default>\n                                                                    </div>\n\n                                                                </Text.Body>\n                                                            </Accordion.Item>\n                                                        )\n\n\n\n\n                                                    })}\n                                        </Accordion.Base>\n\n                                    </Main>\n                                </div>\n\n\n\n\n                            </div>\n\n                        </div>\n\n                        <div id='hospitalView' style={{ display: this.state.showHospitalView }}>\n\n\n                            <Container>\n                                <OptionContainer>\n                                    <RadioButton value=\"A\" id=\"multiple-options-a\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'A',\n                                            showSpecialist: 'block',\n                                            showDivider: 'block',\n                                            showGeneralPractioner: 'block',\n                                            showNRIC: 'none',\n                                            showGeneralServiceDropDownHospital: 'none',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: false\n                                        }\n\n                                        );\n                                        console.log(\"testing!!!!1\")\n                                        this.loadData();\n                                    }\n\n                                    } checked={this.state.selected === \"A\"} />\n                                    <Label htmlFor=\"multiple-options-a\">View All Appointments</Label>\n                                </OptionContainer>\n                                <OptionContainer>\n                                    <RadioButton value=\"B\" id=\"multiple-options-b\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'B',\n                                            showSpecialist: 'none',\n                                            showDivider: 'none',\n                                            showGeneralPractioner: 'none',\n                                            showNRIC: 'block',\n                                            showGeneralServiceDropDownHospital: 'none',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: true\n\n                                        }\n\n                                        );\n                                    }} checked={this.state.selected === \"B\"} />\n                                    <Label htmlFor=\"multiple-options-b\">View appointments by NRIC</Label>\n                                </OptionContainer>\n                                <OptionContainer>\n                                    <RadioButton value=\"C\" id=\"multiple-options-c\" name=\"multiple-options\" onChange={() => {\n                                        this.setState({\n                                            selected: 'C',\n                                            showSpecialist: 'none',\n                                            showDivider: 'none',\n                                            showGeneralPractioner: 'none',\n                                            showNRIC: 'none',\n                                            showGeneralServiceDropDownHospital: 'block',\n                                            showDivCitizenAppoinments: 'none',\n                                            chooseOtherOptions: true\n                                        });\n\n                                    }} checked={this.state.selected === \"C\"} />\n                                    <Label htmlFor=\"multiple-options-c\">View Appointments by Service Type</Label>\n                                </OptionContainer>\n                            </Container>\n\n                            <div className=\"spacer2\"></div>\n\n                            <div id='divNRIC' style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showNRIC }}>\n                                <div style={{ 'margin': '5px' }}>\n                                    <Text.Body >Search by NRIC: </Text.Body>\n                                </div>\n                                <InputGroup addon={{\n                                    type: 'custom'\n                                }} placeholder=\"Type NRIC here...\"\n\n                                    onChange={evt => this.updateInputValue(evt)}\n                                />\n\n                                <div style={{ 'padding': '5px' }}></div>\n                                <Button.Default onClick={() => this.searchByLocation(\"NRIC\")} >Search</Button.Default>\n                            </div>\n\n                            <div className=\"inlinecontent\" style={{ justifyItems: \"start\", maxWidth: '400px', display: this.state.showGeneralServiceDropDownHospital }}>\n                                <InputSelect\n                                    options={[\n                                        { value: \"General Practioner\", label: \"General Practioner\" },\n                                        { value: \"Specialist\", label: \"Specialist\" },\n\n                                    ]}\n\n                                    valueExtractor={(item) => item.value}\n                                    listExtractor={(item) => item.label}\n                                    displayValueExtractor={(item) => item.label}\n                                    placeholder=\"Select a service type\"\n                                    onSelectItem={(item, selectedValue) => {\n                                        this.setState({ inputValue: selectedValue }, () => {\n                                            this.searchByLocation(selectedValue)\n                                        });\n                                    }} />\n\n                            </div>\n\n\n\n                            <div className=\"spacer5\"></div>\n\n                            <div id='divAppointments' >\n\n                                <div id='divGeneralPractioner' className='rcorner2' style={{ 'display': this.state.showGeneralPractioner }}>\n\n\n                                    <StyledContainer>\n                                        <Text.H3>Appointments [General Practioner]</Text.H3>\n                                        <Text.Body>Government services appointments</Text.Body>\n                                        <Main>\n\n\n\n\n                                            <Accordion.Base className='base' >\n                                                {this.state.bookings.filter((element => \n                                                \n                                                (element.GeneralType == 'General Practioner' && element.BookingStatus.includes('New')) \n                                                    || element.BookingStatus.includes(\"Doctor\") || element.BookingStatus.includes(\"Payment\") || element.BookingStatus.includes(\"Pharmacy\") )\n\n\n                                                // element.GeneralType == 'General Practionar' || !element.BookingStatus.includes(\"HPB\")\n                                                \n                                                ).map((input, index) => {\n                                                    var showButton = 'none';\n                                                    if (input.BookingStatus == 'New' && !input.ServiceProviderName.includes(\"HPB\")  ){\n                                                        showButton = 'block';\n                                                    }\n                                                    console.log(this.state.bookings)\n                                                    return (\n                                                        <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                            <Text.Body>\n                                                                <ul>\n                                                                    <li>\n                                                                        <b>Citizen Name :</b>  {input.CitizenName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Name:</b>  {input.ServiceName}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                    </li>\n                                                                    <li>\n                                                                        <b>Service Status:</b>  {input.BookingStatus}\n                                                                    </li>\n                                                                </ul>\n                                                                <div style={{ 'display': showButton }}>\n                                                                    <Button.Default\n                                                                        onClick={() => this.checkPage(this.handle200, input)}\n                                                                    >Send to Queue</Button.Default>\n                                                                </div>\n\n                                                            </Text.Body>\n                                                        </Accordion.Item>\n                                                    )\n                                                })}\n                                            </Accordion.Base>\n\n                                        </Main>\n\n\n                                        <div className=\"spacer3\"></div>\n                                    </StyledContainer>\n\n\n                                </div>\n                                <div id='divDivider' className=\"spacer5\" style={{ 'display': this.state.showDivider }}></div>\n\n                                <div id='divCitizenAppointments' style={{ 'display': this.state.showDivCitizenAppoinments }}>\n                                    <Main>\n\n\n\n\n                                        <Accordion.Base className='base' >\n                                            {\n\n                                                this.state.bookings.filter((element => element.ServiceProviderLocation == 'Tampines')).map(\n\n\n                                                    (input, index) => {\n\n                                                        var showButton = 'none';\n                                                        if (((input.BookingStatus == 'New' && !input.ServiceProviderName.includes(\"HPB\")) || input.BookingStatus.includes ('Payment') || input.BookingStatus.includes ('Pharmacy') || input.BookingStatus.includes ('Doctor')) ){\n                                                            showButton = 'block';\n                                                        }\n\n                                                        return (\n                                                            <Accordion.Item title={input.CitizenName} key={index} expanded={false}>\n                                                                <Text.Body>\n                                                                    <ul>\n                                                                        <li>\n                                                                            <b>Citizen Name :</b>  {input.CitizenName}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Name:</b>  {input.ServiceName}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                        </li>\n                                                                        <li>\n                                                                            <b>Service Status:</b>  {input.BookingStatus}\n                                                                        </li>\n                                                                    </ul>\n                                                                    <div style={{ 'display': showButton }}>\n                                                                        <Button.Default\n                                                                            onClick={() => this.checkPage(this.handle200, input)}\n                                                                        >Send to Queue</Button.Default>\n                                                                    </div>\n\n                                                                </Text.Body>\n                                                            </Accordion.Item>\n                                                        )\n\n\n\n\n                                                    })}\n                                        </Accordion.Base>\n\n                                    </Main>\n                                </div>\n\n                                <div id='divSpecialist' className='rcorner' style={{ 'display': this.state.showSpecialist }}>\n\n\n                                    <StyledContainer>\n                                        <Text.H3>Appointments [Specialist]</Text.H3>\n                                        <Text.Body>Government services appointments</Text.Body>\n                                        <Main>\n\n\n\n\n                                            <Accordion.Base className='base' >\n                                                {\n\n                                                    this.state.bookings.filter((element => element.GeneralType == 'Specialist')).map(\n\n\n                                                        (input, index) => {\n\n                                                            var showButton = 'none';\n                                                            if (input.BookingStatus == 'New' && !input.ServiceProviderName.includes(\"HPB\")  ){\n                                                                showButton = 'none';\n                                                            }\n                                                            else{\n                                                                showButton = 'block'\n                                                            }\n                                                            console.log(this.state.bookings)\n                                                            if (input.GeneralType == 'General Practionar') {\n                                                            }\n                                                            return (\n                                                                <Accordion.Item title={input.CitizenName + \" - \"  + input.QueueNumber} key={index} expanded={false}>\n                                                                    <Text.Body>\n                                                                        <ul>\n                                                                            <li>\n                                                                                <b>Citizen Name :</b>  {input.CitizenName}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Citizen Number: </b> {input.CitizenNumber}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Citizen Email: </b> {input.CitizenEmail}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Service start date:</b>  {input.ServiceStartDate}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Service start time:</b>  {input.ServiceStartTime}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Service Name:</b>  {input.ServiceName}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Service Provider Location:</b>  {input.ServiceProviderLocation}\n                                                                            </li>\n                                                                            <li>\n                                                                                <b>Service Status:</b>  {input.BookingStatus}\n                                                                            </li>\n                                                                        </ul>\n                                                                        <div style={{ 'display': showButton }}>\n                                                                            <Button.Default\n                                                                                onClick={() => this.checkPage(this.handle200, input)}\n                                                                            >Send to Queue</Button.Default>\n                                                                        </div>\n\n                                                                    </Text.Body>\n                                                                </Accordion.Item>\n                                                            )\n\n\n\n\n                                                        })}\n                                            </Accordion.Base>\n\n                                        </Main>\n\n\n                                        <div className=\"spacer3\"></div>\n                                    </StyledContainer>\n                                </div>\n\n\n                            </div>\n\n                        </div>\n                    </Layout.Container>\n                </StyledSection>\n            </div>\n        )\n    }\n\n    ddlAgency(selectedValue: any) {\n        if (selectedValue == \"HPB\") {\n            this.setState({\n                showDivHPBView: \"block\",\n                showHospitalView: \"none\",\n                showDivCitizenAppoinments: \"none\",\n                dropDownHint: \"Select a service\"\n\n            })\n        }\n        else {\n            this.setState({\n                showDivHPBView: \"none\",\n                showHospitalView: \"block\",\n                showDivCitizenAppoinments: \"none\",\n                dropDownHint: \"Select a service\"\n\n\n            })\n        }\n    }\n\n    handle200(response) {\n        console.log('handle200 has received:', response);\n    }\n\n    checkPage(callback, booking: Booking) {\n        this.loadData()\n\n        queueNumberArray.push(0)\n\n        console.log(\"queue number arrary\" + queueNumberArray);\n        var num = Math.max.apply(null, queueNumberArray) + 1;\n        queueNumberArray.push(num)\n\n        console.log(\"max number: \" + num)\n        var str = String(num);\n        while (str.length < 4) str = \"0\" + str;\n        str = \"H\" + str;\n        var date = new Date().toISOString().split('T')[0]\n        \n        if(booking.QueueNumber == \"\"){\n            booking.QueueNumber = str\n            this.setState({\n                generatedNumber: \"Generated queue number is \" + str\n            })\n        }\n        else{\n            booking.QueueNumber = booking.QueueNumber\n            this.setState({\n                generatedNumber: \"Current queue number is \" + booking.QueueNumber\n            })\n        }\n\n        \n\n        const myJSON = encodeURI(JSON.stringify(booking));\n\n        var updatedURL = \"\";\n\n        if ( (booking.GeneralType == \"HPB Consultation - workplaceHealth\" && booking.BookingStatus == \"New\") || booking.BookingStatus.includes( \"workplaceHealth\")) {\n            updatedURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + booking.Id + \"&exchangeID=master&bindingKey=hpb.whq&bookingDetails=\" + myJSON;\n        }\n        else if ( (booking.GeneralType == \"HPB Consultation - communityHealth\" && booking.BookingStatus ==\"New\") || booking.BookingStatus.includes(\"communityHealth\")) {\n            updatedURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + booking.Id + \"&exchangeID=master&bindingKey=hpb.chq&bookingDetails=\" + myJSON;\n            console.log(updatedURL)\n        }\n        else if ( (booking.GeneralType == \"General Practionar\" && booking.BookingStatus ==\"New\") || (booking.GeneralType == \"Specialist\" && booking.BookingStatus ==\"New\") || booking.BookingStatus.includes(\"Doctor\")) {\n            updatedURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + booking.Id + \"&exchangeID=master&bindingKey=sgh.doctor&bookingDetails=\" + myJSON;\n        }\n        else if (booking.BookingStatus == \"Payment-Missed\" || booking.BookingStatus.includes(\"Payment\")) {\n            updatedURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + booking.Id + \"&exchangeID=master&bindingKey=sgh.payment&bookingDetails=\" + myJSON;\n        }\n        else if (booking.BookingStatus == \"Pharmcy-Missed\" || booking.BookingStatus.includes(\"Pharmcy\")) {\n            updatedURL = \"https://hyxfimzf9g.execute-api.us-east-1.amazonaws.com/default/sender?bookingID=\" + booking.Id + \"&exchangeID=master&bindingKey=sgh.pharmcy&bookingDetails=\" + myJSON;\n        }\n\n        console.log(\"testing now \" + updatedURL)\n\n        const xhr = new XMLHttpRequest(),\n            method = \"GET\",\n            url = updatedURL;\n\n        // initialize a new GET request\n        xhr.open(method, url, true);\n\n        // respond to every readyState change\n        xhr.onreadystatechange = () => {\n\n            // ignore all readyStates other than \"DONE\"\n            if (xhr.readyState !== XMLHttpRequest.DONE) { return; }\n\n            // call the callback with status\n            if (xhr.status === 200) {\n\n\n                if ( (booking.GeneralType.toString().includes(\"workplaceHealth\") && booking.BookingStatus == \"New\") || booking.BookingStatus == \"workplaceHealth-Missed\") {\n                    booking.BookingStatus = \"workplaceHealth-Queued\";\n                }\n                else if ( (booking.GeneralType.toString().includes(\"communityHealth\") && booking.BookingStatus == \"New\") || booking.BookingStatus == \"communityHealth-Missed\") {\n                    booking.BookingStatus = \"communityHealth-Queued\";\n                }\n\n                else if ( (booking.GeneralType.toString().includes(\"General Practionar\") && booking.BookingStatus == \"New\") || booking.BookingStatus == \"Doctor-Missed\") {\n                    booking.BookingStatus = \"Doctor-Queued\";\n                }\n                else if ( (booking.GeneralType.toString().includes(\"Specialist\") && booking.BookingStatus == \"New\") || booking.BookingStatus == \"Doctor-Missed\") {\n                    booking.BookingStatus = \"Doctor-Queued\";\n                }\n                else if (  booking.BookingStatus == \"Payment-Missed\" ) {\n                    booking.BookingStatus = \"Payment-Queued\";\n                }\n                else if ( booking.BookingStatus == \"Pharmacy-Missed\"){\n                    booking.BookingStatus = \"Pharmacy-Queued\";\n                }\n\n                \n\n\n\n          \n\n                BaseService.update<Booking>(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + \"api/booking/update/\", booking.Id, booking).then(\n\n                    (rp) => {\n                        if (rp.Status) {\n\n                        this.setState({\n                            showModal: true\n                        })\n                        this.loadData()\n                    \n                    } else {\n                            console.log(rp.Messages);\n                            console.log(\"Messages: \" + rp.Messages);\n                            console.log(\"Exception: \" + rp.Exception);\n                        }\n                    }\n                );\n\n                //  console.log(\"debugging: ------------------\")\n                //  console.log(\"current queue is: \")\n                //  console.log(this.state.queue)\n\n                // if(this.state.queue.CurrentService.toString().includes(\"Missed\")){\n\n                //     if(service != \"individual\"){\n                //         this.state.queue.CurrentService = service + \"-Queued\";\n                //     }\n                //     else{\n                //         if(this.state.queue.CurrentService.toString().includes(\"workplaceHealth\")){\n                //             this.state.queue.CurrentService = \"workplaceHealth-Queued\";\n                //         }\n                //         else if(this.state.queue.CurrentService.toString().includes(\"workplaceHealth\")){\n                //             this.state.queue.CurrentService = \"communityHealth-Queued\";\n                //         }\n                //         else{\n                //             this.state.queue.CurrentService = \"Doctor-Queued\";\n\n                //         }\n                //     }\n\n                //     BaseService.update<Queue>(process.env.REACT_APP_QUEUE_API_ADDRESS + \"api/queue/update/\", this.state.queue.Id, this.state.queue).then(\n                //         (rp) => {\n                //             if (rp.Status) {\n                //                 console.log(\"Update successfully\")\n                //             } else {\n                //                 console.log(rp.Messages);\n                //                 console.log(\"Messages: \" + rp.Messages);\n                //                 console.log(\"Exception: \" + rp.Exception);\n                //             }\n                //         }\n                //     );\n                // }\n\n                //     BaseService.create<Queue>(process.env.REACT_APP_QUEUE_API_ADDRESS + \"api/queue/create\",  this.state.queue).then(\n                //         (rp) => {\n                //             if (rp.Status) {\n\n\n\n                //                 if(service != \"individual\"){\n                //                     booking.BookingStatus = service + \"-Queued\";\n                //                 }\n                //                 else{\n                //                     if(booking.GeneralType.includes(\"workplaceHealth\")){\n                //                         booking.BookingStatus = \"workplaceHealth-Queued\";\n                //                     }\n                //                     else if(booking.GeneralType.includes(\"workplaceHealth\")){\n                //                         booking.BookingStatus = \"communityHealth-Queued\";\n                //                     }\n                //                     else{\n                //                         booking.BookingStatus = \"Doctor-Queued\";\n                //                     }\n                //                 }\n\n\n\n                //                 BaseService.update<Booking>(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + \"api/booking/update/\", booking.Id, booking).then(\n\n                //                     (rp) => {\n                //                         if (rp.Status) {\n                //                             console.log('Booking saved.');\n                //                         } else {\n                //                             console.log(rp.Messages);\n                //                             console.log(\"Messages: \" + rp.Messages);\n                //                             console.log(\"Exception: \" + rp.Exception);\n                //                         }\n                //                     }\n                //                 );\n\n\n                //             } else {\n                //                 console.log(rp.Messages);\n                //                 console.log(\"Messages: \" + rp.Messages);\n                //                 console.log(\"Exception: \" + rp.Exception);\n                //             }\n                //         }\n                //     );\n                // }\n\n                // if(service != \"individual\"){\n                //     booking.BookingStatus = service + \"-Queued\";\n                // }\n                // else{\n                //     if(booking.GeneralType.includes(\"workplaceHealth\")){\n                //         booking.BookingStatus = \"workplaceHealth-Queued\";\n                //     }\n                //     else if(booking.GeneralType.includes(\"workplaceHealth\")){\n                //         booking.BookingStatus = \"communityHealth-Queued\";\n                //     }\n                //     else{\n                //         booking.BookingStatus = \"Doctor-Queued\";\n                //     }\n                // }\n\n\n                // BaseService.update<Booking>(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + \"api/booking/update/\", booking.Id, booking).then(\n\n                //     (rp) => {\n                //         if (rp.Status) {\n                //             console.log('Booking saved.');\n                //         } else {\n                //             console.log(rp.Messages);\n                //             console.log(\"Messages: \" + rp.Messages);\n                //             console.log(\"Exception: \" + rp.Exception);\n                //         }\n                //     }\n                // );\n\n\n\n                // this.setState({\n                //     showModal: true,\n                //     queues: this.state.queues\n                // });\n\n                // this.loadData()\n\n                return callback(xhr.status);\n            }\n\n            // got something other than 200,\n            // re-initialize and send another GET request\n            xhr.open(method, url, true);\n            xhr.send();\n        }\n\n        // send the initial GET request\n        xhr.send();\n    }\n\n    updateInputValue(evt) {\n        const val = evt.target.value;\n        this.setState({\n            inputValue: val\n        });\n\n\n\n    }\n\n    // async loadQueues() {\n    //     try {\n    //         var apiURL: string\n    //         var date = new Date().toISOString().split('T')[0].toString()\n\n    //         apiURL = process.env.REACT_APP_QUEUE_API_ADDRESS + 'api/queue/todayQueue/'+ date;\n    //         console.log(apiURL);\n    //         fetch(apiURL)\n    //             .then(function (response) {\n\n    //                 return response.json();\n    //             })\n    //             .then((myJson) => {\n    //                 this.setState({\n    //                     queues: []\n    //                 })\n    //                 myJson.data.forEach(element => {\n    //                     var eachQueue = new Queue(\n    //                         element[\"_id\"],\n    //                         element[\"queueNumber\"],\n    //                         element[\"appointmentId\"],\n    //                         element[\"currentService\"],\n    //                         element[\"queueDate\"],\n    //                         element[\"missedQueue\"]\n\n    //                     );\n\n    //                     this.state.queues.push(eachQueue)\n    //                     this.setState({\n    //                         queues: this.state.queues,\n    //                         clicked: 'block'\n    //                     });\n\n    //                 });\n    //             });\n\n    //             console.log(this.state.queues)\n\n    //     } catch (e) {\n    //         console.log(e);\n    //     }\n    // }\n\n\n\n\n\n}\n\nexport default Appointment;\n","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/Home.tsx",[],[],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/displayBookingForm.tsx",[],[],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/DashboardHPB.tsx",["186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211"],[],"import React from 'react';\nimport '../App.css';\nimport { Banner, Layout } from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\n\nconst StyledSection = styled(Layout.Section)`\n    min-height: 700px;\n`;\n\n\ninterface MyState {\n    callingQueueNumberCommunityHealth: string,\n    callingQueueNumberWorkplaceHealth: string,\n    upcomingQueueNumberCommunityHealth: string,\n    upcomingQueuenumberWorkplaceHealth: string,\n    MissedNumberCommunityHealth: string,\n    MissedNumberWorkplaceHealth: string\n}\n\n\nvar numberInQueueArrayCommunityHealth: string[] = [];\nvar numberInQueueArrayWorkplaceHealth: string[] = [];\n\nvar numberMissedArrayCommunityHealth: string[] = [];\nvar numberMissedArrayWorkplaceHealth: string[] = [];\n\nclass Dashboard extends React.Component<{}, MyState> {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            callingQueueNumberCommunityHealth: '-',\n            callingQueueNumberWorkplaceHealth: '-',\n            upcomingQueueNumberCommunityHealth: '-',\n            upcomingQueuenumberWorkplaceHealth: '-',\n            MissedNumberCommunityHealth: '-',\n            MissedNumberWorkplaceHealth: '-'\n        };\n        this.loadData = this.loadData.bind(this)\n    }\n\n    componentDidMount() {\n        this.loadData();\n        setInterval(this.loadData, 1000);\n    }\n\n    async loadData() {\n\n\n        try {\n            const res = await fetch(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + 'api/booking');\n            const blocks = await res.json();\n            const data = blocks.data;\n\n            var communityHealthIsCalling = false;\n            var workplaceHealthIsCalling = false;\n\n            var communityHealthMissingDisplay = false;\n            var workplaceHealthMissingDisplay = false;\n\n            var communityHealthQueueingDisplay = false;\n            var workplaceHealthQueueingDisplay = false;\n\n            if(communityHealthIsCalling== false){\n                this.setState({\n                    callingQueueNumberCommunityHealth: '-'\n                })\n            }\n\n            if(workplaceHealthIsCalling== false){\n                this.setState({\n                    callingQueueNumberWorkplaceHealth: '-'\n                })\n            }\n            if(communityHealthMissingDisplay== false){\n                this.setState({\n                    MissedNumberCommunityHealth: '-'\n                })\n            }\n\n            if(workplaceHealthMissingDisplay== false){\n                this.setState({\n                    MissedNumberWorkplaceHealth: '-'\n                })\n            }\n            if(communityHealthQueueingDisplay== false){\n                this.setState({\n                    upcomingQueueNumberCommunityHealth: '-'\n                })\n            }\n\n            if(workplaceHealthQueueingDisplay== false){\n                this.setState({\n                    upcomingQueuenumberWorkplaceHealth: '-'\n                })\n            }\n\n        numberInQueueArrayCommunityHealth.length = 0\n        numberInQueueArrayWorkplaceHealth.length = 0\n\n        numberMissedArrayCommunityHealth.length = 0\n        numberMissedArrayWorkplaceHealth.length = 0\n\n            data.forEach(element => {\n                console.log(element)\n                if (element.bookingStatus == 'communityHealth-Calling' ) {\n                    this.setState({\n                        callingQueueNumberCommunityHealth: element.queueNumber.toString()\n                    })\n                }\n                if (element.bookingStatus == 'workplaceHealth-Calling' ) {\n                    this.setState({\n                        callingQueueNumberWorkplaceHealth: element.queueNumber.toString()\n                    })\n                }\n\n\n\n                if (element.bookingStatus == 'communityHealth-Queued' ) {\n                    communityHealthQueueingDisplay = true;\n                    numberInQueueArrayCommunityHealth.push(element.queueNumber.toString())\n                }\n                if (element.bookingStatus == 'workplaceHealth-Queued' ) {\n                    workplaceHealthQueueingDisplay = true;\n                    numberInQueueArrayWorkplaceHealth.push(element.queueNumber.toString())\n                }\n               \n                \n                if (element.bookingStatus == 'communityHealth-Missed' ) {\n                    console.log(element.queueNumber.toString())\n                    communityHealthMissingDisplay = true;\n                    numberMissedArrayCommunityHealth.push(element.queueNumber.toString())\n                }\n                if (element.bookingStatus == 'workplaceHealth-Missed' ) {\n                    workplaceHealthMissingDisplay = true;\n                    numberMissedArrayWorkplaceHealth.push(element.queueNumber.toString())\n                }\n       \n\n\n           \n  \n\n\n                if(numberInQueueArrayCommunityHealth.length != 0 && communityHealthQueueingDisplay == true){\n                    this.setState({\n                        upcomingQueueNumberCommunityHealth: numberInQueueArrayCommunityHealth[0]\n                    })\n                }\n                if(numberInQueueArrayWorkplaceHealth.length != 0 && workplaceHealthQueueingDisplay == true ){\n                    this.setState({\n                        upcomingQueuenumberWorkplaceHealth: numberInQueueArrayWorkplaceHealth[0]\n                    })\n                }\n                if(numberMissedArrayCommunityHealth.length != 0 && communityHealthMissingDisplay == true){\n                    this.setState({\n                        MissedNumberCommunityHealth: numberMissedArrayCommunityHealth[0]\n                    })\n                }\n                if(numberMissedArrayWorkplaceHealth.length != 0 && workplaceHealthMissingDisplay == true){\n                    this.setState({\n                        MissedNumberWorkplaceHealth: numberMissedArrayWorkplaceHealth[0]\n                    })\n                }\n\n\n\n\n\n\n\n\n\n\n            });\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n\n    render() {\n        return (\n            <StyledSection>\n            <div>\n\n                <div className=\"row\">\n                    <div className=\"columnHalf rcorner\" style={{ 'zIndex': '-1' }}><Banner aria-label=\"career-advice\" imgset={{\n                        desktop: 'https://media.istockphoto.com/vectors/abstract-wavy-halftone-dots-background-vector-id1225681170?k=20&m=1225681170&s=612x612&w=0&h=qFzphEqIRbzXBdzL3kqcfwS2ULgmOpIRFYi_2WSgCto=',\n                        mobile: 'https://media.istockphoto.com/vectors/abstract-wavy-halftone-dots-background-vector-id1225681170?k=20&m=1225681170&s=612x612&w=0&h=qFzphEqIRbzXBdzL3kqcfwS2ULgmOpIRFYi_2WSgCto='\n                    }}>\n                        <span style={{ 'margin': 'auto' }}>CommunityHealth</span>\n                    </Banner>\n                        <div>\n                            <a style={{ 'color': 'grey', 'fontSize': 18 }}>Current Serving:</a>\n                        </div>\n                        <b style={{ 'color': 'lightgreen', 'margin': 0, 'fontSize': 80 }}>{this.state.callingQueueNumberCommunityHealth}</b>\n                        <div>\n                            <a style={{ 'color': 'grey', 'fontSize': 18 }}>Upcoming Number:</a>\n                        </div>\n\n                        <b style={{ 'color': 'orange', 'fontSize': 80 }}>{this.state.upcomingQueueNumberCommunityHealth}</b>\n\n                        <div>\n                            <a style={{ 'color': 'grey', 'fontSize': 18 }}>Missed Queue:</a>\n                        </div>\n\n                        <b style={{ 'color': 'red', 'fontSize': 80 }}>{this.state.MissedNumberCommunityHealth}</b>\n                    </div>\n                    <div className=\"columnHalf rcorner\" style={{ 'zIndex': '-1' }}><Banner aria-label=\"career-advice\" imgset={{\n                        desktop: 'https://t3.ftcdn.net/jpg/01/98/05/16/360_F_198051606_qB9GmDGg79tCtoiHkuTtYAQlqpN6feyL.jpg',\n                        mobile: 'https://t3.ftcdn.net/jpg/01/98/05/16/360_F_198051606_qB9GmDGg79tCtoiHkuTtYAQlqpN6feyL.jpg'\n                    }}>\n                        <span style={{ 'margin': 'auto' }}>WorkplaceHealth</span>\n                    </Banner>\n                        <div>\n                            <a style={{ 'color': 'grey', 'fontSize': 18 }}>Current Serving:</a>\n                        </div>\n                        <b style={{ 'color': 'lightgreen', 'margin': 0, 'fontSize': 80 }}>{this.state.callingQueueNumberWorkplaceHealth}</b>\n\n                        <div>\n                            <a style={{ 'color': 'grey', 'fontSize': 18 }}>Upcoming Number:</a>\n                        </div>\n\n                        <b style={{ 'color': 'orange', 'fontSize': 80 }}>{this.state.upcomingQueuenumberWorkplaceHealth}</b>\n\n                        <div>\n                            <a style={{ 'color': 'grey', 'fontSize': 18 }}>Missed Queue:</a>\n                        </div>\n\n                        <b style={{ 'color': 'red', 'fontSize': 80 }}>{this.state.MissedNumberWorkplaceHealth}</b>\n                    </div>\n\n                </div>\n            </div>\n            </StyledSection>\n        )\n    }\n\n}\n\nexport default Dashboard;","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/DashboardHospital.tsx",["212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250"],[],"import React from 'react';\nimport '../App.css';\nimport {\n    Banner, Layout\n} from 'react-lifesg-design-system';\nimport styled from \"styled-components\";\n\nconst StyledSection = styled(Layout.Section)`\n    min-height: 700px;\n`;\n\n\ninterface MyState {\n    callingNumberDoctorQueue: string,\n    callingNumberPaymentQueue: string,\n    callingNumberPharmacyQueue: string,\n    upcomingNumberDoctorQueue: string,\n    upcomingNumberPaymentQueue: string,\n    upcomingNumberPharmacyQueue: string,\n    MissedNumberDoctorQueue: string,\n    MissedNumberPaymentQueue: string,\n    MissedNumberPharmacyQueue: string\n}\n\nvar numberInQueueArrayDoctor: string[] = [];\nvar numberInQueueArrayPayment: string[] = [];\nvar numberInQueueArrayPharmacy: string[] = [];\n\nvar numberMissedArrayDoctor: string[] = [];\nvar numberMissedArrayPayment: string[] = [];\nvar numberMissedArrayPharmacy: string[] = [];\n\n\nclass Dashboard extends React.Component<{}, MyState> {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            callingNumberDoctorQueue: '-',\n            callingNumberPaymentQueue:  '-',\n            callingNumberPharmacyQueue: '-',\n            upcomingNumberDoctorQueue:  '-',\n            upcomingNumberPaymentQueue:  '-',\n            upcomingNumberPharmacyQueue:  '-',\n            MissedNumberDoctorQueue: '-',\n            MissedNumberPaymentQueue: '-',\n            MissedNumberPharmacyQueue: '-'\n        };\n        this.loadData = this.loadData.bind(this)\n    }\n    componentDidMount() {\n        this.loadData();\n        setInterval(this.loadData, 1000);\n    }\n\n    async loadData() {\n\n       \n\n        try {\n            const res = await fetch(process.env.REACT_APP_APPOINTMENT_API_ADDRESS + 'api/booking');\n            const blocks = await res.json();\n            const data = blocks.data;\n\n            var doctorIsCalling = false;\n            var paymentIsCalling = false;\n            var pharmacyIsCalling = false;\n            var pharmacyMissingDisplay = false;\n            var paymentMissingDisplay = false;\n            var doctorMissingDisplay = false;\n            var doctorQueueingDisplay = false;\n            var pharmacyQueueingDisplay = false;\n            var paymentQueueingDisplay = false;\n\n            if(doctorIsCalling== false){\n                this.setState({\n                    callingNumberDoctorQueue: '-'\n                })\n            }\n\n            if(paymentIsCalling== false){\n                this.setState({\n                    callingNumberPaymentQueue: '-'\n                })\n            }\n\n            if(pharmacyIsCalling== false){\n                this.setState({\n                    callingNumberPharmacyQueue: '-'\n                })\n            }\n            if(pharmacyMissingDisplay== false){\n                this.setState({\n                    MissedNumberPharmacyQueue: '-'\n                })\n            }\n\n            if(paymentMissingDisplay== false){\n                this.setState({\n                    MissedNumberPaymentQueue: '-'\n                })\n            }\n\n            if(doctorMissingDisplay== false){\n                this.setState({\n                    MissedNumberDoctorQueue: '-'\n                })\n            }\n            if(doctorQueueingDisplay== false){\n                this.setState({\n                    upcomingNumberDoctorQueue: '-'\n                })\n            }\n\n            if(pharmacyQueueingDisplay== false){\n                this.setState({\n                    upcomingNumberPharmacyQueue: '-'\n                })\n            }\n\n            if(paymentQueueingDisplay== false){\n                this.setState({\n                    upcomingNumberPaymentQueue: '-'\n                })\n            }\n\n            numberInQueueArrayDoctor.length = 0\n            numberInQueueArrayPayment.length = 0\n            numberInQueueArrayPharmacy.length = 0\n\n            numberMissedArrayDoctor.length = 0\n            numberMissedArrayPayment.length = 0\n            numberMissedArrayPharmacy.length = 0\n\n            \n\n            data.forEach(element => {\n                if (element.bookingStatus == 'Doctor-Calling' ) {\n                    console.log(\"testing here! success\")\n                    this.setState({\n                        callingNumberDoctorQueue:element.queueNumber.toString()\n                    })\n                    console.log(\"hi\" + this.state.callingNumberDoctorQueue)\n                    doctorIsCalling = true;\n                }\n                if (element.bookingStatus == 'Payment-Calling' ) {\n                    this.setState({\n                        callingNumberPaymentQueue:element.queueNumber.toString()\n                    })\n                    paymentIsCalling = true;\n                }\n                if (element.bookingStatus == 'Pharmacy-Calling' ) {\n                    this.setState({\n                        callingNumberPharmacyQueue :element.queueNumber.toString()\n                    })\n                    pharmacyIsCalling = true;\n                }\n\n                if (element.bookingStatus == 'Pharmacy-Queued' ) {\n                    pharmacyQueueingDisplay = true;\n                    numberInQueueArrayPharmacy.push(element.queueNumber.toString())\n                }\n                if (element.bookingStatus == 'Payment-Queued' ) {\n                    paymentQueueingDisplay = true;\n                    numberInQueueArrayPayment.push(element.queueNumber.toString())\n                }\n                if (element.bookingStatus == 'Doctor-Queued' ) {\n                    doctorQueueingDisplay = true;\n                    numberInQueueArrayDoctor.push(element.queueNumber.toString())\n                }\n                \n                if (element.bookingStatus == 'Pharmacy-Missed' ) {\n                    pharmacyMissingDisplay = true;\n                    numberMissedArrayPharmacy.push(element.queueNumber.toString())\n                }\n                if (element.bookingStatus == 'Payment-Missed') {\n                    paymentMissingDisplay = true;\n                    numberMissedArrayPayment.push(element.queueNumber.toString())\n                }\n                if (element.bookingStatus == 'Doctor-Missed' ) {\n                    doctorMissingDisplay = true;\n                    numberMissedArrayDoctor.push(element.queueNumber.toString())\n                }\n\n\n                if(numberInQueueArrayDoctor.length != 0 &&  doctorQueueingDisplay == true){\n                    this.setState({\n                        upcomingNumberDoctorQueue: numberInQueueArrayDoctor[0]\n                    })\n                }\n                if(numberInQueueArrayPayment.length != 0 &&  paymentQueueingDisplay == true){\n                    this.setState({\n                        upcomingNumberPaymentQueue: numberInQueueArrayPayment[0]\n                    })\n                }\n                if(numberInQueueArrayPharmacy.length != 0 &&  pharmacyQueueingDisplay == true ){\n                    this.setState({\n                        upcomingNumberPharmacyQueue: numberInQueueArrayPharmacy[0]\n                    })\n                }\n\n\n                if(numberMissedArrayDoctor.length != 0  &&  doctorMissingDisplay == true){\n                    this.setState({\n                        MissedNumberDoctorQueue: numberMissedArrayDoctor[0]\n                    })\n                }\n                if(numberMissedArrayPayment.length != 0   &&  paymentMissingDisplay == true){\n                    this.setState({\n                        MissedNumberPaymentQueue: numberMissedArrayPayment[0]\n                    })\n                }\n                if(numberMissedArrayPharmacy.length != 0 &&  pharmacyMissingDisplay == true){\n                    this.setState({\n                        MissedNumberPharmacyQueue: numberMissedArrayPharmacy[0]\n                    })\n                }\n\n          \n\n\n\n            });\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n\n    render() {\n        return (\n            <StyledSection>\n            <div>\n\n                <div className=\"row\">\n                    <div className=\"column rcorner\"  style={{ 'zIndex': '-1' }}><Banner aria-label=\"career-advice\" imgset={{\n                        desktop: 'https://media.istockphoto.com/vectors/abstract-wavy-halftone-dots-background-vector-id1225681170?k=20&m=1225681170&s=612x612&w=0&h=qFzphEqIRbzXBdzL3kqcfwS2ULgmOpIRFYi_2WSgCto=',\n                        mobile: 'https://media.istockphoto.com/vectors/abstract-wavy-halftone-dots-background-vector-id1225681170?k=20&m=1225681170&s=612x612&w=0&h=qFzphEqIRbzXBdzL3kqcfwS2ULgmOpIRFYi_2WSgCto='\n                    }}>\n                        <span style={{ 'margin': 'auto' }}>Doctor</span>\n                    </Banner>\n                        <div>\n                            <a style={{ 'color': 'grey', 'fontSize': 18 }}>Current Serving:</a>\n                        </div>\n\n                        <b style={{ 'color': 'lightgreen', 'margin': 0, 'fontSize': 80 }}>{this.state.callingNumberDoctorQueue}</b>\n                        <div>\n                            <a style={{ 'color': 'grey', 'fontSize': 18 }}>Upcoming Number:</a>\n                        </div>\n\n                        <b style={{ 'color': 'orange', 'fontSize': 80 }}>{this.state.upcomingNumberDoctorQueue}</b>\n\n                        <div>\n                            <a style={{ 'color': 'grey', 'fontSize': 18 }}>Missed Queue:</a>\n                        </div>\n\n                        <b style={{ 'color': 'red', 'fontSize': 80 }}>{this.state.MissedNumberDoctorQueue}</b>\n                    </div>\n                    <div className=\"column rcorner\"><Banner aria-label=\"career-advice\" imgset={{\n                        desktop: 'https://t3.ftcdn.net/jpg/01/98/05/16/360_F_198051606_qB9GmDGg79tCtoiHkuTtYAQlqpN6feyL.jpg',\n                        mobile: 'https://t3.ftcdn.net/jpg/01/98/05/16/360_F_198051606_qB9GmDGg79tCtoiHkuTtYAQlqpN6feyL.jpg'\n                    }}>\n                        <span style={{ 'margin': 'auto' }}>Payment</span>\n                    </Banner>\n                        <div>\n                            <a style={{ 'color': 'grey', 'fontSize': 18 }}>Current Serving:</a>\n                        </div>\n\n                        <b style={{ 'color': 'lightgreen', 'margin': 0, 'fontSize': 80 }}>{this.state.callingNumberPaymentQueue}</b>\n\n                        <div>\n                            <a style={{ 'color': 'grey', 'fontSize': 18 }}>Upcoming Number:</a>\n                        </div>\n\n                        <b style={{ 'color': 'orange', 'fontSize': 80 }}>{this.state.upcomingNumberPaymentQueue}</b>\n\n                        <div>\n                            <a style={{ 'color': 'grey', 'fontSize': 18 }}>Missed Queue:</a>\n                        </div>\n\n                        <b style={{ 'color': 'red', 'fontSize': 80 }}>{this.state.MissedNumberPaymentQueue}</b>\n                    </div>\n                    <div className=\"column rcorner\"><Banner aria-label=\"career-advice\" imgset={{\n                        desktop: 'https://img.pixers.pics/pho_wat(s3:700/FO/53/85/12/47/700_FO53851247_4fa5696a1fd03408f927d1e7a2f0fcaa.jpg,700,601,cms:2018/10/5bd1b6b8d04b8_220x50-watermark.png,over,480,551,jpg)/posters-wavy-dots-abstract-white-background.jpg.jpg',\n                        mobile: 'https://img.pixers.pics/pho_wat(s3:700/FO/53/85/12/47/700_FO53851247_4fa5696a1fd03408f927d1e7a2f0fcaa.jpg,700,601,cms:2018/10/5bd1b6b8d04b8_220x50-watermark.png,over,480,551,jpg)/posters-wavy-dots-abstract-white-background.jpg.jpg '\n                    }}>\n                        <span style={{ 'margin': 'auto' }}>Pharmacy</span>\n                    </Banner>\n\n                        <div>\n                            <a style={{ 'color': 'grey', 'fontSize': 18 }}>Current Serving:</a>\n                        </div>\n\n\n\n                        <b style={{ 'color': 'lightgreen', 'margin': 0, 'fontSize': 80 }}>{this.state.callingNumberPharmacyQueue}</b>\n\n                        <div>\n                            <a style={{ 'color': 'grey', 'fontSize': 18 }}>Upcoming Number:</a>\n                        </div>\n\n                        <b style={{ 'color': 'orange', 'fontSize': 80 }}>{this.state.upcomingNumberPharmacyQueue}</b>\n\n                        <div>\n                            <a style={{ 'color': 'grey', 'fontSize': 18 }}>Missed Queue:</a>\n                        </div>\n\n                        <b style={{ 'color': 'red', 'fontSize': 80 }}>{this.state.MissedNumberPharmacyQueue}</b>\n                    </div>\n                </div>\n            </div>\n            </StyledSection>\n        )\n    }\n\n}\n\nexport default Dashboard;","/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/service/base.service.tsx",[],[],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/models/booking.tsx",[],[],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/models/doc-elements.tsx",[],[],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/components/bookingsForm.tsx",[],[],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/models/response.tsx",[],[],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/common/components/form/index.ts",[],[],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/common/components/form/input.tsx",[],[],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/common/components/form/button.tsx",[],[],"/Users/jeffrey/Documents/GitHub/queue-system/frontend/src/common/components/form/dateinput.tsx",[],[],{"ruleId":"251","severity":1,"message":"252","line":48,"column":46,"nodeType":"253","messageId":"254","endLine":48,"endColumn":48},{"ruleId":"251","severity":1,"message":"252","line":135,"column":54,"nodeType":"253","messageId":"254","endLine":135,"endColumn":56},{"ruleId":"251","severity":1,"message":"252","line":195,"column":60,"nodeType":"253","messageId":"254","endLine":195,"endColumn":62},{"ruleId":"251","severity":1,"message":"252","line":213,"column":64,"nodeType":"253","messageId":"254","endLine":213,"endColumn":66},{"ruleId":"251","severity":1,"message":"252","line":222,"column":69,"nodeType":"253","messageId":"254","endLine":222,"endColumn":71},{"ruleId":"251","severity":1,"message":"255","line":408,"column":59,"nodeType":"253","messageId":"254","endLine":408,"endColumn":61},{"ruleId":"251","severity":1,"message":"252","line":438,"column":59,"nodeType":"253","messageId":"254","endLine":438,"endColumn":61},{"ruleId":"251","severity":1,"message":"252","line":443,"column":64,"nodeType":"253","messageId":"254","endLine":443,"endColumn":66},{"ruleId":"251","severity":1,"message":"252","line":471,"column":59,"nodeType":"253","messageId":"254","endLine":471,"endColumn":61},{"ruleId":"251","severity":1,"message":"252","line":500,"column":59,"nodeType":"253","messageId":"254","endLine":500,"endColumn":61},{"ruleId":"251","severity":1,"message":"252","line":551,"column":27,"nodeType":"253","messageId":"254","endLine":551,"endColumn":29},{"ruleId":"251","severity":1,"message":"252","line":582,"column":27,"nodeType":"253","messageId":"254","endLine":582,"endColumn":29},{"ruleId":"251","severity":1,"message":"252","line":595,"column":32,"nodeType":"253","messageId":"254","endLine":595,"endColumn":34},{"ruleId":"251","severity":1,"message":"252","line":608,"column":32,"nodeType":"253","messageId":"254","endLine":608,"endColumn":34},{"ruleId":"251","severity":1,"message":"252","line":621,"column":32,"nodeType":"253","messageId":"254","endLine":621,"endColumn":34},{"ruleId":"251","severity":1,"message":"252","line":634,"column":32,"nodeType":"253","messageId":"254","endLine":634,"endColumn":34},{"ruleId":"251","severity":1,"message":"252","line":676,"column":28,"nodeType":"253","messageId":"254","endLine":676,"endColumn":30},{"ruleId":"251","severity":1,"message":"252","line":682,"column":28,"nodeType":"253","messageId":"254","endLine":682,"endColumn":30},{"ruleId":"251","severity":1,"message":"252","line":734,"column":37,"nodeType":"253","messageId":"254","endLine":734,"endColumn":39},{"ruleId":"251","severity":1,"message":"252","line":741,"column":36,"nodeType":"253","messageId":"254","endLine":741,"endColumn":38},{"ruleId":"251","severity":1,"message":"252","line":775,"column":52,"nodeType":"253","messageId":"254","endLine":775,"endColumn":54},{"ruleId":"251","severity":1,"message":"252","line":795,"column":56,"nodeType":"253","messageId":"254","endLine":795,"endColumn":58},{"ruleId":"251","severity":1,"message":"252","line":804,"column":61,"nodeType":"253","messageId":"254","endLine":804,"endColumn":63},{"ruleId":"251","severity":1,"message":"252","line":848,"column":36,"nodeType":"253","messageId":"254","endLine":848,"endColumn":38},{"ruleId":"251","severity":1,"message":"252","line":863,"column":57,"nodeType":"253","messageId":"254","endLine":863,"endColumn":59},{"ruleId":"251","severity":1,"message":"252","line":869,"column":62,"nodeType":"253","messageId":"254","endLine":869,"endColumn":64},{"ruleId":"251","severity":1,"message":"255","line":873,"column":62,"nodeType":"253","messageId":"254","endLine":873,"endColumn":64},{"ruleId":"251","severity":1,"message":"255","line":873,"column":128,"nodeType":"253","messageId":"254","endLine":873,"endColumn":130},{"ruleId":"251","severity":1,"message":"255","line":873,"column":181,"nodeType":"253","messageId":"254","endLine":873,"endColumn":183},{"ruleId":"256","severity":1,"message":"257","line":926,"column":10,"nodeType":"258","messageId":"259","endLine":926,"endColumn":16},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"256","severity":1,"message":"264","line":3,"column":32,"nodeType":"258","messageId":"259","endLine":3,"endColumn":44},{"ruleId":"256","severity":1,"message":"265","line":3,"column":114,"nodeType":"258","messageId":"259","endLine":3,"endColumn":122},{"ruleId":"251","severity":1,"message":"252","line":167,"column":17,"nodeType":"253","messageId":"254","endLine":167,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":182,"column":17,"nodeType":"253","messageId":"254","endLine":182,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":201,"column":17,"nodeType":"253","messageId":"254","endLine":201,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":220,"column":17,"nodeType":"253","messageId":"254","endLine":220,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":242,"column":17,"nodeType":"253","messageId":"254","endLine":242,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":249,"column":39,"nodeType":"253","messageId":"254","endLine":249,"endColumn":41},{"ruleId":"251","severity":1,"message":"252","line":502,"column":74,"nodeType":"253","messageId":"254","endLine":502,"endColumn":76},{"ruleId":"251","severity":1,"message":"252","line":507,"column":78,"nodeType":"253","messageId":"254","endLine":507,"endColumn":80},{"ruleId":"251","severity":1,"message":"252","line":576,"column":89,"nodeType":"253","messageId":"254","endLine":576,"endColumn":91},{"ruleId":"251","severity":1,"message":"252","line":582,"column":78,"nodeType":"253","messageId":"254","endLine":582,"endColumn":80},{"ruleId":"251","severity":1,"message":"252","line":647,"column":120,"nodeType":"253","messageId":"254","endLine":647,"endColumn":122},{"ruleId":"251","severity":1,"message":"252","line":653,"column":82,"nodeType":"253","messageId":"254","endLine":653,"endColumn":84},{"ruleId":"266","severity":1,"message":"267","line":653,"column":91,"nodeType":"268","messageId":"269","endLine":653,"endColumn":93},{"ruleId":"266","severity":1,"message":"267","line":653,"column":136,"nodeType":"268","messageId":"269","endLine":653,"endColumn":138},{"ruleId":"251","severity":1,"message":"252","line":830,"column":70,"nodeType":"253","messageId":"254","endLine":830,"endColumn":72},{"ruleId":"251","severity":1,"message":"252","line":838,"column":77,"nodeType":"253","messageId":"254","endLine":838,"endColumn":79},{"ruleId":"251","severity":1,"message":"252","line":902,"column":120,"nodeType":"253","messageId":"254","endLine":902,"endColumn":122},{"ruleId":"251","severity":1,"message":"252","line":908,"column":83,"nodeType":"253","messageId":"254","endLine":908,"endColumn":85},{"ruleId":"251","severity":1,"message":"252","line":974,"column":112,"nodeType":"253","messageId":"254","endLine":974,"endColumn":114},{"ruleId":"251","severity":1,"message":"252","line":980,"column":85,"nodeType":"253","messageId":"254","endLine":980,"endColumn":87},{"ruleId":"251","severity":1,"message":"252","line":987,"column":83,"nodeType":"253","messageId":"254","endLine":987,"endColumn":85},{"ruleId":"251","severity":1,"message":"252","line":1052,"column":27,"nodeType":"253","messageId":"254","endLine":1052,"endColumn":29},{"ruleId":"256","severity":1,"message":"270","line":1090,"column":13,"nodeType":"258","messageId":"259","endLine":1090,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":1092,"column":32,"nodeType":"253","messageId":"254","endLine":1092,"endColumn":34},{"ruleId":"271","severity":1,"message":"272","line":1099,"column":35,"nodeType":"273","messageId":"274","endLine":1099,"endColumn":54},{"ruleId":"251","severity":1,"message":"252","line":1111,"column":35,"nodeType":"253","messageId":"254","endLine":1111,"endColumn":37},{"ruleId":"251","severity":1,"message":"252","line":1111,"column":100,"nodeType":"253","messageId":"254","endLine":1111,"endColumn":102},{"ruleId":"251","severity":1,"message":"252","line":1114,"column":40,"nodeType":"253","messageId":"254","endLine":1114,"endColumn":42},{"ruleId":"251","severity":1,"message":"252","line":1114,"column":105,"nodeType":"253","messageId":"254","endLine":1114,"endColumn":107},{"ruleId":"251","severity":1,"message":"252","line":1118,"column":40,"nodeType":"253","messageId":"254","endLine":1118,"endColumn":42},{"ruleId":"251","severity":1,"message":"252","line":1118,"column":89,"nodeType":"253","messageId":"254","endLine":1118,"endColumn":91},{"ruleId":"251","severity":1,"message":"252","line":1118,"column":122,"nodeType":"253","messageId":"254","endLine":1118,"endColumn":124},{"ruleId":"251","severity":1,"message":"252","line":1118,"column":163,"nodeType":"253","messageId":"254","endLine":1118,"endColumn":165},{"ruleId":"251","severity":1,"message":"252","line":1121,"column":40,"nodeType":"253","messageId":"254","endLine":1121,"endColumn":42},{"ruleId":"251","severity":1,"message":"252","line":1124,"column":40,"nodeType":"253","messageId":"254","endLine":1124,"endColumn":42},{"ruleId":"251","severity":1,"message":"252","line":1147,"column":107,"nodeType":"253","messageId":"254","endLine":1147,"endColumn":109},{"ruleId":"251","severity":1,"message":"252","line":1147,"column":142,"nodeType":"253","messageId":"254","endLine":1147,"endColumn":144},{"ruleId":"251","severity":1,"message":"252","line":1150,"column":112,"nodeType":"253","messageId":"254","endLine":1150,"endColumn":114},{"ruleId":"251","severity":1,"message":"252","line":1150,"column":147,"nodeType":"253","messageId":"254","endLine":1150,"endColumn":149},{"ruleId":"251","severity":1,"message":"252","line":1154,"column":115,"nodeType":"253","messageId":"254","endLine":1154,"endColumn":117},{"ruleId":"251","severity":1,"message":"252","line":1154,"column":150,"nodeType":"253","messageId":"254","endLine":1154,"endColumn":152},{"ruleId":"251","severity":1,"message":"252","line":1157,"column":107,"nodeType":"253","messageId":"254","endLine":1157,"endColumn":109},{"ruleId":"251","severity":1,"message":"252","line":1157,"column":142,"nodeType":"253","messageId":"254","endLine":1157,"endColumn":144},{"ruleId":"251","severity":1,"message":"252","line":1160,"column":50,"nodeType":"253","messageId":"254","endLine":1160,"endColumn":52},{"ruleId":"251","severity":1,"message":"252","line":1163,"column":49,"nodeType":"253","messageId":"254","endLine":1163,"endColumn":51},{"ruleId":"251","severity":1,"message":"252","line":64,"column":40,"nodeType":"253","messageId":"254","endLine":64,"endColumn":42},{"ruleId":"251","severity":1,"message":"252","line":70,"column":40,"nodeType":"253","messageId":"254","endLine":70,"endColumn":42},{"ruleId":"251","severity":1,"message":"252","line":75,"column":45,"nodeType":"253","messageId":"254","endLine":75,"endColumn":47},{"ruleId":"251","severity":1,"message":"252","line":81,"column":45,"nodeType":"253","messageId":"254","endLine":81,"endColumn":47},{"ruleId":"251","severity":1,"message":"252","line":86,"column":46,"nodeType":"253","messageId":"254","endLine":86,"endColumn":48},{"ruleId":"251","severity":1,"message":"252","line":92,"column":46,"nodeType":"253","messageId":"254","endLine":92,"endColumn":48},{"ruleId":"251","severity":1,"message":"252","line":106,"column":43,"nodeType":"253","messageId":"254","endLine":106,"endColumn":45},{"ruleId":"251","severity":1,"message":"252","line":111,"column":43,"nodeType":"253","messageId":"254","endLine":111,"endColumn":45},{"ruleId":"251","severity":1,"message":"252","line":119,"column":43,"nodeType":"253","messageId":"254","endLine":119,"endColumn":45},{"ruleId":"251","severity":1,"message":"252","line":123,"column":43,"nodeType":"253","messageId":"254","endLine":123,"endColumn":45},{"ruleId":"251","severity":1,"message":"252","line":129,"column":43,"nodeType":"253","messageId":"254","endLine":129,"endColumn":45},{"ruleId":"251","severity":1,"message":"252","line":134,"column":43,"nodeType":"253","messageId":"254","endLine":134,"endColumn":45},{"ruleId":"251","severity":1,"message":"255","line":145,"column":61,"nodeType":"253","messageId":"254","endLine":145,"endColumn":63},{"ruleId":"251","severity":1,"message":"252","line":145,"column":100,"nodeType":"253","messageId":"254","endLine":145,"endColumn":102},{"ruleId":"251","severity":1,"message":"255","line":150,"column":61,"nodeType":"253","messageId":"254","endLine":150,"endColumn":63},{"ruleId":"251","severity":1,"message":"252","line":150,"column":100,"nodeType":"253","messageId":"254","endLine":150,"endColumn":102},{"ruleId":"251","severity":1,"message":"255","line":155,"column":60,"nodeType":"253","messageId":"254","endLine":155,"endColumn":62},{"ruleId":"251","severity":1,"message":"252","line":155,"column":98,"nodeType":"253","messageId":"254","endLine":155,"endColumn":100},{"ruleId":"251","severity":1,"message":"255","line":160,"column":60,"nodeType":"253","messageId":"254","endLine":160,"endColumn":62},{"ruleId":"251","severity":1,"message":"252","line":160,"column":98,"nodeType":"253","messageId":"254","endLine":160,"endColumn":100},{"ruleId":"275","severity":1,"message":"276","line":196,"column":29,"nodeType":"277","endLine":196,"endColumn":76},{"ruleId":"275","severity":1,"message":"276","line":200,"column":29,"nodeType":"277","endLine":200,"endColumn":76},{"ruleId":"275","severity":1,"message":"276","line":206,"column":29,"nodeType":"277","endLine":206,"endColumn":76},{"ruleId":"275","severity":1,"message":"276","line":218,"column":29,"nodeType":"277","endLine":218,"endColumn":76},{"ruleId":"275","severity":1,"message":"276","line":223,"column":29,"nodeType":"277","endLine":223,"endColumn":76},{"ruleId":"275","severity":1,"message":"276","line":229,"column":29,"nodeType":"277","endLine":229,"endColumn":76},{"ruleId":"251","severity":1,"message":"252","line":75,"column":31,"nodeType":"253","messageId":"254","endLine":75,"endColumn":33},{"ruleId":"251","severity":1,"message":"252","line":81,"column":32,"nodeType":"253","messageId":"254","endLine":81,"endColumn":34},{"ruleId":"251","severity":1,"message":"252","line":87,"column":33,"nodeType":"253","messageId":"254","endLine":87,"endColumn":35},{"ruleId":"251","severity":1,"message":"252","line":92,"column":38,"nodeType":"253","messageId":"254","endLine":92,"endColumn":40},{"ruleId":"251","severity":1,"message":"252","line":98,"column":37,"nodeType":"253","messageId":"254","endLine":98,"endColumn":39},{"ruleId":"251","severity":1,"message":"252","line":104,"column":36,"nodeType":"253","messageId":"254","endLine":104,"endColumn":38},{"ruleId":"251","severity":1,"message":"252","line":109,"column":37,"nodeType":"253","messageId":"254","endLine":109,"endColumn":39},{"ruleId":"251","severity":1,"message":"252","line":115,"column":39,"nodeType":"253","messageId":"254","endLine":115,"endColumn":41},{"ruleId":"251","severity":1,"message":"252","line":121,"column":38,"nodeType":"253","messageId":"254","endLine":121,"endColumn":40},{"ruleId":"251","severity":1,"message":"252","line":138,"column":43,"nodeType":"253","messageId":"254","endLine":138,"endColumn":45},{"ruleId":"251","severity":1,"message":"252","line":146,"column":43,"nodeType":"253","messageId":"254","endLine":146,"endColumn":45},{"ruleId":"251","severity":1,"message":"252","line":152,"column":43,"nodeType":"253","messageId":"254","endLine":152,"endColumn":45},{"ruleId":"251","severity":1,"message":"252","line":159,"column":43,"nodeType":"253","messageId":"254","endLine":159,"endColumn":45},{"ruleId":"251","severity":1,"message":"252","line":163,"column":43,"nodeType":"253","messageId":"254","endLine":163,"endColumn":45},{"ruleId":"251","severity":1,"message":"252","line":167,"column":43,"nodeType":"253","messageId":"254","endLine":167,"endColumn":45},{"ruleId":"251","severity":1,"message":"252","line":172,"column":43,"nodeType":"253","messageId":"254","endLine":172,"endColumn":45},{"ruleId":"251","severity":1,"message":"252","line":176,"column":43,"nodeType":"253","messageId":"254","endLine":176,"endColumn":45},{"ruleId":"251","severity":1,"message":"252","line":180,"column":43,"nodeType":"253","messageId":"254","endLine":180,"endColumn":45},{"ruleId":"251","severity":1,"message":"255","line":186,"column":52,"nodeType":"253","messageId":"254","endLine":186,"endColumn":54},{"ruleId":"251","severity":1,"message":"252","line":186,"column":83,"nodeType":"253","messageId":"254","endLine":186,"endColumn":85},{"ruleId":"251","severity":1,"message":"255","line":191,"column":53,"nodeType":"253","messageId":"254","endLine":191,"endColumn":55},{"ruleId":"251","severity":1,"message":"252","line":191,"column":85,"nodeType":"253","messageId":"254","endLine":191,"endColumn":87},{"ruleId":"251","severity":1,"message":"255","line":196,"column":54,"nodeType":"253","messageId":"254","endLine":196,"endColumn":56},{"ruleId":"251","severity":1,"message":"252","line":196,"column":87,"nodeType":"253","messageId":"254","endLine":196,"endColumn":89},{"ruleId":"251","severity":1,"message":"255","line":203,"column":51,"nodeType":"253","messageId":"254","endLine":203,"endColumn":53},{"ruleId":"251","severity":1,"message":"252","line":203,"column":82,"nodeType":"253","messageId":"254","endLine":203,"endColumn":84},{"ruleId":"251","severity":1,"message":"255","line":208,"column":52,"nodeType":"253","messageId":"254","endLine":208,"endColumn":54},{"ruleId":"251","severity":1,"message":"252","line":208,"column":85,"nodeType":"253","messageId":"254","endLine":208,"endColumn":87},{"ruleId":"251","severity":1,"message":"255","line":213,"column":53,"nodeType":"253","messageId":"254","endLine":213,"endColumn":55},{"ruleId":"251","severity":1,"message":"252","line":213,"column":85,"nodeType":"253","messageId":"254","endLine":213,"endColumn":87},{"ruleId":"275","severity":1,"message":"276","line":244,"column":29,"nodeType":"277","endLine":244,"endColumn":76},{"ruleId":"275","severity":1,"message":"276","line":249,"column":29,"nodeType":"277","endLine":249,"endColumn":76},{"ruleId":"275","severity":1,"message":"276","line":255,"column":29,"nodeType":"277","endLine":255,"endColumn":76},{"ruleId":"275","severity":1,"message":"276","line":267,"column":29,"nodeType":"277","endLine":267,"endColumn":76},{"ruleId":"275","severity":1,"message":"276","line":273,"column":29,"nodeType":"277","endLine":273,"endColumn":76},{"ruleId":"275","severity":1,"message":"276","line":279,"column":29,"nodeType":"277","endLine":279,"endColumn":76},{"ruleId":"275","severity":1,"message":"276","line":292,"column":29,"nodeType":"277","endLine":292,"endColumn":76},{"ruleId":"275","severity":1,"message":"276","line":300,"column":29,"nodeType":"277","endLine":300,"endColumn":76},{"ruleId":"275","severity":1,"message":"276","line":306,"column":29,"nodeType":"277","endLine":306,"endColumn":76},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","@typescript-eslint/no-unused-vars","'typeOf' is defined but never used.","Identifier","unusedVar","no-native-reassign",["278"],"no-negated-in-lhs",["279"],"'BoxContainer' is defined but never used.","'LinkList' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'date' is assigned a value but never used.","no-self-assign","'booking.QueueNumber' is assigned to itself.","MemberExpression","selfAssignment","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]