/// <reference types="react" />
export declare const Form: {
    Field: (props: import("./types").FormFieldProps & import("react").RefAttributes<HTMLInputElement>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    FieldGroup: <T>(props: import("./types").FormFieldGroupProps<T> & import("react").RefAttributes<HTMLInputElement>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    Select: <T_1>({ label, errorMessage, id, enableSearch, ...otherProps }: import("./types").FormInputSelectProps<T_1>) => JSX.Element;
    Textarea: (props: import("./types").FormTextareaProps & import("react").RefAttributes<HTMLTextAreaElement>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    DateInput: ({ label, errorMessage, ...otherProps }: import("./types").FormDateInputProps) => JSX.Element;
    CustomField: ({ children, id, ...otherProps }: import("./types").FormCustomFieldProps) => JSX.Element;
    Label: ({ text, children, addon, ...otherProps }: import("./types").FormLabelProps) => JSX.Element;
    LabelAddon: ({ addonType, }: import("./types").FormLabelAddonTriggerProps) => JSX.Element;
    ErrorMessage: (props: import("../types").TextProps) => JSX.Element;
};
