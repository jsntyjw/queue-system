/// <reference types="react" />
interface ContentTitleProps {
    hasDescription?: boolean;
}
export declare const Wrapper: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const ListContainer: import("styled-components").StyledComponent<"ul", any, {}, never>;
export declare const ListTitle: import("styled-components").StyledComponent<"h3", any, import("../types").TextProps, never>;
export declare const ListItemContainer: import("styled-components").StyledComponent<"li", any, {}, never>;
export declare const Link: import("styled-components").StyledComponent<(props: import("../types").TextLinkProps) => JSX.Element, any, {}, never>;
export declare const ContentContainer: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const ContentTitle: import("styled-components").StyledComponent<"h4", any, import("../types").TextProps & ContentTitleProps, never>;
export declare const ContentDescription: import("styled-components").StyledComponent<"p", any, import("../types").TextProps, never>;
export declare const StyledIcon: import("styled-components").StyledComponent<({ type, ...props }: import("../types").IconProps) => JSX.Element, any, {}, never>;
export declare const ViewBar: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const ButtonIcon: import("styled-components").StyledComponent<({ type, ...props }: import("../types").IconProps) => JSX.Element, any, {}, never>;
export {};
