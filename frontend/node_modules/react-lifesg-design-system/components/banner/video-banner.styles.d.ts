/// <reference types="react" />
interface OverlayProps {
    opacity: number;
}
export declare const Wrapper: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const ImageContainer: import("styled-components").StyledComponent<"div", any, {
    src: string;
}, never>;
export declare const VideoContainerLgScreen: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const VideoPlayerLgScreen: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const VideoDarkenOverlay: import("styled-components").StyledComponent<"div", any, OverlayProps, never>;
export declare const VideoContainerSmScreen: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const Content: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const Section: import("styled-components").StyledComponent<(props: import("../types").LayoutProps & import("react").RefAttributes<HTMLDivElement>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, any, {}, never>;
export declare const Container: import("styled-components").StyledComponent<(props: import("../types").LayoutProps & import("react").RefAttributes<HTMLDivElement>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, any, {}, never>;
export declare const Inner: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const ActionContainer: import("styled-components").StyledComponent<"div", any, {}, never>;
export {};
