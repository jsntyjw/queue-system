/// <reference types="react" />
interface IStyleProps {
    show: boolean;
    viewHeight?: number;
}
export declare const Wrapper: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const Container: import("styled-components").StyledComponent<"div", any, IStyleProps, never>;
export declare const Content: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const TopBar: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const CloseButton: import("styled-components").StyledComponent<(props: import("../types").IconButtonProps & import("react").RefAttributes<HTMLButtonElement>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, any, {}, never>;
export declare const CloseIcon: import("styled-components").StyledComponent<({ type, ...props }: import("../types").IconProps) => JSX.Element, any, {}, never>;
export declare const NavItemsWrapper: import("styled-components").StyledComponent<"ul", any, {}, never>;
export declare const DownloadAddonWrapper: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const DownloadAddonTitle: import("styled-components").StyledComponent<"p", any, import("../types").TextProps, never>;
export declare const ImageLinkWrapper: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const ImageLink: import("styled-components").StyledComponent<"a", any, {}, never>;
export {};
