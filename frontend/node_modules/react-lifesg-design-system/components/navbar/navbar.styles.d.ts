/// <reference types="react" />
interface StyleProps {
    compress?: boolean;
    fixed?: boolean;
}
interface ILinkProps {
    selected: boolean;
}
export declare const Wrapper: import("styled-components").StyledComponent<"div", any, StyleProps, never>;
export declare const Nav: import("styled-components").StyledComponent<"nav", any, StyleProps, never>;
export declare const NavItemsWrapper: import("styled-components").StyledComponent<"ul", any, {}, never>;
export declare const MobileMenuButton: import("styled-components").StyledComponent<(props: import("../types").IconButtonProps & import("react").RefAttributes<HTMLButtonElement>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, any, {}, never>;
export declare const NavLinkItem: import("styled-components").StyledComponent<"li", any, {}, never>;
export declare const Link: import("styled-components").StyledComponent<(props: import("../types").TextLinkProps) => JSX.Element, any, ILinkProps, never>;
export declare const LinkIndicator: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const NAVBAR_HEIGHT: {
    notCompress: number;
    compress: number;
};
export {};
